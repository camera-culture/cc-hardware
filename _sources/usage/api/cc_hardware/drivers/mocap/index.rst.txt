
:py:mod:`cc_hardware.drivers.mocap`
===================================


.. py:module:: cc_hardware.drivers.mocap

.. autoapi-nested-parse::

   Motion capture drivers for the cc-hardware package.



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   cc_hardware.drivers.mocap.MotionCaptureSensor
   cc_hardware.drivers.mocap.MotionCaptureSensorConfig




.. py:class:: MotionCaptureSensor(config)


   .. autoapi-inheritance-diagram:: cc_hardware.drivers.mocap.MotionCaptureSensor
      :parts: 1


   An abstract base class for motion capture sensors.


   .. py:method:: accumulate(num_samples = 1)
      :abstractmethod:


      Accumulates the specified number of pose samples from the sensor.

      :Parameters: **num_samples** (*int*) -- The number of samples to accumulate into the pose.
                   The accumulation method (i.e. summing, averaging) may vary depending on
                   the sensor. Defaults to 1.



   .. py:property:: settings
      :type: dict[str, cc_hardware.utils.setting.Setting]

      Retrieves the sensor settings.


   .. py:method:: reset(**kwargs)

      Resets the sensor configuration to its initial state. This method can be
      overridden by subclasses to implement specific reset behavior.

      :Parameters: **\*\*kwargs** -- Additional parameters that may be used for resetting.



   .. py:method:: update(**kwargs)

      Updates the sensor configuration with provided keyword arguments. If there are
      any changes given via the kwargs or in the settings, the configuration is sent
      to the sensor.

      :Parameters: **\*\*kwargs** -- Configuration parameters to update. Keys must match
                   the fields of SensorConfig.

      :returns: *bool* -- True if the configuration was updated. False if no changes were made.



   .. py:property:: is_okay
      :type: bool
      :abstractmethod:

      Checks if the sensor is operational.


   .. py:method:: close()
      :abstractmethod:


      Closes the sensor and releases any resources.



   .. py:method:: calibrate()
      :abstractmethod:


      Calibrates the sensor.



   .. py:method:: __del__()

      Destructor to ensure the sensor is properly closed.



.. py:class:: MotionCaptureSensorConfig


   .. autoapi-inheritance-diagram:: cc_hardware.drivers.mocap.MotionCaptureSensorConfig
      :parts: 1


   Configuration for SPAD sensors.


   .. py:property:: settings
      :type: dict[str, cc_hardware.utils.setting.Setting]

      Retrieves the sensor settings.


