
:py:mod:`cc_hardware.drivers.stepper_motors.stepper_controller`
===============================================================


.. py:module:: cc_hardware.drivers.stepper_motors.stepper_controller

.. autoapi-nested-parse::

   Stepper motor controller classes.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cc_hardware.drivers.stepper_motors.stepper_controller.StepperController
   cc_hardware.drivers.stepper_motors.stepper_controller.SnakeStepperController




.. py:class:: StepperController


   .. autoapi-inheritance-diagram:: cc_hardware.drivers.stepper_motors.stepper_controller.StepperController
      :parts: 1


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: get_position(iter)
      :abstractmethod:


      Get the position for the given iteration.

      :Parameters: **iter** (*int*) -- The iteration number.

      :returns: *list[float]* -- The position for the given iteration.



.. py:class:: SnakeStepperController(axis_configs)


   .. autoapi-inheritance-diagram:: cc_hardware.drivers.stepper_motors.stepper_controller.SnakeStepperController
      :parts: 1


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: get_position(iter)

      Get the position that the controller should move to for the given iteration.

      :Parameters: **iter** (*int*) -- The current iteration index.

      :returns: *dict* --

                A dictionary with axis names as keys and current positions as values.
                      Returns an empty dictionary if the iteration exceeds total positions.



