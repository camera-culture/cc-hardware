:orphan:


:py:mod:`cc_hardware.drivers.spads.spad_wrappers`
=================================================


.. py:module:: cc_hardware.drivers.spads.spad_wrappers


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cc_hardware.drivers.spads.spad_wrappers.SPADWrapperConfig
   cc_hardware.drivers.spads.spad_wrappers.SPADWrapper
   cc_hardware.drivers.spads.spad_wrappers.SPADMergeWrapperConfig
   cc_hardware.drivers.spads.spad_wrappers.SPADMergeWrapper
   cc_hardware.drivers.spads.spad_wrappers.SPADMovingAverageWrapperConfig
   cc_hardware.drivers.spads.spad_wrappers.SPADMovingAverageWrapper
   cc_hardware.drivers.spads.spad_wrappers.SPADBackgroundRemovalWrapperConfig
   cc_hardware.drivers.spads.spad_wrappers.SPADBackgroundRemovalWrapper
   cc_hardware.drivers.spads.spad_wrappers.SPADScalingWrapperConfig
   cc_hardware.drivers.spads.spad_wrappers.SPADScalingWrapper




.. py:class:: SPADWrapperConfig



   Configuration for SPAD sensor wrapper.

   :Parameters: **wrapped** (*SPADSensorConfig*) -- The configuration for the wrapped sensor.


   .. py:property:: settings
      :type: dict[str, Any]

      Retrieves the wrapped sensor settings.


.. py:class:: SPADWrapper(config, **kwargs)



   A wrapper class for SPAD sensors that provides additional functionality and
   abstraction. This class is designed to wrap an existing SPAD sensor and expose
   additional methods and properties to simplify sensor management and data
   collection.

   :Parameters: **config** (*SPADWrapperConfig*) -- The configuration for the sensor wrapper.


   .. py:method:: reset(**kwargs)

      Resets the sensor configuration to its initial state.



   .. py:property:: unwrapped
      :type: cc_hardware.drivers.spads.SPADSensor

      Returns the underlying SPAD sensor.


.. py:class:: SPADMergeWrapperConfig



   Configuration for SPAD sensor merge wrapper.

   :Parameters: * **merge_rows** (*bool*) -- Whether to merge the rows of the histogram.
                * **merge_cols** (*bool*) -- Whether to merge the columns of the histogram.
                * **merge_all** (*bool*) -- Whether to merge all histogram data. If True, merge_rows and
                  merge_cols are ignored.


   .. py:property:: settings
      :type: dict[str, Any]

      Retrieves the wrapped sensor settings.


.. py:class:: SPADMergeWrapper(config, **kwargs)



   A wrapper class for SPAD sensors that provides additional functionality and
   abstraction. This class is designed to wrap an existing SPAD sensor and expose
   additional methods and properties to simplify sensor management and data
   collection.

   :Parameters: **config** (*SPADWrapperConfig*) -- The configuration for the sensor wrapper.


   .. py:method:: reset(**kwargs)

      Resets the sensor configuration to its initial state.



   .. py:property:: unwrapped
      :type: cc_hardware.drivers.spads.SPADSensor

      Returns the underlying SPAD sensor.


.. py:class:: SPADMovingAverageWrapperConfig



   Configuration for SPAD sensor moving average wrapper.

   :Parameters: **window_size** (*int*) -- The size of the moving average window.


   .. py:property:: settings
      :type: dict[str, Any]

      Retrieves the wrapped sensor settings.


.. py:class:: SPADMovingAverageWrapper(config, **kwargs)



   A wrapper class for SPAD sensors that provides additional functionality and
   abstraction. This class is designed to wrap an existing SPAD sensor and expose
   additional methods and properties to simplify sensor management and data
   collection.

   :Parameters: **config** (*SPADWrapperConfig*) -- The configuration for the sensor wrapper.


   .. py:method:: reset()

      Resets the sensor configuration to its initial state.



   .. py:property:: unwrapped
      :type: cc_hardware.drivers.spads.SPADSensor

      Returns the underlying SPAD sensor.


.. py:class:: SPADBackgroundRemovalWrapperConfig



   Configuration for SPAD sensor background removal wrapper. Note this only removes
   the background from the histogram.

   :Parameters: * **pkl_spad** (*PklSPADSensorConfig*) -- The configuration for the wrapped PklSPAD
                  sensor.
                * **clip** (*bool*) -- Whether to clip the histogram data to zero after background
                  removal. If True, negative values in the histogram will be set to zero.
                * **remove_background** (*bool*) -- Whether to remove the background from the data.


   .. py:property:: settings
      :type: dict[str, Any]

      Retrieves the wrapped sensor settings.


.. py:class:: SPADBackgroundRemovalWrapper(config, **kwargs)



   A wrapper class for SPAD sensors that provides additional functionality and
   abstraction. This class is designed to wrap an existing SPAD sensor and expose
   additional methods and properties to simplify sensor management and data
   collection.

   :Parameters: **config** (*SPADWrapperConfig*) -- The configuration for the sensor wrapper.


   .. py:method:: close()

      Closes the PklSPAD sensor.



   .. py:method:: reset(**kwargs)

      Resets the sensor configuration to its initial state.



   .. py:property:: unwrapped
      :type: cc_hardware.drivers.spads.SPADSensor

      Returns the underlying SPAD sensor.


.. py:class:: SPADScalingWrapperConfig



   Configuration for SPAD sensor scaling wrapper.
   This wrapper scales the histogram data by a given factor.

   :Parameters: **scale** (*float*) -- The factor by which to scale the histogram.


   .. py:property:: settings
      :type: dict[str, Any]

      Retrieves the wrapped sensor settings.


.. py:class:: SPADScalingWrapper(config, **kwargs)



   A wrapper class for SPAD sensors that scales the accumulated histogram data.


   .. py:method:: accumulate(*args, **kwargs)

      Accumulates data from the wrapped sensor and scales the histogram.



   .. py:method:: reset(**kwargs)

      Resets the sensor configuration to its initial state.



   .. py:property:: unwrapped
      :type: cc_hardware.drivers.spads.SPADSensor

      Returns the underlying SPAD sensor.


