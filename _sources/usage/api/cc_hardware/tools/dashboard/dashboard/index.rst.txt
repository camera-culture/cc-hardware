:orphan:


:py:mod:`cc_hardware.tools.dashboard.dashboard`
===============================================


.. py:module:: cc_hardware.tools.dashboard.dashboard


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cc_hardware.tools.dashboard.dashboard.DashboardConfig
   cc_hardware.tools.dashboard.dashboard.Dashboard




.. py:class:: DashboardConfig


   .. autoapi-inheritance-diagram:: cc_hardware.tools.dashboard.dashboard.DashboardConfig
      :parts: 1


   Configuration for dashboard GUIs.

   :ivar num_frames: Number of frames to process. Default is 1,000,000.
   :vartype num_frames: int
   :ivar user_callback: User-defined callback
                        function. It should accept the dashboard instance as an argument.

   :vartype user_callback: Callable[[Self], None], optional


.. py:class:: Dashboard(config)


   .. autoapi-inheritance-diagram:: cc_hardware.tools.dashboard.dashboard.Dashboard
      :parts: 1


   Abstract base class for dashboards.

   :Parameters: **config** (*DashboardConfig*) -- The dashboard configuration


   .. py:method:: setup()
      :abstractmethod:


      Abstract method to set up the dashboard. Should be independent of whether the
      dashboard is run in a loop or not.



   .. py:method:: run()
      :abstractmethod:


      Abstract method to display the dashboard. Blocks until the dashboard is closed.



   .. py:method:: update(frame)
      :abstractmethod:


      Method to update dashboard synchronously. This should be capable of being
      used independent of the loop, as in a main thread and non-blocking.

      :Parameters: **frame** (*int*) -- Current frame number.



