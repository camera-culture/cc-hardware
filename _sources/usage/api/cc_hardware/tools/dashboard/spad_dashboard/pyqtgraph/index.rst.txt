
:py:mod:`cc_hardware.tools.dashboard.spad_dashboard.pyqtgraph`
==============================================================


.. py:module:: cc_hardware.tools.dashboard.spad_dashboard.pyqtgraph

.. autoapi-nested-parse::

   SPAD dashboard based on PyQtGraph for real-time visualization.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cc_hardware.tools.dashboard.spad_dashboard.pyqtgraph.PyQtGraphDashboardConfig
   cc_hardware.tools.dashboard.spad_dashboard.pyqtgraph.DashboardWindow
   cc_hardware.tools.dashboard.spad_dashboard.pyqtgraph.PyQtGraphDashboard




.. py:class:: PyQtGraphDashboardConfig


   .. autoapi-inheritance-diagram:: cc_hardware.tools.dashboard.spad_dashboard.pyqtgraph.PyQtGraphDashboardConfig
      :parts: 1


   Configuration for the PyQtGraph dashboard.


.. py:class:: DashboardWindow(parent=None)


   .. autoapi-inheritance-diagram:: cc_hardware.tools.dashboard.spad_dashboard.pyqtgraph.DashboardWindow
      :parts: 1


   Custom window class with a fixed settings panel on the right.


   .. py:method:: init_ui(settings)

      Initializes the user interface with a settings panel and plots.



   .. py:method:: enable_point_cloud_view()

      Creates a resizable 3-D pane under the histogram grid.



   .. py:method:: enable_depth_view()

      Adds a depthâ€‘image pane under any existing plots.



   .. py:method:: keyPressEvent(event)

      Handles key press events to allow exiting the application.



.. py:class:: PyQtGraphDashboard(config, sensor)


   .. autoapi-inheritance-diagram:: cc_hardware.tools.dashboard.spad_dashboard.pyqtgraph.PyQtGraphDashboard
      :parts: 1


   Dashboard implementation using PyQtGraph for real-time visualization.


   .. py:method:: setup()

      Sets up the PyQtGraph plot layout and styling.

      :Parameters: **fullscreen** (*bool*) -- Whether to display in fullscreen mode.



   .. py:method:: run()

      Executes the PyQtGraph dashboard application.

      :Parameters: * **fullscreen** (*bool*) -- Whether to display in fullscreen mode.
                   * **headless** (*bool*) -- Whether to run in headless mode.
                   * **save** (*Path | None*) -- If provided, save the output to this file.



   .. py:method:: update(frame, *, data = None, step = True)

      Updates the histogram data in the plots.



   .. py:property:: sensor
      :type: cc_hardware.drivers.spads.SPADSensor

      Retrieves the SPAD sensor instance.


   .. py:property:: min_bin
      :type: int

      Minimum bin value for the histogram.

      Supports variable sized bins based on the sensor configuration.


   .. py:property:: max_bin
      :type: int

      Maximum bin value for the histogram.

      Supports variable sized bins based on the sensor configuration.


