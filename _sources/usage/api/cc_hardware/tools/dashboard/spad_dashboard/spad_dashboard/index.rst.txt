
:py:mod:`cc_hardware.tools.dashboard.spad_dashboard.spad_dashboard`
===================================================================


.. py:module:: cc_hardware.tools.dashboard.spad_dashboard.spad_dashboard

.. autoapi-nested-parse::

   Dashboard for SPAD sensors.

   This module provides a dashboard for visualizing SPAD sensor data in real-time. There
   are three implementations available with different supported features:

   - :class:`~cc_hardware.tools.dashboard.spad_dashboard.matplotlib.MatplotlibDashboard`:
       Uses Matplotlib for visualization.
   - :class:`~cc_hardware.tools.dashboard.spad_dashboard.pyqtgraph.PyQtGraphDashboard`:
       Uses PyQtGraph for visualization.
   - :class:`~cc_hardware.tools.dashboard.spad_dashboard.dash.DashDashboard`:
       Uses Dash and Plotly for web-based visualization.

   You can specify user-defined callbacks to be executed on each update of the dashboard.

   Example:

   .. code-block:: python

       from cc_hardware.drivers.spads import SPADSensor, SPADDashboard

       sensor = SPADSensor.create_from_registry(...)
       dashboard = SPADDashboard.create_from_registry(
           ...,
           sensor=sensor,
           user_callback=my_callback,
       )

       dashboard.run()



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cc_hardware.tools.dashboard.spad_dashboard.spad_dashboard.SPADDashboardConfig
   cc_hardware.tools.dashboard.spad_dashboard.spad_dashboard.SPADDashboard




.. py:class:: SPADDashboardConfig


   .. autoapi-inheritance-diagram:: cc_hardware.tools.dashboard.spad_dashboard.spad_dashboard.SPADDashboardConfig
      :parts: 1


   Configuration for SPAD sensor dashboards.

   When defining a new dashboard, create a subclass of this configuration class and add
   any necessary parameters.

   :ivar min_bin: Minimum bin value for histogram.
   :vartype min_bin: int, optional
   :ivar max_bin: Maximum bin value for histogram.
   :vartype max_bin: int, optional
   :ivar autoscale: Whether to autoscale the histogram. Default is True.
   :vartype autoscale: bool
   :ivar ylim: Y-axis limit for the histogram.
   :vartype ylim: float, optional
   :ivar channel_mask: List of channels to display.

   :vartype channel_mask: list[int], optional


.. py:class:: SPADDashboard(config, sensor)


   .. autoapi-inheritance-diagram:: cc_hardware.tools.dashboard.spad_dashboard.spad_dashboard.SPADDashboard
      :parts: 1


   Abstract base class for SPAD sensor dashboards.

   :Parameters: * **config** (*SPADDashboardConfig*) -- The dashboard configuration
                * **sensor** (*SPADSensor*) -- The SPAD sensor instance.


   .. py:property:: sensor
      :type: cc_hardware.drivers.spads.SPADSensor

      Retrieves the SPAD sensor instance.


   .. py:property:: min_bin
      :type: int

      Minimum bin value for the histogram.

      Supports variable sized bins based on the sensor configuration.


   .. py:property:: max_bin
      :type: int

      Maximum bin value for the histogram.

      Supports variable sized bins based on the sensor configuration.


   .. py:method:: setup()
      :abstractmethod:


      Abstract method to set up the dashboard. Should be independent of whether the
      dashboard is run in a loop or not.



   .. py:method:: run()
      :abstractmethod:


      Abstract method to display the dashboard. Blocks until the dashboard is closed.



   .. py:method:: update(frame)
      :abstractmethod:


      Method to update dashboard synchronously. This should be capable of being
      used independent of the loop, as in a main thread and non-blocking.

      :Parameters: **frame** (*int*) -- Current frame number.



