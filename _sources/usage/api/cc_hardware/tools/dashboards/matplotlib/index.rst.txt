
:py:mod:`cc_hardware.tools.dashboards.matplotlib`
=================================================


.. py:module:: cc_hardware.tools.dashboards.matplotlib

.. autoapi-nested-parse::

   SPAD dashboard based on Matplotlib for real-time visualization.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cc_hardware.tools.dashboards.matplotlib.MatplotlibDashboardConfig
   cc_hardware.tools.dashboards.matplotlib.MatplotlibDashboard



Functions
~~~~~~~~~

.. autoapisummary::

   cc_hardware.tools.dashboards.matplotlib.save_animation



.. py:function:: save_animation(ani, filename)

   Saves the animation to a file.

   :Parameters: * **ani** (*FuncAnimation*) -- The animation object to save.
                * **filename** (*str*) -- The filename to save the output.


.. py:class:: MatplotlibDashboardConfig


   .. autoapi-inheritance-diagram:: cc_hardware.tools.dashboards.matplotlib.MatplotlibDashboardConfig
      :parts: 1


   Configuration for the Matplotlib dashboard.


.. py:class:: MatplotlibDashboard


   .. autoapi-inheritance-diagram:: cc_hardware.tools.dashboards.matplotlib.MatplotlibDashboard
      :parts: 1


   Dashboard implementation using Matplotlib for visualization.


   .. py:method:: setup()

      Sets up the Matplotlib plot layout and styling.



   .. py:method:: run()

      Executes the Matplotlib dashboard with real-time updates.



   .. py:method:: update(frame, *, histograms = None)

      Updates the histogram data for each frame.

      :Parameters: **frame** (*int*) -- Current frame number.

      :keyword histograms: The histogram data to update. If not provided, the
                           sensor will be used to accumulate the histogram data.
      :kwtype histograms: np.ndarray



   .. py:method:: adjust_ylim(histograms)

      Adjusts the Y-axis limits based on the histogram data.

      :Parameters: **histograms** (*np.ndarray*) -- Histogram data for all channels.



