
:py:mod:`cc_hardware.algos.modeling_utils`
==========================================


.. py:module:: cc_hardware.algos.modeling_utils

.. autoapi-nested-parse::

   Datasets and data processing utils for modeling



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cc_hardware.algos.modeling_utils.HistogramDataset




.. py:class:: HistogramDataset(pkl_path = None, rolling_window=1, predict_magnitude = False, merge = False)


   .. autoapi-inheritance-diagram:: cc_hardware.algos.modeling_utils.HistogramDataset
      :parts: 1


   Histogram dataset for model training and analysis. Contains a corresponding list of inputs (histograms) and targets.
   Can manipulate inputs and targets without affecting raw data.


   .. py:method:: set_start_bin(start_bin)

      Sets the start bin for the input data.



   .. py:method:: set_end_bin(end_bin)

      Sets the end bin for the input data.



   .. py:method:: get_raw_bin_num()

      Returns the number of bins in the raw input data (with no transformations applied).

      :returns: *int* -- The number of bins in the raw input data.



   .. py:method:: get_bin_num()

      Returns the number of bins in the input data.

      :returns: *int* -- The number of bins in the input data.



   .. py:method:: augment(factor, std_multiplier = 1.0)

      Augments the dataset by repeating the inputs and targets a given number of times.

      :Parameters: * **factor** (*int*) -- The number of times to repeat the inputs and targets.
                   * **std_multiplier** (*float*) -- Number of standard deviations to generate augmented sample from.



   .. py:method:: get_mean_capture()

      Gets the mean of all input captures in the dataset.

      :returns: *torch.Tensor* -- The mean capture.



   .. py:method:: set_zero(zero)

      Sets the empty capture of the dataset, subtracting it from all inputs.



   .. py:method:: clip_negative()

      Clips negative input values to zero.



   .. py:method:: reset_transformations()

      Resets the transformations applied to the dataset.



   .. py:method:: __len__()

      Returns the number of samples in the dataset.

      :returns: *int* -- The number of samples in the dataset



   .. py:method:: __getitem__(idx)

      Returns the item at index position (idx).

      :returns: *(torch.Tensor, torch.Tensor)* -- The (input, target) at index position (idx)



   .. py:method:: __add__(other)

      Joins two datasets. Use only on datasets confirmed to contain data of the same dimension.



