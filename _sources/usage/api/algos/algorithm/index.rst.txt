:py:mod:`algos.algorithm`
=========================


.. py:module:: algos.algorithm

.. autoapi-nested-parse::

   This module contains the Algorithm interface that all algorithms should implement.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   algos.algorithm.Algorithm




.. py:class:: Algorithm


   Bases: :py:obj:`cc_hardware.utils.registry.Registry`, :py:obj:`abc.ABC`

   This is an algorithm interface that all algorithms should implement.

   .. py:property:: is_okay
      :type: bool
      :abstractmethod:

      Returns True if the algorithm is okay to run, False otherwise.
      An algorithm may not be okay if it either has not been initialized properly or
      if it has encountered an error.

   .. py:method:: run()
      :abstractmethod:

      Runs the algorithm and returns the result.

      Each subclass can add additional parameters to this method and specify it's
      return type.


   .. py:method:: close()

      Closes the algorithm and releases any resources. A default implementation
      is provided here, but subclasses can override this method to provide their own
      implementation.



