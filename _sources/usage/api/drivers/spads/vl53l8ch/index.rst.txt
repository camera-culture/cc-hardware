:orphan:

:py:mod:`drivers.spads.vl53l8ch`
================================


.. py:module:: drivers.spads.vl53l8ch


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   drivers.spads.vl53l8ch.VL53L8CHHistogram
   drivers.spads.vl53l8ch.VL53L8CHSensor




.. py:class:: VL53L8CHHistogram


   Bases: :py:obj:`cc_hardware.drivers.sensor.SensorData`

   Abstract base class for handling sensor data.

   .. py:method:: reset() -> None

      Resets the sensor data to its initial state.


   .. py:method:: process(row: list[str]) -> bool

      Processes a new row of data.

      :Parameters: **row** (*list[Any]*) -- Row of sensor data to process.


   .. py:method:: get_data() -> numpy.ndarray

      Retrieves the processed sensor data.

      :returns: *np.ndarray* -- The processed data.



.. py:class:: VL53L8CHSensor(*, port: str | None = None, debug: bool = False)


   Bases: :py:obj:`cc_hardware.drivers.spads.spad.SPADSensor`

   An abstract base class for Single-Photon Avalanche Diode (SPAD) sensors, designed
   to manage histogram-based measurements. This class defines methods and properties
   related to collecting and analyzing histogram data.

   Inherits:
       Sensor: The base class for all sensors in the system.

   .. py:property:: is_okay
      :type: bool

      Checks if the sensor is operational.

   .. py:property:: num_bins
      :type: int

      Returns the number of bins in the sensor's histogram. This indicates the
      number of discrete values or ranges that the sensor can measure. The total
      distance a sensor can measure is equal to the number of bins multiplied by
      the bin width.

      :returns: *int* -- The total number of bins in the histogram.

   .. py:property:: bin_width
      :type: float

      Returns the width of each bin in the histogram. This indicates the time or
      distance resolution of the sensor, representing the range covered by each bin.
      The exact units should be documented in the derived sensor class.

      :returns: *float* -- The width of each bin in the histogram.

   .. py:property:: resolution
      :type: tuple[int, int]

      Returns the resolution of the sensor as a tuple (width, height). This indicates
      the spatial resolution of the sensor, where the width and height refer to the
      number of pixels or sampling points in the respective dimensions.

      :returns: *tuple[int, int]* --

                A tuple representing the sensor's resolution
                    (width, height).

   .. py:method:: close() -> None

      Closes the sensor and releases any resources.


   .. py:method:: accumulate(num_samples: int, *, average: bool = True) -> numpy.ndarray | list[numpy.ndarray]

      Accumulates the specified number of histogram samples from the sensor.

      :Parameters: **num_samples** (*int*) -- The number of samples to accumulate into the histogram.
                   The accumulation method (i.e. summing, averaging) may vary depending on
                   the sensor.



