Search.setIndex({"docnames": ["_templates/python/module", "contributing", "index", "usage/api", "usage/api/algos/algorithm/index", "usage/api/algos/aruco/index", "usage/api/algos/index", "usage/api/drivers/cameras/camera/index", "usage/api/drivers/cameras/flir/index", "usage/api/drivers/cameras/index", "usage/api/drivers/cameras/pkl/index", "usage/api/drivers/cameras/realsense/index", "usage/api/drivers/index", "usage/api/drivers/safe_serial/index", "usage/api/drivers/sensor/index", "usage/api/drivers/spads/index", "usage/api/drivers/spads/pkl/index", "usage/api/drivers/spads/spad/index", "usage/api/drivers/spads/tmf8828/index", "usage/api/drivers/spads/vl53l8ch/index", "usage/api/drivers/stepper_motors/index", "usage/api/drivers/stepper_motors/kinesis_stepper/index", "usage/api/drivers/stepper_motors/stepper_controller/index", "usage/api/drivers/stepper_motors/stepper_motor/index", "usage/api/drivers/stepper_motors/stepper_system/index", "usage/api/drivers/stepper_motors/telemetrix_stepper/index", "usage/api/utils/asyncio_utils/index", "usage/api/utils/blocking_deque/index", "usage/api/utils/constants/index", "usage/api/utils/file_handlers/index", "usage/api/utils/index", "usage/api/utils/logger/index", "usage/api/utils/manager/index", "usage/api/utils/plotting/index", "usage/api/utils/registry/index", "usage/api/utils/singleton/index", "usage/api/utils/transformations/index", "usage/cli", "usage/index"], "filenames": ["_templates/python/module.rst", "contributing.md", "index.md", "usage/api.md", "usage/api/algos/algorithm/index.rst", "usage/api/algos/aruco/index.rst", "usage/api/algos/index.rst", "usage/api/drivers/cameras/camera/index.rst", "usage/api/drivers/cameras/flir/index.rst", "usage/api/drivers/cameras/index.rst", "usage/api/drivers/cameras/pkl/index.rst", "usage/api/drivers/cameras/realsense/index.rst", "usage/api/drivers/index.rst", "usage/api/drivers/safe_serial/index.rst", "usage/api/drivers/sensor/index.rst", "usage/api/drivers/spads/index.rst", "usage/api/drivers/spads/pkl/index.rst", "usage/api/drivers/spads/spad/index.rst", "usage/api/drivers/spads/tmf8828/index.rst", "usage/api/drivers/spads/vl53l8ch/index.rst", "usage/api/drivers/stepper_motors/index.rst", "usage/api/drivers/stepper_motors/kinesis_stepper/index.rst", "usage/api/drivers/stepper_motors/stepper_controller/index.rst", "usage/api/drivers/stepper_motors/stepper_motor/index.rst", "usage/api/drivers/stepper_motors/stepper_system/index.rst", "usage/api/drivers/stepper_motors/telemetrix_stepper/index.rst", "usage/api/utils/asyncio_utils/index.rst", "usage/api/utils/blocking_deque/index.rst", "usage/api/utils/constants/index.rst", "usage/api/utils/file_handlers/index.rst", "usage/api/utils/index.rst", "usage/api/utils/logger/index.rst", "usage/api/utils/manager/index.rst", "usage/api/utils/plotting/index.rst", "usage/api/utils/registry/index.rst", "usage/api/utils/singleton/index.rst", "usage/api/utils/transformations/index.rst", "usage/cli.md", "usage/index.md"], "titles": ["&lt;no title&gt;", "Contributing", "Camera Culture Hardware Repo", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos.aruco</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.camera</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.flir</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.pkl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.realsense</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.safe_serial</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.sensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.pkl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.spad</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.tmf8828</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.vl53l8ch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.kinesis_stepper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_motor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_system</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.telemetrix_stepper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.asyncio_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.blocking_deque</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.file_handlers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.plotting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.singleton</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.transformations</span></code>", "CLI Documentation", "Reference"], "terms": {"obj": 0, "displai": [0, 5, 33], "orphan": 0, "endif": 0, "name": [0, 1, 18, 22, 24, 25, 27, 34], "length": 0, "loc_fil": 0, "jinja_env": 0, "test": [0, 16, 23], "set": [0, 1, 8, 11, 18, 21, 25, 31, 33], "readm": [0, 1, 2], "url_root": 0, "pathnam": 0, "md": [0, 1, 2], "i": [0, 1, 2, 4, 5, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 27, 29, 31, 32, 34, 35, 37], "docstr": [0, 1], "autoapi": [0, 1], "nest": 0, "pars": [0, 1], "indent": 0, "3": [0, 8, 18, 24, 37], "block": [0, 23, 24, 25, 27], "subpackag": 0, "visible_subpackag": 0, "selectattr": 0, "list": [0, 5, 11, 13, 14, 16, 18, 19, 21, 22, 24, 25, 26, 29], "toctre": 0, "titlesonli": 0, "maxdepth": 0, "short_nam": 0, "index": [0, 1, 22, 26, 27, 29], "rst": 0, "endfor": 0, "endblock": 0, "submodul": 0, "visible_submodul": 0, "1": [0, 1, 5, 8, 13, 18, 21, 24, 29, 37], "content": [0, 1], "all": [0, 1, 2, 4, 13, 17, 18, 19, 22, 23, 26, 29, 32], "none": [0, 5, 8, 10, 11, 13, 14, 16, 18, 19, 21, 23, 24, 25, 27, 29, 31, 32, 33, 37], "visible_children": 0, "children": 0, "elif": 0, "type": [0, 4, 13, 21, 32, 34, 35], "equalto": 0, "packag": [0, 1, 8, 9, 15, 20, 31, 37], "els": 0, "rejectattr": 0, "import": [0, 2, 31, 32, 35], "titl": [0, 1], "visible_class": 0, "class": [0, 1, 2, 36], "visible_funct": 0, "function": [0, 1, 2, 5, 29, 32, 35], "visible_attribut": 0, "data": [0, 1, 2, 8, 10, 13, 14, 16, 17, 18, 19, 29, 33, 37], "show": [0, 5, 33, 37], "modul": [0, 36], "summari": 0, "autoapi_opt": 0, "scope": 0, "klass": 0, "id": [0, 18, 25], "attribut": [0, 18, 24, 27, 31, 37], "obj_item": 0, "render": 0, "0": [0, 1, 8, 11, 21, 28, 33, 37], "repositori": [1, 2], "fairli": 1, "easi": 1, "so": [1, 8], "pleas": 1, "see": [1, 18, 24], "below": 1, "instruct": [1, 8], "how": [1, 18, 24, 31], "actual": [1, 16], "make": [1, 2, 26, 27], "thi": [1, 2, 4, 5, 8, 10, 11, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 29, 31, 32, 35, 36, 37], "project": 1, "There": 1, "ar": [1, 2, 5, 21, 23, 24, 25, 29, 32], "two": 1, "form": 1, "simpl": [1, 8, 11, 21], "ad": [1, 18, 24], "within": [1, 2], "doc": 1, "folder": 1, "written": [1, 13, 29, 31], "markdown": 1, "convert": [1, 25], "html": 1, "through": [1, 25], "myst_pars": 1, "sphinx": 1, "To": [1, 2, 8], "well": [1, 11], "you": [1, 2, 8, 23, 25], "want": 1, "symlink": [1, 2], "A": [1, 4, 5, 7, 8, 10, 13, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 31, 34, 35], "conda": 1, "virtualenv": 1, "add": [1, 4, 32], "isol": 1, "python": [1, 8], "environ": [1, 27], "reduc": 1, "conflict": 1, "amongst": 1, "It": [1, 8, 11, 13, 18, 21, 23, 29, 31, 32, 35], "highli": 1, "recommend": 1, "us": [1, 2, 5, 8, 13, 16, 18, 21, 23, 24, 25, 27, 31, 32, 34, 35, 37], "one": [1, 8, 11, 35, 37], "normal": [1, 37], "git": [1, 2], "http": 1, "github": [1, 2], "com": [1, 2], "camera": [1, 5, 12, 32], "cultur": 1, "cc": [1, 9, 15, 20], "hardwar": [1, 9, 15, 16, 20, 23], "cd": [1, 2], "sinc": 1, "organ": [1, 18], "monorepo": [1, 2], "need": [1, 2, 8, 35], "poetri": [1, 2], "The": [1, 2, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 31, 32, 34, 35], "develop": [1, 2, 18], "mode": [1, 2, 18, 33, 37], "e": [1, 2, 17, 19, 23, 24], "symbol": 1, "link": 1, "immedi": 1, "reflect": [1, 2], "pip": [1, 2, 8], "action": 1, "automat": [1, 2], "site": [1, 8], "page": 1, "host": 1, "static": [1, 29], "updat": [1, 18], "have": [1, 2, 18, 23, 24], "push": 1, "main": 1, "branch": 1, "onc": 1, "rebuild": 1, "ensur": [1, 8, 11, 14, 23, 24, 27, 29, 32, 35], "error": [1, 4, 23], "befor": [1, 13, 21, 32], "do": [1, 8, 31], "mai": [1, 4, 8, 17, 19, 23, 31], "get": [1, 7, 8, 10, 11, 21, 22, 24, 27, 29], "an": [1, 4, 5, 7, 13, 16, 17, 19, 21, 22, 23, 26, 27, 29, 31, 34, 35, 37], "email": 1, "from": [1, 5, 7, 8, 10, 11, 13, 16, 17, 18, 19, 23, 25, 27, 29, 31, 32, 33, 34, 35, 37], "someth": [1, 13], "bad": 1, "happen": [1, 13], "tag": 1, "exampl": [1, 8, 18, 24, 29, 31, 32, 35], "v3": 1, "follow": [1, 2, 8], "pkg": [1, 2], "algo": [1, 2, 3], "contain": [1, 2, 4, 5, 7, 8, 10, 16, 18, 25, 32], "algorithm": [1, 2, 5, 6], "process": [1, 2, 5, 14, 18, 19], "driver": [1, 2, 3, 5, 33], "interfac": [1, 2, 4, 8, 11, 13, 18, 21, 23, 25, 33, 37], "util": [1, 2, 3, 4, 13, 14, 22, 23], "tool": [1, 2, 37], "work": [1, 2, 36], "calibr": [1, 2, 14, 18], "visual": [1, 2, 33], "script": [1, 2, 18, 37], "addit": [1, 4, 13, 21, 32, 35], "licens": 1, "pyproject": [1, 2], "toml": [1, 2], "descript": 1, "If": [1, 13, 25, 29, 31, 34], "plan": 1, "visit": 1, "correspond": 1, "under": 1, "each": [1, 2, 4, 13, 16, 17, 18, 19, 29, 32, 37], "should": [1, 2, 4, 17, 19, 23, 24, 25, 29, 31], "cc_hardwar": [1, 2, 4, 5, 7, 8, 10, 11, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 31, 32, 33], "__init__": [1, 2, 35], "py": [1, 2], "googl": 1, "": [1, 2, 4, 7, 16, 17, 18, 19, 23, 24, 25, 28], "style": [1, 33], "These": [1, 25], "also": [1, 2, 13, 23, 25, 29, 31, 35], "gener": 1, "ani": [1, 4, 5, 10, 13, 14, 19, 21, 23, 24, 25, 26, 27, 29, 32, 34], "autosimpl": 1, "usag": [1, 37], "cambrian": 1, "env": 1, "mjcambrianenv": 1, "restructuredtext": 1, "tutori": 1, "fix": 1, "exist": [1, 14, 29, 31, 35], "_static": 1, "persist": 1, "css": 1, "custom": [1, 18, 31, 37], "differ": [1, 13, 18, 21], "default": [1, 4, 5, 8, 11, 13, 16, 18, 21, 29, 32, 33, 37], "furo": 1, "theme": 1, "imag": [1, 5, 8, 10, 11, 37], "favicon": 1, "etc": 1, "refer": [1, 17, 19, 21, 23, 25], "guid": 1, "eyesofcambrian": 1, "conf": 1, "relat": [1, 17, 19], "extens": 1, "home": [1, 21, 23, 25], "try": 1, "maintain": 1, "describ": [1, 2], "abov": 1, "tab": 1, "onli": [1, 8, 11, 21, 35], "singl": [1, 13, 17, 18, 19, 24, 29, 35], "background": [1, 8, 11], "ha": [1, 4, 8, 18, 21, 23, 24, 25, 31], "multipl": [1, 2, 13, 18, 21, 24, 25, 26, 29], "creat": [1, 2, 8, 11, 13, 18, 24, 31, 33, 34, 35], "same": [1, 23, 24, 35], "insert": 1, "without": [1, 2, 16, 29], "tabl": 1, "insid": 1, "which": [1, 21, 23, 24, 25, 31, 32], "both": [1, 5, 11, 35], "advantag": 1, "disadvantag": 1, "allow": [1, 2, 18, 32], "u": 1, "understand": 1, "languag": 1, "compil": 1, "down": [1, 23, 24, 25], "featur": [1, 21], "librari": [1, 8, 11, 21, 25], "websit": 1, "wai": [1, 2], "easiest": 1, "makefil": 1, "bat": 1, "provid": [1, 4, 8, 11, 13, 21, 22, 23, 25, 26, 27, 29, 31, 34, 35, 36, 37], "directli": [1, 25], "necessari": [1, 35], "depend": [1, 2, 17, 19, 23], "run": [1, 2, 4, 5, 8, 18, 32], "command": [1, 2, 8, 18, 23, 24, 25, 37], "dev": 1, "clean": 1, "view": [1, 37], "go": [1, 8], "browser": 1, "open": [1, 5, 10], "locat": [1, 23, 24, 37], "autobuild": 1, "extrem": 1, "when": [1, 2, 23, 27, 29, 32], "made": [1, 18], "pypi": 1, "tl": 1, "dr": 1, "instal": [2, 37], "can": [2, 4, 8, 17, 18, 19, 23, 24, 25, 32], "clone": 2, "chang": 2, "code": 2, "them": [2, 8, 11, 18, 21, 22, 23, 24, 25, 34], "reinstal": 2, "don": [2, 23], "t": [2, 23, 31], "behavior": [2, 16, 23, 27], "subdirectori": 2, "directori": [2, 31], "separ": 2, "done": 2, "current": [2, 21, 22, 23, 24, 25, 37], "support": [2, 8, 14, 18, 21, 29, 35], "package_nam": 2, "In": 2, "path": [2, 5, 10, 16, 18, 29, 37], "module_nam": 2, "implement": [4, 8, 11, 13, 18, 23, 24, 35], "sourc": [4, 5, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35], "base": [4, 5, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35], "registri": [4, 14, 22, 23, 30], "abc": [4, 14, 22, 23, 35], "abstract": [4, 7, 10, 11, 14, 17, 19, 22, 23, 35], "properti": [4, 5, 7, 8, 10, 11, 14, 16, 17, 18, 19, 21, 23, 24, 25, 32], "is_okai": [4, 5, 8, 10, 11, 14, 16, 18, 19, 21, 23, 25, 32], "bool": [4, 5, 7, 8, 10, 11, 13, 14, 16, 18, 19, 21, 23, 25, 29, 31, 32, 33], "return": [4, 5, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35], "true": [4, 5, 8, 10, 11, 13, 16, 18, 19, 21, 23, 25, 29, 31, 33], "okai": [4, 5, 18, 32], "fals": [4, 5, 8, 10, 11, 13, 16, 18, 19, 21, 23, 25, 29, 31, 32, 33], "otherwis": [4, 5, 8, 10, 11, 13, 18, 21, 23, 31], "either": [4, 13], "been": [4, 18], "initi": [4, 8, 11, 14, 18, 19, 21, 25], "properli": [4, 5, 8, 11, 14, 23, 24, 29, 32], "encount": 4, "result": [4, 5, 26], "subclass": [4, 22, 23, 34], "paramet": [4, 5, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 32, 33, 34, 35], "method": [4, 7, 8, 10, 11, 13, 16, 17, 18, 19, 22, 23, 24, 25, 26, 29, 34, 37], "specifi": [4, 5, 7, 8, 10, 13, 16, 17, 19, 21, 23, 24, 25, 27, 29, 31, 34], "close": [4, 5, 8, 10, 11, 14, 16, 18, 19, 21, 23, 24, 25, 29, 32], "releas": [4, 5, 14, 19, 23, 24, 32], "resourc": [4, 5, 10, 14, 19, 23, 24, 32], "here": [4, 25], "overrid": [4, 8], "own": [4, 8, 18, 24], "local": 5, "marker": [5, 37], "arucolocalizationalgorithm": 5, "sensor": [5, 7, 10, 12, 15, 16, 17, 18, 19, 23, 33, 37], "aruco_dict": [5, 37], "int": [5, 7, 8, 10, 11, 13, 16, 17, 18, 19, 21, 22, 25, 26, 27, 29, 31, 33], "marker_s": 5, "float": [5, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 29], "origin_id": 5, "num_sampl": [5, 7, 8, 10, 11, 16, 17, 18, 19], "marker_id": 5, "detect": [5, 18, 23, 25], "comput": [5, 23], "pose": 5, "rel": [5, 21, 23, 24, 25], "origin": 5, "check": [5, 8, 10, 11, 13, 14, 16, 18, 19, 21, 23, 25, 32], "save": [5, 33, 37], "filenam": [5, 31, 33, 37], "pathlib": [5, 10, 16, 29], "str": [5, 10, 13, 16, 18, 19, 21, 24, 25, 27, 29, 31, 32, 33, 34], "return_imag": 5, "option": [5, 8, 21, 29, 32, 37], "whether": [5, 7, 8, 11, 13, 16, 18, 21, 33], "video": [5, 29], "dict": [5, 16, 21, 22, 24, 25, 32], "dictionari": [5, 21, 22, 24, 25, 32], "associ": 5, "writer": [5, 29], "aruco": 6, "extend": 7, "defin": [7, 16, 17, 18, 19, 21, 23, 24], "specif": [7, 8, 13, 18, 23, 25, 26, 29], "distortion_coeffici": [7, 8, 10, 11], "numpi": [7, 8, 10, 11, 14, 16, 18, 19, 29], "ndarrai": [7, 8, 10, 11, 14, 16, 18, 19, 29], "distort": [7, 8, 10, 11], "coeffici": [7, 8, 10, 11], "np": [7, 8, 10, 11, 14, 16, 18, 19, 29], "arrai": [7, 8, 10, 18], "repres": [7, 8, 10, 17, 18, 19, 23, 24], "intrinsic_matrix": [7, 8, 10, 11], "intrins": [7, 8, 10, 11], "matrix": [7, 8, 10, 11], "3x3": [7, 8, 10, 18], "resolut": [7, 8, 10, 11, 16, 17, 18, 19, 37], "tupl": [7, 8, 10, 11, 13, 16, 17, 18, 19], "width": [7, 8, 10, 11, 16, 17, 18, 19, 37], "height": [7, 8, 10, 11, 16, 17, 18, 19, 37], "accumul": [7, 8, 10, 11, 13, 16, 17, 18, 19], "averag": [7, 8, 16, 17, 18, 19], "number": [7, 8, 10, 11, 13, 16, 17, 18, 19, 22, 25, 27, 29], "sampl": [7, 8, 10, 11, 16, 17, 18, 19], "keyword": [7, 8, 11, 13, 21, 25, 29, 32, 34, 35], "argument": [7, 8, 11, 13, 21, 25, 29, 32, 34, 35, 37], "flircamera": 8, "wrapper": [8, 11, 13, 21, 24, 25, 26, 27], "around": [8, 11, 13, 21, 24, 25, 27], "captur": [8, 11, 18], "singleton": [8, 11, 30], "instanc": [8, 11, 13, 33, 34, 35], "new": [8, 14, 19], "grasshopperflircamera": 8, "special": 8, "grasshopp": 8, "model": 8, "inherit": [8, 10, 16, 17, 18, 19], "036": 8, "145": 8, "001": 8, "155": 8, "1815": 8, "5": 8, "1817": 8, "753": 8, "721": 8, "299": 8, "531": 8, "352": 8, "def": [8, 32, 35], "self": [8, 13, 29, 34, 35], "spinnak": 8, "usual": [8, 25], "As": 8, "write": [8, 13, 18, 29, 31], "2024": 8, "09": 8, "21": 8, "10": [8, 13, 29, 33, 35, 37], "newer": 8, "version": 8, "step": [8, 23, 25], "after": [8, 32], "re": [8, 37], "tar": 8, "xvzf": 8, "spinnaker_python": 8, "cp": 8, "o": 8, "arch": 8, "gz": 8, "whl": 8, "But": 8, "fail": 8, "replac": 8, "your": 8, "For": 8, "11": 8, "m2": 8, "mac": 8, "would": 8, "turn": 8, "4": 8, "172": 8, "cp310": 8, "macosx_13_0_arm64": 8, "mv": 8, "cp311": 8, "And": 8, "_pyspin": 8, "cpython": 8, "310": 8, "darwin": 8, "311": 8, "offici": 8, "caus": 8, "issu": [8, 23], "risk": 8, "camera_index": [8, 11], "thread": [8, 11, 13, 14, 27], "store": [8, 11, 29], "queue": [8, 11], "stream": [8, 11, 31], "avail": [8, 10, 13], "stop": [8, 11, 13, 32], "deiniti": [8, 11], "flir": [9, 12], "pkl": [9, 12, 15, 29], "realsens": [9, 12], "load": [10, 16, 29], "pre": [10, 16], "record": [10, 16, 29, 31], "file": [10, 16, 29, 31, 33, 37], "pklcamera": 10, "pkl_path": [10, 16, 37], "read": [10, 13, 18, 29], "pickl": [10, 29], "iter": [10, 16, 18, 22, 24], "exhaust": [10, 16], "still": [10, 16], "activ": [10, 16, 18], "placehold": 10, "potenti": 10, "cleanup": [10, 32], "logic": 10, "intel": 11, "devic": [11, 13, 21], "realsensecamera": 11, "pyrealsens": 11, "d435i": 11, "color": [11, 18, 24], "depth": [11, 18, 37], "return_depth": 11, "start_pipeline_onc": 11, "force_autoexposur": 11, "exposur": 11, "rgb": [11, 37], "readi": [11, 14], "rais": [11, 34], "notimplementederror": 11, "yet": 11, "return_rgb": 11, "spad": [12, 33, 37], "tmf8828": [12, 15], "stepper_motor": 12, "kinesis_stepp": [12, 20], "stepper_control": [12, 20], "stepper_system": [12, 20], "telemetrix_stepp": [12, 20], "safe_seri": 12, "safeseri": 13, "safe": [13, 23, 24, 25, 27], "serial": 13, "commun": [13, 18], "few": 13, "conveni": 13, "arg": [13, 18, 21, 23, 24, 27, 31, 34, 35, 37], "kwarg": [13, 21, 23, 25, 27, 31, 34, 35], "synchron": [13, 26, 27], "oper": [13, 14, 18, 19, 21, 23, 24, 25, 32], "lock": 13, "handl": [13, 14, 19, 32], "format": [13, 31], "posit": [13, 21, 22, 23, 24, 25, 29, 34, 35], "pass": [13, 25, 34], "parent": 13, "classmethod": [13, 34, 35], "port": [13, 18, 19, 21, 25, 37], "wait": [13, 14, 21, 23, 24, 25, 27], "2": [13, 18, 24, 26], "reset": [13, 14, 18, 19], "establish": [13, 23], "connect": [13, 16, 18, 21, 23, 24, 25], "second": [13, 33], "constructor": [13, 34, 35], "invalid": 13, "warn": 13, "log": [13, 31], "size": 13, "byte": [13, 18], "wait_for_start_talk": 13, "timeout": [13, 18], "until": [13, 14, 23, 24, 25, 32], "start": [13, 23, 29, 32], "talk": 13, "success": 13, "maximum": [13, 21, 31], "time": [13, 17, 18, 19], "give": 13, "up": [13, 18], "receiv": [13, 18, 23], "wait_for_stop_talk": 13, "write_and_wait_for_start_talk": 13, "tri": 13, "resend": 13, "attempt": [13, 25, 27], "perform": [13, 18, 37], "write_and_wait_for_stop_talk": 13, "return_data": 13, "upon": 13, "statu": [13, 23], "write_and_wait_for_start_and_stop_talk": 13, "event": [13, 14], "__del__": [14, 29], "destructor": 14, "sensordata": [14, 18, 19], "its": [14, 18, 19, 21, 22, 23, 24, 25, 34], "state": [14, 18, 19, 21, 23, 25], "row": [14, 18, 19], "get_data": [14, 18, 19], "retriev": [14, 19, 27, 35], "sensordatathread": 14, "clear": [14, 18], "pklspadsensor": 16, "bin_width": [16, 17, 18, 19], "spadsensor": [16, 17, 18, 19, 33], "fake": 16, "simul": 16, "histogram": [16, 17, 18, 19], "common": [16, 18, 23], "variabl": [16, 18], "_pkl_path": 16, "_data": 16, "entri": 16, "_data_iter": 16, "over": [16, 18, 24], "_bin_width": 16, "bin": [16, 17, 18, 19, 37], "_resolut": 16, "spatial": [16, 17, 19], "num_bin": [16, 17, 18, 19], "request": [16, 18, 27], "op": 16, "photon": [17, 19], "avalanch": [17, 19], "diod": [17, 19], "design": [17, 19], "manag": [17, 19, 30], "measur": [17, 18, 19], "collect": [17, 18, 19, 24], "analyz": [17, 19], "system": [17, 19, 21, 24], "indic": [17, 18, 19], "discret": [17, 19], "valu": [17, 18, 19, 22, 23, 24, 25, 26, 27, 29, 35], "rang": [17, 18, 19, 37], "total": [17, 18, 19, 22], "distanc": [17, 19], "equal": [17, 19], "multipli": [17, 19], "cover": [17, 19], "exact": [17, 19], "unit": [17, 19, 23, 24], "document": [17, 18, 19, 24, 38], "deriv": [17, 19], "where": [17, 19, 27, 29], "pixel": [17, 18, 19, 37], "point": [17, 19, 23], "respect": [17, 19], "dimens": [17, 19], "sum": [17, 19], "vari": [17, 19], "8x8": 18, "multi": [18, 21, 24, 27], "zone": 18, "flight": 18, "am": 18, "wide": 18, "vcsel": 18, "map": 18, "4x4": 18, "3x6": 18, "multizon": 18, "output": [18, 29, 31], "tmf8828sensor": [18, 37], "wa": 18, "tmf882x": [18, 37], "arduino": 18, "shield": 18, "spadid": 18, "kwd": [18, 24], "enum": [18, 24], "pair": [18, 24], "enumer": [18, 24], "red": [18, 24], "blue": [18, 24], "green": [18, 24], "access": [18, 21, 24, 25, 27, 29], "lookup": [18, 24], "know": [18, 24], "mani": [18, 24], "member": [18, 24], "thei": [18, 24], "len": [18, 24], "detail": [18, 24], "rangemod": 18, "tmf8828histogram": 18, "num_channel": 18, "active_channels_per_subcaptur": 18, "spad_id": 18, "channel": [18, 21, 37], "subcaptur": 18, "storag": 18, "includ": [18, 23, 35], "num_subcaptur": 18, "has_data": 18, "complet": [18, 21, 23, 24, 25, 37], "temporari": 18, "intern": 18, "configur": [18, 23], "string": [18, 27], "copi": [18, 37], "tmf8828object": 18, "object": [18, 24, 25, 27, 29, 37], "inform": [18, 31], "about": 18, "id6": 18, "setup": [18, 21, 32], "range_mod": 18, "long": 18, "across": [18, 35], "enabl": [18, 25], "high": 18, "baudrat": 18, "baud": 18, "rate": 18, "correctli": 18, "alwai": 18, "meter": [18, 37], "num_pixel": 18, "area": 18, "send": 18, "setup_sensor": 18, "line": [18, 37], "vl53l8chhistogram": 19, "vl53l8chsensor": 19, "debug": 19, "stepper": [20, 21, 22, 23, 24, 25], "motor": [20, 21, 22, 23, 24, 25], "steppermotor": [21, 23, 24, 25], "kinesi": 21, "kinesissteppermotor": 21, "thorlab": 21, "c": [21, 28], "api": [21, 38], "via": 21, "pylablib": 21, "throlab": 21, "kinesismotor": 21, "control": [21, 22, 23, 24, 25], "window": 21, "linux": 21, "is_rack_system": 21, "scale": 21, "movement": 21, "limit": [21, 23], "part": 21, "rack": 21, "factor": 21, "absolut": [21, 23, 25], "healthi": [21, 23, 25], "lower_limit": 21, "lower": 21, "upper_limit": 21, "upper": 21, "max_veloc": 21, "acceler": 21, "clip_at_limit": 21, "initial_posit": 21, "reference_posit": 21, "check_hom": 21, "veloc": 21, "clip": 21, "move": [21, 23, 24, 25], "dure": 21, "opposit": [21, 25], "successfulli": 21, "zero": [21, 23, 25], "move_bi": [21, 23, 24, 25], "relative_posit": [21, 23, 25], "amount": [21, 23, 25], "move_to": [21, 23, 24, 25], "target": [21, 23, 24, 25], "wait_for_mov": [21, 23, 24, 25], "kinesisrotationstag": 21, "kinesissteppermotorsystem": 21, "ax": [21, 22, 23, 24, 25], "steppermotorsystemaxi": [21, 24], "steppermotorsystem": [21, 24, 25], "whole": [21, 24], "attach": [21, 23, 24, 25], "instanti": [21, 22, 34], "azimuthelevationsystem": 21, "predefin": [21, 23], "axi": [21, 22, 24, 25], "azimuth": 21, "elev": 21, "steppercontrol": 22, "factori": [22, 34], "get_posit": 22, "given": [22, 34, 37], "snakesteppercontrol": 22, "axis_config": 22, "kei": [22, 25, 29], "empti": [22, 27], "exce": 22, "unifi": [23, 25], "must": [23, 32], "compat": 23, "expect": 23, "could": 23, "involv": 23, "verifi": 23, "power": [23, 24], "shut": [23, 24, 25], "avoid": [23, 24], "damag": [23, 24], "memori": [23, 24, 29], "leak": [23, 24], "switch": 23, "trigger": 23, "known": 23, "interpret": 23, "characterist": 23, "g": 23, "angl": 23, "degre": 23, "other": 23, "execut": [23, 24, 25], "reach": [23, 24, 25], "motion": [23, 24, 25], "dummysteppermotor": 23, "dummi": 23, "doe": 23, "noth": 23, "gantri": 24, "rotat": 24, "stage": 24, "grab": 24, "subtract": 24, "Then": 24, "__getattr__": [24, 25, 27], "passthrough": [24, 25], "underli": [24, 25, 27], "telemetrixsteppermotor": 25, "telemetrixsteppermotorsystem": 25, "telemetrix": 25, "cncshield": 25, "board": 25, "distance_pin": 25, "direction_pin": 25, "enable_pin": 25, "cm_per_rev": 25, "steps_per_rev": 25, "speed": [25, 28], "flip_direct": 25, "note": 25, "effect": 25, "call": [25, 32, 35], "set_current_posit": 25, "explicitli": 25, "pin": 25, "centimet": 25, "per": [25, 33, 37], "revolut": 25, "cm": 25, "direct": 25, "set_target_position_cm": 25, "relative_cm": 25, "set_absolute_target_position_cm": 25, "position_cm": 25, "cm_to_rev": 25, "revs_to_cm": 25, "rev": 25, "stepper_": 25, "motorx": 25, "target_posit": 25, "equat": 25, "_board": 25, "stepper_target_posit": 25, "requir": [25, 27, 37], "input": [25, 29], "we": 25, "ll": 25, "auto": 25, "telemetrixsteppermotorx": 25, "telemetrixsteppermotori": 25, "telemetrixsteppermotorz": 25, "telemetrixsteppermotorxrevers": 25, "telemetrixsteppermotoryrevers": 25, "telemetrixsteppermotorzrevers": 25, "dualdrive2axisgantry_x": 25, "dualdrive2axisgantry_y1": 25, "dualdrive2axisgantry_y2": 25, "dualdrive2axisgantri": 25, "singledrive1axisgantry_x": 25, "singledrive1axisgantry_i": 25, "singledrive1axisgantri": 25, "asynchron": 26, "call_async": 26, "fn": 26, "callabl": [26, 29, 32], "callback": 26, "wrap": [26, 27], "call_async_gath": 26, "call_async_valu": 26, "idx": 26, "dequ": 27, "item": 27, "blockingdequ": 27, "condit": 27, "suitabl": 27, "share": [27, 35], "append": [27, 29, 31], "notifi": 27, "manner": 27, "__getitem__": 27, "__len__": [27, 29], "__repr__": 27, "represent": 27, "300000000": 28, "light": 28, "m": 28, "pklhandler": 29, "overwrit": 29, "update_index_kwarg": 29, "random": 29, "entir": 29, "handler": [29, 31], "another_kei": 29, "another_valu": 29, "print": 29, "update_index": 29, "prune_fn": 29, "lambda": 29, "_": 29, "build": 29, "scan": 29, "_index": 29, "filter": [29, 31], "take": 29, "exclud": 29, "first": 29, "load_al": 29, "extract": 29, "videowrit": 29, "fp": [29, 33], "flush_interv": 29, "frame": [29, 33], "buffer": 29, "period": 29, "flush": 29, "interv": 29, "mp4": 29, "30": 29, "remain": 29, "delet": 29, "asyncio_util": 30, "blocking_dequ": 30, "constant": 30, "file_handl": 30, "logger": 30, "plot": 30, "transform": 30, "tqdm": 31, "messag": [31, 37], "consol": 31, "level": 31, "get_logg": 31, "info": 31, "filehandl": 31, "doesn": 31, "tqdmstreamhandl": 31, "streamhandl": 31, "emit": 31, "logrecord": 31, "formatt": 31, "trail": 31, "newlin": 31, "except": 31, "present": 31, "traceback": [31, 32], "print_except": 31, "encod": 31, "determin": 31, "loggermaxlevelfilt": 31, "max_level": 31, "deem": 31, "appropri": 31, "modifi": 31, "place": 31, "compon": 32, "context": 32, "loop": 32, "100": [32, 37], "protocol": 32, "essenti": 32, "just": 32, "ellipsi": 32, "accept": 32, "begin": 32, "__enter__": 32, "__exit__": 32, "exc_typ": 32, "exc_valu": 32, "set_matplotlib_styl": 33, "use_scienceplot": 33, "matplotlib": 33, "transient_gui": 33, "fullscreen": [33, 37], "min_bin": 33, "max_bin": 33, "127": [33, 37], "normalize_per_pixel": 33, "gui": 33, "transient": 33, "anim": 33, "decor": 34, "regist": 34, "class_typ": 34, "create_from_registri": 34, "valueerror": 34, "found": 34, "registrybas": 34, "metaclass": 35, "pattern": 35, "applic": 35, "combin": 35, "singleton_meta": 35, "singletonabcmeta": 35, "mysingleton": 35, "instance1": 35, "instance2": 35, "assert": 35, "singletonmeta": 35, "__call__": 35, "abcmeta": 35, "enforc": 35, "while": 35, "being": 35, "3d": 36, "space": 36, "160": 37, "completioninstal": 37, "shell": 37, "completionshow": 37, "helpshow": 37, "exit": 37, "four": 37, "legaci": 37, "twice": 37, "text": 37, "filenametext": 37, "sketch": 37, "scriptpath": 37, "porttext": 37, "feed": 37, "num": 37, "framesinteg": 37, "autoscal": 37, "ylimfloat": 37, "min": 37, "bininteg": 37, "max": 37, "maskinteg": 37, "idinteg": 37, "6": 37, "short": 37, "pkl_pathpath": 37, "lt": 37, "integ": 37, "gt": 37, "fpsinteg": 37, "widthfloat": 37, "p": 37, "exposureinteg": 37, "aruco_dicttext": 37, "sizefloat": 37, "8": 37, "25": 37, "samplesinteg": 37, "cli": 38}, "objects": {"": [[6, 0, 0, "-", "algos"], [12, 0, 0, "-", "drivers"], [30, 0, 0, "-", "utils"]], "algos": [[4, 0, 0, "-", "algorithm"], [5, 0, 0, "-", "aruco"]], "algos.algorithm": [[4, 1, 1, "", "Algorithm"]], "algos.algorithm.Algorithm": [[4, 2, 1, "", "close"], [4, 3, 1, "", "is_okay"], [4, 2, 1, "", "run"]], "algos.aruco": [[5, 1, 1, "", "ArucoLocalizationAlgorithm"]], "algos.aruco.ArucoLocalizationAlgorithm": [[5, 2, 1, "", "close"], [5, 3, 1, "", "is_okay"], [5, 2, 1, "", "run"]], "cc_hardware": [[37, 0, 0, "-", "tools"]], "drivers": [[9, 0, 0, "-", "cameras"], [13, 0, 0, "-", "safe_serial"], [14, 0, 0, "-", "sensor"], [15, 0, 0, "-", "spads"], [20, 0, 0, "-", "stepper_motors"]], "drivers.cameras": [[7, 0, 0, "-", "camera"], [8, 0, 0, "-", "flir"], [10, 0, 0, "-", "pkl"], [11, 0, 0, "-", "realsense"]], "drivers.cameras.camera": [[7, 1, 1, "", "Camera"]], "drivers.cameras.camera.Camera": [[7, 2, 1, "", "accumulate"], [7, 3, 1, "", "distortion_coefficients"], [7, 3, 1, "", "intrinsic_matrix"], [7, 3, 1, "", "resolution"]], "drivers.cameras.flir": [[8, 1, 1, "", "FlirCamera"], [8, 1, 1, "", "GrasshopperFlirCamera"]], "drivers.cameras.flir.FlirCamera": [[8, 2, 1, "", "accumulate"], [8, 2, 1, "", "close"], [8, 3, 1, "", "is_okay"], [8, 3, 1, "", "resolution"]], "drivers.cameras.flir.GrasshopperFlirCamera": [[8, 3, 1, "", "distortion_coefficients"], [8, 3, 1, "", "intrinsic_matrix"]], "drivers.cameras.pkl": [[10, 1, 1, "", "PklCamera"]], "drivers.cameras.pkl.PklCamera": [[10, 2, 1, "", "accumulate"], [10, 2, 1, "", "close"], [10, 3, 1, "", "distortion_coefficients"], [10, 3, 1, "", "intrinsic_matrix"], [10, 3, 1, "", "is_okay"], [10, 3, 1, "", "resolution"]], "drivers.cameras.realsense": [[11, 1, 1, "", "RealsenseCamera"]], "drivers.cameras.realsense.RealsenseCamera": [[11, 2, 1, "", "accumulate"], [11, 2, 1, "", "close"], [11, 3, 1, "", "distortion_coefficients"], [11, 3, 1, "", "intrinsic_matrix"], [11, 3, 1, "", "is_okay"], [11, 3, 1, "", "resolution"]], "drivers.safe_serial": [[13, 1, 1, "", "SafeSerial"]], "drivers.safe_serial.SafeSerial": [[13, 2, 1, "", "create"], [13, 2, 1, "", "read"], [13, 2, 1, "", "wait_for_start_talk"], [13, 2, 1, "", "wait_for_stop_talk"], [13, 2, 1, "", "write"], [13, 2, 1, "", "write_and_wait_for_start_and_stop_talk"], [13, 2, 1, "", "write_and_wait_for_start_talk"], [13, 2, 1, "", "write_and_wait_for_stop_talk"]], "drivers.sensor": [[14, 1, 1, "", "Sensor"], [14, 1, 1, "", "SensorData"], [14, 1, 1, "", "SensorDataThreaded"]], "drivers.sensor.Sensor": [[14, 2, 1, "", "__del__"], [14, 2, 1, "", "calibrate"], [14, 2, 1, "", "close"], [14, 3, 1, "", "is_okay"]], "drivers.sensor.SensorData": [[14, 2, 1, "", "get_data"], [14, 2, 1, "", "process"], [14, 2, 1, "", "reset"]], "drivers.sensor.SensorDataThreaded": [[14, 2, 1, "", "get_data"], [14, 2, 1, "", "reset"]], "drivers.spads": [[16, 0, 0, "-", "pkl"], [17, 0, 0, "-", "spad"], [18, 0, 0, "-", "tmf8828"], [19, 0, 0, "-", "vl53l8ch"]], "drivers.spads.pkl": [[16, 1, 1, "", "PklSPADSensor"]], "drivers.spads.pkl.PklSPADSensor": [[16, 2, 1, "", "accumulate"], [16, 3, 1, "", "bin_width"], [16, 2, 1, "", "close"], [16, 3, 1, "", "is_okay"], [16, 3, 1, "", "num_bins"], [16, 3, 1, "", "resolution"]], "drivers.spads.spad": [[17, 1, 1, "", "SPADSensor"]], "drivers.spads.spad.SPADSensor": [[17, 2, 1, "", "accumulate"], [17, 3, 1, "", "bin_width"], [17, 3, 1, "", "num_bins"], [17, 3, 1, "", "resolution"]], "drivers.spads.tmf8828": [[18, 1, 1, "", "RangeMode"], [18, 1, 1, "", "SPADID"], [18, 1, 1, "", "TMF8828Histogram"], [18, 1, 1, "", "TMF8828Object"], [18, 1, 1, "", "TMF8828Sensor"]], "drivers.spads.tmf8828.TMF8828Histogram": [[18, 2, 1, "", "get_data"], [18, 3, 1, "", "has_data"], [18, 2, 1, "", "process"], [18, 2, 1, "", "reset"]], "drivers.spads.tmf8828.TMF8828Object": [[18, 2, 1, "", "get_data"], [18, 2, 1, "", "process"], [18, 2, 1, "", "reset"]], "drivers.spads.tmf8828.TMF8828Sensor": [[18, 2, 1, "", "accumulate"], [18, 3, 1, "", "bin_width"], [18, 2, 1, "", "calibrate"], [18, 2, 1, "", "close"], [18, 2, 1, "", "initialize"], [18, 3, 1, "", "is_okay"], [18, 3, 1, "", "num_bins"], [18, 3, 1, "", "num_pixels"], [18, 2, 1, "", "read"], [18, 3, 1, "", "resolution"], [18, 2, 1, "", "setup_sensor"], [18, 2, 1, "", "write"]], "drivers.spads.vl53l8ch": [[19, 1, 1, "", "VL53L8CHHistogram"], [19, 1, 1, "", "VL53L8CHSensor"]], "drivers.spads.vl53l8ch.VL53L8CHHistogram": [[19, 2, 1, "", "get_data"], [19, 2, 1, "", "process"], [19, 2, 1, "", "reset"]], "drivers.spads.vl53l8ch.VL53L8CHSensor": [[19, 2, 1, "", "accumulate"], [19, 3, 1, "", "bin_width"], [19, 2, 1, "", "close"], [19, 3, 1, "", "is_okay"], [19, 3, 1, "", "num_bins"], [19, 3, 1, "", "resolution"]], "drivers.stepper_motors": [[21, 0, 0, "-", "kinesis_stepper"], [22, 0, 0, "-", "stepper_controller"], [23, 0, 0, "-", "stepper_motor"], [24, 0, 0, "-", "stepper_system"], [25, 0, 0, "-", "telemetrix_stepper"]], "drivers.stepper_motors.kinesis_stepper": [[21, 1, 1, "", "AzimuthElevationSystem"], [21, 1, 1, "", "KinesisRotationStage"], [21, 1, 1, "", "KinesisStepperMotor"], [21, 1, 1, "", "KinesisStepperMotorSystem"]], "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage": [[21, 2, 1, "", "initialize"]], "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor": [[21, 2, 1, "", "close"], [21, 2, 1, "", "home"], [21, 2, 1, "", "initialize"], [21, 3, 1, "", "is_okay"], [21, 3, 1, "", "lower_limit"], [21, 2, 1, "", "move_by"], [21, 2, 1, "", "move_to"], [21, 3, 1, "", "position"], [21, 3, 1, "", "upper_limit"], [21, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_controller": [[22, 1, 1, "", "SnakeStepperController"], [22, 1, 1, "", "StepperController"]], "drivers.stepper_motors.stepper_controller.SnakeStepperController": [[22, 2, 1, "", "get_position"]], "drivers.stepper_motors.stepper_controller.StepperController": [[22, 2, 1, "", "get_position"]], "drivers.stepper_motors.stepper_motor": [[23, 1, 1, "", "DummyStepperMotor"], [23, 1, 1, "", "StepperMotor"]], "drivers.stepper_motors.stepper_motor.StepperMotor": [[23, 2, 1, "", "close"], [23, 2, 1, "", "home"], [23, 3, 1, "", "is_okay"], [23, 2, 1, "", "move_by"], [23, 2, 1, "", "move_to"], [23, 3, 1, "", "position"], [23, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_system": [[24, 1, 1, "", "StepperMotorSystem"], [24, 1, 1, "", "StepperMotorSystemAxis"]], "drivers.stepper_motors.stepper_system.StepperMotorSystem": [[24, 2, 1, "", "__getattr__"], [24, 2, 1, "", "close"], [24, 2, 1, "", "move_by"], [24, 2, 1, "", "move_to"], [24, 3, 1, "", "position"], [24, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.telemetrix_stepper": [[25, 1, 1, "", "DualDrive2AxisGantry"], [25, 1, 1, "", "DualDrive2AxisGantry_X"], [25, 1, 1, "", "DualDrive2AxisGantry_Y1"], [25, 1, 1, "", "DualDrive2AxisGantry_Y2"], [25, 1, 1, "", "SingleDrive1AxisGantry"], [25, 1, 1, "", "SingleDrive1AxisGantry_X"], [25, 1, 1, "", "SingleDrive1AxisGantry_Y"], [25, 1, 1, "", "TelemetrixStepperMotor"], [25, 1, 1, "", "TelemetrixStepperMotorSystem"], [25, 1, 1, "", "TelemetrixStepperMotorX"], [25, 1, 1, "", "TelemetrixStepperMotorXReversed"], [25, 1, 1, "", "TelemetrixStepperMotorY"], [25, 1, 1, "", "TelemetrixStepperMotorYReversed"], [25, 1, 1, "", "TelemetrixStepperMotorZ"], [25, 1, 1, "", "TelemetrixStepperMotorZReversed"]], "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor": [[25, 2, 1, "", "__getattr__"], [25, 2, 1, "", "close"], [25, 2, 1, "", "cm_to_revs"], [25, 2, 1, "", "home"], [25, 3, 1, "", "id"], [25, 3, 1, "", "is_okay"], [25, 2, 1, "", "move_by"], [25, 2, 1, "", "move_to"], [25, 3, 1, "", "position"], [25, 2, 1, "", "revs_to_cm"], [25, 2, 1, "", "set_absolute_target_position_cm"], [25, 2, 1, "", "set_target_position_cm"], [25, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem": [[25, 2, 1, "", "close"]], "utils": [[26, 0, 0, "-", "asyncio_utils"], [27, 0, 0, "-", "blocking_deque"], [28, 0, 0, "-", "constants"], [29, 0, 0, "-", "file_handlers"], [31, 0, 0, "-", "logger"], [32, 0, 0, "-", "manager"], [33, 0, 0, "-", "plotting"], [34, 0, 0, "-", "registry"], [35, 0, 0, "-", "singleton"], [36, 0, 0, "-", "transformations"]], "utils.asyncio_utils": [[26, 4, 1, "", "call_async"], [26, 4, 1, "", "call_async_gather"], [26, 4, 1, "", "call_async_value"]], "utils.blocking_deque": [[27, 1, 1, "", "BlockingDeque"]], "utils.blocking_deque.BlockingDeque": [[27, 2, 1, "", "__getattr__"], [27, 2, 1, "", "__getitem__"], [27, 2, 1, "", "__len__"], [27, 2, 1, "", "__repr__"], [27, 2, 1, "", "append"]], "utils.constants": [[28, 5, 1, "", "C"]], "utils.file_handlers": [[29, 1, 1, "", "PklHandler"], [29, 1, 1, "", "VideoWriter"]], "utils.file_handlers.PklHandler": [[29, 2, 1, "", "__len__"], [29, 2, 1, "", "append"], [29, 2, 1, "", "load"], [29, 2, 1, "", "load_all"], [29, 2, 1, "", "update_index"], [29, 2, 1, "", "write"]], "utils.file_handlers.VideoWriter": [[29, 2, 1, "", "__del__"], [29, 2, 1, "", "append"], [29, 2, 1, "", "close"]], "utils.logger": [[31, 1, 1, "", "FileHandler"], [31, 1, 1, "", "LoggerMaxLevelFilter"], [31, 1, 1, "", "TqdmStreamHandler"]], "utils.logger.LoggerMaxLevelFilter": [[31, 2, 1, "", "filter"]], "utils.logger.TqdmStreamHandler": [[31, 2, 1, "", "emit"]], "utils.manager": [[32, 1, 1, "", "Component"], [32, 1, 1, "", "Manager"]], "utils.manager.Component": [[32, 2, 1, "", "close"], [32, 3, 1, "", "is_okay"]], "utils.manager.Manager": [[32, 2, 1, "", "__enter__"], [32, 2, 1, "", "__exit__"], [32, 2, 1, "", "add"], [32, 2, 1, "", "close"], [32, 3, 1, "", "components"], [32, 3, 1, "", "is_okay"], [32, 2, 1, "", "run"]], "utils.plotting": [[33, 4, 1, "", "set_matplotlib_style"], [33, 4, 1, "", "transient_gui"]], "utils.registry": [[34, 1, 1, "", "Registry"], [34, 4, 1, "", "register"]], "utils.registry.Registry": [[34, 2, 1, "", "create_from_registry"], [34, 2, 1, "", "register"]], "utils.singleton": [[35, 1, 1, "", "SingletonABCMeta"], [35, 1, 1, "", "SingletonMeta"]], "utils.singleton.SingletonMeta": [[35, 2, 1, "", "__call__"], [35, 2, 1, "", "instance"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"contribut": 1, "setup": 1, "clone": 1, "repo": [1, 2], "instal": [1, 8], "deploi": 1, "your": 1, "chang": 1, "guidelin": 1, "file": 1, "structur": [1, 2], "edit": 1, "sourc": 1, "code": 1, "comment": 1, "document": [1, 37], "build": 1, "camera": [2, 7, 8, 9, 10, 11, 37], "cultur": 2, "hardwar": 2, "get": 2, "start": 2, "packag": [2, 3], "api": 3, "refer": [3, 38], "algo": [4, 5, 6], "algorithm": 4, "modul": [4, 5, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35], "content": [4, 5, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35], "class": [4, 5, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 31, 32, 34, 35], "aruco": [5, 37], "submodul": [6, 9, 12, 15, 20, 30], "driver": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "flir": [8, 37], "pyspin": 8, "pkl": [10, 16, 37], "realsens": [11, 37], "subpackag": 12, "safe_seri": 13, "sensor": 14, "spad": [15, 16, 17, 18, 19], "tmf8828": [18, 37], "vl53l8ch": [19, 37], "stepper_motor": [20, 21, 22, 23, 24, 25], "kinesis_stepp": 21, "stepper_control": 22, "stepper_system": 24, "telemetrix_stepp": 25, "util": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "asyncio_util": 26, "function": [26, 33, 34], "blocking_dequ": 27, "constant": 28, "file_handl": 29, "logger": 31, "manag": 32, "plot": 33, "registri": 34, "singleton": 35, "transform": 36, "cli": 37, "cc_hardwar": 37, "calib": 37, "calibr": 37, "serial": 37, "arduino": 37, "upload": 37, "vi": 37, "dashboard": 37, "transient": 37, "viewer": 37, "local": 37, "estim": 37, "posit": 37}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributing": [[1, "contributing"]], "Setup": [[1, "setup"]], "Cloning the Repo": [[1, "cloning-the-repo"]], "Installing": [[1, "installing"]], "Deploy your Changes": [[1, "deploy-your-changes"]], "Guidelines": [[1, "guidelines"]], "File Structure": [[1, "file-structure"]], "Editing the Source Code": [[1, "editing-the-source-code"]], "Commenting": [[1, "commenting"]], "Editing the Documentation": [[1, "editing-the-documentation"]], "Building the Documentation": [[1, "building-the-documentation"]], "Camera Culture Hardware Repo": [[2, "camera-culture-hardware-repo"]], "Getting Started": [[2, "getting-started"]], "Repo Structure": [[2, "repo-structure"]], "Package Structure": [[2, "package-structure"]], "API Reference": [[3, "api-reference"]], "Packages": [[3, "packages"]], "algos.algorithm": [[4, "module-algos.algorithm"]], "Module Contents": [[4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"]], "Classes": [[4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [11, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [27, "classes"], [29, "classes"], [31, "classes"], [32, "classes"], [34, "classes"], [35, "classes"]], "algos.aruco": [[5, "module-algos.aruco"]], "algos": [[6, "module-algos"]], "Submodules": [[6, "submodules"], [9, "submodules"], [12, "submodules"], [15, "submodules"], [20, "submodules"], [30, "submodules"]], "drivers.cameras.camera": [[7, "module-drivers.cameras.camera"]], "drivers.cameras.flir": [[8, "module-drivers.cameras.flir"]], "PySpin Installation": [[8, "pyspin-installation"]], "drivers.cameras": [[9, "module-drivers.cameras"]], "drivers.cameras.pkl": [[10, "module-drivers.cameras.pkl"]], "drivers.cameras.realsense": [[11, "module-drivers.cameras.realsense"]], "drivers": [[12, "module-drivers"]], "Subpackages": [[12, "subpackages"]], "drivers.safe_serial": [[13, "module-drivers.safe_serial"]], "drivers.sensor": [[14, "module-drivers.sensor"]], "drivers.spads": [[15, "module-drivers.spads"]], "drivers.spads.pkl": [[16, "module-drivers.spads.pkl"]], "drivers.spads.spad": [[17, "module-drivers.spads.spad"]], "drivers.spads.tmf8828": [[18, "module-drivers.spads.tmf8828"]], "drivers.spads.vl53l8ch": [[19, "module-drivers.spads.vl53l8ch"]], "drivers.stepper_motors": [[20, "module-drivers.stepper_motors"]], "drivers.stepper_motors.kinesis_stepper": [[21, "module-drivers.stepper_motors.kinesis_stepper"]], "drivers.stepper_motors.stepper_controller": [[22, "module-drivers.stepper_motors.stepper_controller"]], "drivers.stepper_motors.stepper_motor": [[23, "module-drivers.stepper_motors.stepper_motor"]], "drivers.stepper_motors.stepper_system": [[24, "module-drivers.stepper_motors.stepper_system"]], "drivers.stepper_motors.telemetrix_stepper": [[25, "module-drivers.stepper_motors.telemetrix_stepper"]], "utils.asyncio_utils": [[26, "module-utils.asyncio_utils"]], "Functions": [[26, "functions"], [33, "functions"], [34, "functions"]], "utils.blocking_deque": [[27, "module-utils.blocking_deque"]], "utils.constants": [[28, "module-utils.constants"]], "utils.file_handlers": [[29, "module-utils.file_handlers"]], "utils": [[30, "module-utils"]], "utils.logger": [[31, "module-utils.logger"]], "utils.manager": [[32, "module-utils.manager"]], "utils.plotting": [[33, "module-utils.plotting"]], "utils.registry": [[34, "module-utils.registry"]], "utils.singleton": [[35, "module-utils.singleton"]], "utils.transformations": [[36, "module-utils.transformations"]], "CLI Documentation": [[37, "module-cc_hardware.tools"]], "cc_hardware": [[37, "cc-hardware"]], "calib": [[37, "cc-hardware-calib"]], "tmf8828-calibrate": [[37, "cc-hardware-calib-tmf8828-calibrate"]], "serial": [[37, "cc-hardware-serial"]], "arduino-upload": [[37, "cc-hardware-serial-arduino-upload"]], "tmf8828-upload": [[37, "cc-hardware-serial-tmf8828-upload"]], "vis": [[37, "cc-hardware-vis"]], "tmf8828-dashboard": [[37, "cc-hardware-vis-tmf8828-dashboard"]], "vl53l8ch-dashboard": [[37, "cc-hardware-vis-vl53l8ch-dashboard"]], "pkl-dashboard": [[37, "cc-hardware-vis-pkl-dashboard"]], "tmf8828-transient-viewer": [[37, "cc-hardware-vis-tmf8828-transient-viewer"]], "pkl-transient-viewer": [[37, "cc-hardware-vis-pkl-transient-viewer"]], "flir-camera-viewer": [[37, "cc-hardware-vis-flir-camera-viewer"]], "pkl-camera-viewer": [[37, "cc-hardware-vis-pkl-camera-viewer"]], "realsense-camera-viewer": [[37, "cc-hardware-vis-realsense-camera-viewer"]], "flir-aruco-localization": [[37, "cc-hardware-vis-flir-aruco-localization"]], "pkl-aruco-localization": [[37, "cc-hardware-vis-pkl-aruco-localization"]], "pkl-estimated-position": [[37, "cc-hardware-vis-pkl-estimated-position"]], "Reference": [[38, "reference"]]}, "indexentries": {"algorithm (class in algos.algorithm)": [[4, "algos.algorithm.Algorithm"]], "algos.algorithm": [[4, "module-algos.algorithm"]], "close() (algorithm method)": [[4, "algos.algorithm.Algorithm.close"]], "is_okay (algorithm property)": [[4, "algos.algorithm.Algorithm.is_okay"]], "module": [[4, "module-algos.algorithm"], [5, "module-algos.aruco"], [6, "module-algos"], [7, "module-drivers.cameras.camera"], [8, "module-drivers.cameras.flir"], [9, "module-drivers.cameras"], [10, "module-drivers.cameras.pkl"], [11, "module-drivers.cameras.realsense"], [12, "module-drivers"], [13, "module-drivers.safe_serial"], [14, "module-drivers.sensor"], [15, "module-drivers.spads"], [16, "module-drivers.spads.pkl"], [17, "module-drivers.spads.spad"], [18, "module-drivers.spads.tmf8828"], [19, "module-drivers.spads.vl53l8ch"], [20, "module-drivers.stepper_motors"], [21, "module-drivers.stepper_motors.kinesis_stepper"], [22, "module-drivers.stepper_motors.stepper_controller"], [23, "module-drivers.stepper_motors.stepper_motor"], [24, "module-drivers.stepper_motors.stepper_system"], [25, "module-drivers.stepper_motors.telemetrix_stepper"], [26, "module-utils.asyncio_utils"], [27, "module-utils.blocking_deque"], [28, "module-utils.constants"], [29, "module-utils.file_handlers"], [30, "module-utils"], [31, "module-utils.logger"], [32, "module-utils.manager"], [33, "module-utils.plotting"], [34, "module-utils.registry"], [35, "module-utils.singleton"], [36, "module-utils.transformations"], [37, "module-cc_hardware.tools"]], "run() (algorithm method)": [[4, "algos.algorithm.Algorithm.run"]], "arucolocalizationalgorithm (class in algos.aruco)": [[5, "algos.aruco.ArucoLocalizationAlgorithm"]], "algos.aruco": [[5, "module-algos.aruco"]], "close() (arucolocalizationalgorithm method)": [[5, "algos.aruco.ArucoLocalizationAlgorithm.close"]], "is_okay (arucolocalizationalgorithm property)": [[5, "algos.aruco.ArucoLocalizationAlgorithm.is_okay"]], "run() (arucolocalizationalgorithm method)": [[5, "algos.aruco.ArucoLocalizationAlgorithm.run"]], "algos": [[6, "module-algos"]], "camera (class in drivers.cameras.camera)": [[7, "drivers.cameras.camera.Camera"]], "accumulate() (camera method)": [[7, "drivers.cameras.camera.Camera.accumulate"]], "distortion_coefficients (camera property)": [[7, "drivers.cameras.camera.Camera.distortion_coefficients"]], "drivers.cameras.camera": [[7, "module-drivers.cameras.camera"]], "intrinsic_matrix (camera property)": [[7, "drivers.cameras.camera.Camera.intrinsic_matrix"]], "resolution (camera property)": [[7, "drivers.cameras.camera.Camera.resolution"]], "flircamera (class in drivers.cameras.flir)": [[8, "drivers.cameras.flir.FlirCamera"]], "grasshopperflircamera (class in drivers.cameras.flir)": [[8, "drivers.cameras.flir.GrasshopperFlirCamera"]], "accumulate() (flircamera method)": [[8, "drivers.cameras.flir.FlirCamera.accumulate"]], "close() (flircamera method)": [[8, "drivers.cameras.flir.FlirCamera.close"]], "distortion_coefficients (grasshopperflircamera property)": [[8, "drivers.cameras.flir.GrasshopperFlirCamera.distortion_coefficients"]], "drivers.cameras.flir": [[8, "module-drivers.cameras.flir"]], "intrinsic_matrix (grasshopperflircamera property)": [[8, "drivers.cameras.flir.GrasshopperFlirCamera.intrinsic_matrix"]], "is_okay (flircamera property)": [[8, "drivers.cameras.flir.FlirCamera.is_okay"]], "resolution (flircamera property)": [[8, "drivers.cameras.flir.FlirCamera.resolution"]], "drivers.cameras": [[9, "module-drivers.cameras"]], "pklcamera (class in drivers.cameras.pkl)": [[10, "drivers.cameras.pkl.PklCamera"]], "accumulate() (pklcamera method)": [[10, "drivers.cameras.pkl.PklCamera.accumulate"]], "close() (pklcamera method)": [[10, "drivers.cameras.pkl.PklCamera.close"]], "distortion_coefficients (pklcamera property)": [[10, "drivers.cameras.pkl.PklCamera.distortion_coefficients"]], "drivers.cameras.pkl": [[10, "module-drivers.cameras.pkl"]], "intrinsic_matrix (pklcamera property)": [[10, "drivers.cameras.pkl.PklCamera.intrinsic_matrix"]], "is_okay (pklcamera property)": [[10, "drivers.cameras.pkl.PklCamera.is_okay"]], "resolution (pklcamera property)": [[10, "drivers.cameras.pkl.PklCamera.resolution"]], "realsensecamera (class in drivers.cameras.realsense)": [[11, "drivers.cameras.realsense.RealsenseCamera"]], "accumulate() (realsensecamera method)": [[11, "drivers.cameras.realsense.RealsenseCamera.accumulate"]], "close() (realsensecamera method)": [[11, "drivers.cameras.realsense.RealsenseCamera.close"]], "distortion_coefficients (realsensecamera property)": [[11, "drivers.cameras.realsense.RealsenseCamera.distortion_coefficients"]], "drivers.cameras.realsense": [[11, "module-drivers.cameras.realsense"]], "intrinsic_matrix (realsensecamera property)": [[11, "drivers.cameras.realsense.RealsenseCamera.intrinsic_matrix"]], "is_okay (realsensecamera property)": [[11, "drivers.cameras.realsense.RealsenseCamera.is_okay"]], "resolution (realsensecamera property)": [[11, "drivers.cameras.realsense.RealsenseCamera.resolution"]], "drivers": [[12, "module-drivers"]], "safeserial (class in drivers.safe_serial)": [[13, "drivers.safe_serial.SafeSerial"]], "create() (safeserial class method)": [[13, "drivers.safe_serial.SafeSerial.create"]], "drivers.safe_serial": [[13, "module-drivers.safe_serial"]], "read() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.read"]], "wait_for_start_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.wait_for_start_talk"]], "wait_for_stop_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.wait_for_stop_talk"]], "write() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.write"]], "write_and_wait_for_start_and_stop_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.write_and_wait_for_start_and_stop_talk"]], "write_and_wait_for_start_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.write_and_wait_for_start_talk"]], "write_and_wait_for_stop_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.write_and_wait_for_stop_talk"]], "sensor (class in drivers.sensor)": [[14, "drivers.sensor.Sensor"]], "sensordata (class in drivers.sensor)": [[14, "drivers.sensor.SensorData"]], "sensordatathreaded (class in drivers.sensor)": [[14, "drivers.sensor.SensorDataThreaded"]], "__del__() (sensor method)": [[14, "drivers.sensor.Sensor.__del__"]], "calibrate() (sensor method)": [[14, "drivers.sensor.Sensor.calibrate"]], "close() (sensor method)": [[14, "drivers.sensor.Sensor.close"]], "drivers.sensor": [[14, "module-drivers.sensor"]], "get_data() (sensordata method)": [[14, "drivers.sensor.SensorData.get_data"]], "get_data() (sensordatathreaded method)": [[14, "drivers.sensor.SensorDataThreaded.get_data"]], "is_okay (sensor property)": [[14, "drivers.sensor.Sensor.is_okay"]], "process() (sensordata method)": [[14, "drivers.sensor.SensorData.process"]], "reset() (sensordata method)": [[14, "drivers.sensor.SensorData.reset"]], "reset() (sensordatathreaded method)": [[14, "drivers.sensor.SensorDataThreaded.reset"]], "drivers.spads": [[15, "module-drivers.spads"]], "pklspadsensor (class in drivers.spads.pkl)": [[16, "drivers.spads.pkl.PklSPADSensor"]], "accumulate() (pklspadsensor method)": [[16, "drivers.spads.pkl.PklSPADSensor.accumulate"]], "bin_width (pklspadsensor property)": [[16, "drivers.spads.pkl.PklSPADSensor.bin_width"]], "close() (pklspadsensor method)": [[16, "drivers.spads.pkl.PklSPADSensor.close"]], "drivers.spads.pkl": [[16, "module-drivers.spads.pkl"]], "is_okay (pklspadsensor property)": [[16, "drivers.spads.pkl.PklSPADSensor.is_okay"]], "num_bins (pklspadsensor property)": [[16, "drivers.spads.pkl.PklSPADSensor.num_bins"]], "resolution (pklspadsensor property)": [[16, "drivers.spads.pkl.PklSPADSensor.resolution"]], "spadsensor (class in drivers.spads.spad)": [[17, "drivers.spads.spad.SPADSensor"]], "accumulate() (spadsensor method)": [[17, "drivers.spads.spad.SPADSensor.accumulate"]], "bin_width (spadsensor property)": [[17, "drivers.spads.spad.SPADSensor.bin_width"]], "drivers.spads.spad": [[17, "module-drivers.spads.spad"]], "num_bins (spadsensor property)": [[17, "drivers.spads.spad.SPADSensor.num_bins"]], "resolution (spadsensor property)": [[17, "drivers.spads.spad.SPADSensor.resolution"]], "rangemode (class in drivers.spads.tmf8828)": [[18, "drivers.spads.tmf8828.RangeMode"]], "spadid (class in drivers.spads.tmf8828)": [[18, "drivers.spads.tmf8828.SPADID"]], "tmf8828histogram (class in drivers.spads.tmf8828)": [[18, "drivers.spads.tmf8828.TMF8828Histogram"]], "tmf8828object (class in drivers.spads.tmf8828)": [[18, "drivers.spads.tmf8828.TMF8828Object"]], "tmf8828sensor (class in drivers.spads.tmf8828)": [[18, "drivers.spads.tmf8828.TMF8828Sensor"]], "accumulate() (tmf8828sensor method)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.accumulate"]], "bin_width (tmf8828sensor property)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.bin_width"]], "calibrate() (tmf8828sensor method)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.calibrate"]], "close() (tmf8828sensor method)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.close"]], "drivers.spads.tmf8828": [[18, "module-drivers.spads.tmf8828"]], "get_data() (tmf8828histogram method)": [[18, "drivers.spads.tmf8828.TMF8828Histogram.get_data"]], "get_data() (tmf8828object method)": [[18, "drivers.spads.tmf8828.TMF8828Object.get_data"]], "has_data (tmf8828histogram property)": [[18, "drivers.spads.tmf8828.TMF8828Histogram.has_data"]], "initialize() (tmf8828sensor method)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.initialize"]], "is_okay (tmf8828sensor property)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.is_okay"]], "num_bins (tmf8828sensor property)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.num_bins"]], "num_pixels (tmf8828sensor property)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.num_pixels"]], "process() (tmf8828histogram method)": [[18, "drivers.spads.tmf8828.TMF8828Histogram.process"]], "process() (tmf8828object method)": [[18, "drivers.spads.tmf8828.TMF8828Object.process"]], "read() (tmf8828sensor method)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.read"]], "reset() (tmf8828histogram method)": [[18, "drivers.spads.tmf8828.TMF8828Histogram.reset"]], "reset() (tmf8828object method)": [[18, "drivers.spads.tmf8828.TMF8828Object.reset"]], "resolution (tmf8828sensor property)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.resolution"]], "setup_sensor() (tmf8828sensor method)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.setup_sensor"]], "write() (tmf8828sensor method)": [[18, "drivers.spads.tmf8828.TMF8828Sensor.write"]], "vl53l8chhistogram (class in drivers.spads.vl53l8ch)": [[19, "drivers.spads.vl53l8ch.VL53L8CHHistogram"]], "vl53l8chsensor (class in drivers.spads.vl53l8ch)": [[19, "drivers.spads.vl53l8ch.VL53L8CHSensor"]], "accumulate() (vl53l8chsensor method)": [[19, "drivers.spads.vl53l8ch.VL53L8CHSensor.accumulate"]], "bin_width (vl53l8chsensor property)": [[19, "drivers.spads.vl53l8ch.VL53L8CHSensor.bin_width"]], "close() (vl53l8chsensor method)": [[19, "drivers.spads.vl53l8ch.VL53L8CHSensor.close"]], "drivers.spads.vl53l8ch": [[19, "module-drivers.spads.vl53l8ch"]], "get_data() (vl53l8chhistogram method)": [[19, "drivers.spads.vl53l8ch.VL53L8CHHistogram.get_data"]], "is_okay (vl53l8chsensor property)": [[19, "drivers.spads.vl53l8ch.VL53L8CHSensor.is_okay"]], "num_bins (vl53l8chsensor property)": [[19, "drivers.spads.vl53l8ch.VL53L8CHSensor.num_bins"]], "process() (vl53l8chhistogram method)": [[19, "drivers.spads.vl53l8ch.VL53L8CHHistogram.process"]], "reset() (vl53l8chhistogram method)": [[19, "drivers.spads.vl53l8ch.VL53L8CHHistogram.reset"]], "resolution (vl53l8chsensor property)": [[19, "drivers.spads.vl53l8ch.VL53L8CHSensor.resolution"]], "drivers.stepper_motors": [[20, "module-drivers.stepper_motors"]], "azimuthelevationsystem (class in drivers.stepper_motors.kinesis_stepper)": [[21, "drivers.stepper_motors.kinesis_stepper.AzimuthElevationSystem"]], "kinesisrotationstage (class in drivers.stepper_motors.kinesis_stepper)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage"]], "kinesissteppermotor (class in drivers.stepper_motors.kinesis_stepper)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor"]], "kinesissteppermotorsystem (class in drivers.stepper_motors.kinesis_stepper)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotorSystem"]], "close() (kinesissteppermotor method)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.close"]], "drivers.stepper_motors.kinesis_stepper": [[21, "module-drivers.stepper_motors.kinesis_stepper"]], "home() (kinesissteppermotor method)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.home"]], "initialize() (kinesisrotationstage method)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage.initialize"]], "initialize() (kinesissteppermotor method)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.initialize"]], "is_okay (kinesissteppermotor property)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.is_okay"]], "lower_limit (kinesissteppermotor property)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.lower_limit"]], "move_by() (kinesissteppermotor method)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.move_by"]], "move_to() (kinesissteppermotor method)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.move_to"]], "position (kinesissteppermotor property)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.position"]], "upper_limit (kinesissteppermotor property)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.upper_limit"]], "wait_for_move() (kinesissteppermotor method)": [[21, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.wait_for_move"]], "snakesteppercontroller (class in drivers.stepper_motors.stepper_controller)": [[22, "drivers.stepper_motors.stepper_controller.SnakeStepperController"]], "steppercontroller (class in drivers.stepper_motors.stepper_controller)": [[22, "drivers.stepper_motors.stepper_controller.StepperController"]], "drivers.stepper_motors.stepper_controller": [[22, "module-drivers.stepper_motors.stepper_controller"]], "get_position() (snakesteppercontroller method)": [[22, "drivers.stepper_motors.stepper_controller.SnakeStepperController.get_position"]], "get_position() (steppercontroller method)": [[22, "drivers.stepper_motors.stepper_controller.StepperController.get_position"]], "dummysteppermotor (class in drivers.stepper_motors.stepper_motor)": [[23, "drivers.stepper_motors.stepper_motor.DummyStepperMotor"]], "steppermotor (class in drivers.stepper_motors.stepper_motor)": [[23, "drivers.stepper_motors.stepper_motor.StepperMotor"]], "close() (steppermotor method)": [[23, "drivers.stepper_motors.stepper_motor.StepperMotor.close"]], "drivers.stepper_motors.stepper_motor": [[23, "module-drivers.stepper_motors.stepper_motor"]], "home() (steppermotor method)": [[23, "drivers.stepper_motors.stepper_motor.StepperMotor.home"]], "is_okay (steppermotor property)": [[23, "drivers.stepper_motors.stepper_motor.StepperMotor.is_okay"]], "move_by() (steppermotor method)": [[23, "drivers.stepper_motors.stepper_motor.StepperMotor.move_by"]], "move_to() (steppermotor method)": [[23, "drivers.stepper_motors.stepper_motor.StepperMotor.move_to"]], "position (steppermotor property)": [[23, "drivers.stepper_motors.stepper_motor.StepperMotor.position"]], "wait_for_move() (steppermotor method)": [[23, "drivers.stepper_motors.stepper_motor.StepperMotor.wait_for_move"]], "steppermotorsystem (class in drivers.stepper_motors.stepper_system)": [[24, "drivers.stepper_motors.stepper_system.StepperMotorSystem"]], "steppermotorsystemaxis (class in drivers.stepper_motors.stepper_system)": [[24, "drivers.stepper_motors.stepper_system.StepperMotorSystemAxis"]], "__getattr__() (steppermotorsystem method)": [[24, "drivers.stepper_motors.stepper_system.StepperMotorSystem.__getattr__"]], "close() (steppermotorsystem method)": [[24, "drivers.stepper_motors.stepper_system.StepperMotorSystem.close"]], "drivers.stepper_motors.stepper_system": [[24, "module-drivers.stepper_motors.stepper_system"]], "move_by() (steppermotorsystem method)": [[24, "drivers.stepper_motors.stepper_system.StepperMotorSystem.move_by"]], "move_to() (steppermotorsystem method)": [[24, "drivers.stepper_motors.stepper_system.StepperMotorSystem.move_to"]], "position (steppermotorsystem property)": [[24, "drivers.stepper_motors.stepper_system.StepperMotorSystem.position"]], "wait_for_move() (steppermotorsystem method)": [[24, "drivers.stepper_motors.stepper_system.StepperMotorSystem.wait_for_move"]], "dualdrive2axisgantry (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry"]], "dualdrive2axisgantry_x (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_X"]], "dualdrive2axisgantry_y1 (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_Y1"]], "dualdrive2axisgantry_y2 (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_Y2"]], "singledrive1axisgantry (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry"]], "singledrive1axisgantry_x (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry_X"]], "singledrive1axisgantry_y (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry_Y"]], "telemetrixsteppermotor (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor"]], "telemetrixsteppermotorsystem (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem"]], "telemetrixsteppermotorx (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorX"]], "telemetrixsteppermotorxreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorXReversed"]], "telemetrixsteppermotory (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorY"]], "telemetrixsteppermotoryreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorYReversed"]], "telemetrixsteppermotorz (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorZ"]], "telemetrixsteppermotorzreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorZReversed"]], "__getattr__() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.__getattr__"]], "close() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.close"]], "close() (telemetrixsteppermotorsystem method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem.close"]], "cm_to_revs() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.cm_to_revs"]], "drivers.stepper_motors.telemetrix_stepper": [[25, "module-drivers.stepper_motors.telemetrix_stepper"]], "home() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.home"]], "id (telemetrixsteppermotor property)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.id"]], "is_okay (telemetrixsteppermotor property)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.is_okay"]], "move_by() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.move_by"]], "move_to() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.move_to"]], "position (telemetrixsteppermotor property)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.position"]], "revs_to_cm() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.revs_to_cm"]], "set_absolute_target_position_cm() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.set_absolute_target_position_cm"]], "set_target_position_cm() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.set_target_position_cm"]], "wait_for_move() (telemetrixsteppermotor method)": [[25, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.wait_for_move"]], "call_async() (in module utils.asyncio_utils)": [[26, "utils.asyncio_utils.call_async"]], "call_async_gather() (in module utils.asyncio_utils)": [[26, "utils.asyncio_utils.call_async_gather"]], "call_async_value() (in module utils.asyncio_utils)": [[26, "utils.asyncio_utils.call_async_value"]], "utils.asyncio_utils": [[26, "module-utils.asyncio_utils"]], "blockingdeque (class in utils.blocking_deque)": [[27, "utils.blocking_deque.BlockingDeque"]], "__getattr__() (blockingdeque method)": [[27, "utils.blocking_deque.BlockingDeque.__getattr__"]], "__getitem__() (blockingdeque method)": [[27, "utils.blocking_deque.BlockingDeque.__getitem__"]], "__len__() (blockingdeque method)": [[27, "utils.blocking_deque.BlockingDeque.__len__"]], "__repr__() (blockingdeque method)": [[27, "utils.blocking_deque.BlockingDeque.__repr__"]], "append() (blockingdeque method)": [[27, "utils.blocking_deque.BlockingDeque.append"]], "utils.blocking_deque": [[27, "module-utils.blocking_deque"]], "c (in module utils.constants)": [[28, "utils.constants.C"]], "utils.constants": [[28, "module-utils.constants"]], "pklhandler (class in utils.file_handlers)": [[29, "utils.file_handlers.PklHandler"]], "videowriter (class in utils.file_handlers)": [[29, "utils.file_handlers.VideoWriter"]], "__del__() (videowriter method)": [[29, "utils.file_handlers.VideoWriter.__del__"]], "__len__() (pklhandler method)": [[29, "utils.file_handlers.PklHandler.__len__"]], "append() (pklhandler method)": [[29, "utils.file_handlers.PklHandler.append"]], "append() (videowriter method)": [[29, "utils.file_handlers.VideoWriter.append"]], "close() (videowriter method)": [[29, "utils.file_handlers.VideoWriter.close"]], "load() (pklhandler method)": [[29, "utils.file_handlers.PklHandler.load"]], "load_all() (pklhandler static method)": [[29, "utils.file_handlers.PklHandler.load_all"]], "update_index() (pklhandler method)": [[29, "utils.file_handlers.PklHandler.update_index"]], "utils.file_handlers": [[29, "module-utils.file_handlers"]], "write() (pklhandler method)": [[29, "utils.file_handlers.PklHandler.write"]], "utils": [[30, "module-utils"]], "filehandler (class in utils.logger)": [[31, "utils.logger.FileHandler"]], "loggermaxlevelfilter (class in utils.logger)": [[31, "utils.logger.LoggerMaxLevelFilter"]], "tqdmstreamhandler (class in utils.logger)": [[31, "utils.logger.TqdmStreamHandler"]], "emit() (tqdmstreamhandler method)": [[31, "utils.logger.TqdmStreamHandler.emit"]], "filter() (loggermaxlevelfilter method)": [[31, "utils.logger.LoggerMaxLevelFilter.filter"]], "utils.logger": [[31, "module-utils.logger"]], "component (class in utils.manager)": [[32, "utils.manager.Component"]], "manager (class in utils.manager)": [[32, "utils.manager.Manager"]], "__enter__() (manager method)": [[32, "utils.manager.Manager.__enter__"]], "__exit__() (manager method)": [[32, "utils.manager.Manager.__exit__"]], "add() (manager method)": [[32, "utils.manager.Manager.add"]], "close() (component method)": [[32, "utils.manager.Component.close"]], "close() (manager method)": [[32, "utils.manager.Manager.close"]], "components (manager property)": [[32, "utils.manager.Manager.components"]], "is_okay (component property)": [[32, "utils.manager.Component.is_okay"]], "is_okay (manager property)": [[32, "utils.manager.Manager.is_okay"]], "run() (manager method)": [[32, "utils.manager.Manager.run"]], "utils.manager": [[32, "module-utils.manager"]], "set_matplotlib_style() (in module utils.plotting)": [[33, "utils.plotting.set_matplotlib_style"]], "transient_gui() (in module utils.plotting)": [[33, "utils.plotting.transient_gui"]], "utils.plotting": [[33, "module-utils.plotting"]], "registry (class in utils.registry)": [[34, "utils.registry.Registry"]], "create_from_registry() (registry class method)": [[34, "utils.registry.Registry.create_from_registry"]], "register() (registry class method)": [[34, "utils.registry.Registry.register"]], "register() (in module utils.registry)": [[34, "utils.registry.register"]], "utils.registry": [[34, "module-utils.registry"]], "singletonabcmeta (class in utils.singleton)": [[35, "utils.singleton.SingletonABCMeta"]], "singletonmeta (class in utils.singleton)": [[35, "utils.singleton.SingletonMeta"]], "__call__() (singletonmeta method)": [[35, "utils.singleton.SingletonMeta.__call__"]], "instance() (singletonmeta class method)": [[35, "utils.singleton.SingletonMeta.instance"]], "utils.singleton": [[35, "module-utils.singleton"]], "utils.transformations": [[36, "module-utils.transformations"]], "cc_hardware.tools": [[37, "module-cc_hardware.tools"]]}})