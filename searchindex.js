Search.setIndex({"docnames": ["_templates/python/module", "contributing", "index", "usage/api", "usage/api/algos/algorithm/index", "usage/api/algos/aruco/index", "usage/api/algos/index", "usage/api/drivers/cameras/camera/index", "usage/api/drivers/cameras/flir/index", "usage/api/drivers/cameras/index", "usage/api/drivers/cameras/pkl/index", "usage/api/drivers/cameras/realsense/index", "usage/api/drivers/index", "usage/api/drivers/safe_serial/index", "usage/api/drivers/sensor/index", "usage/api/drivers/spads/dashboard/index", "usage/api/drivers/spads/index", "usage/api/drivers/spads/pkl/index", "usage/api/drivers/spads/spad/index", "usage/api/drivers/spads/tmf8828/index", "usage/api/drivers/spads/vl53l8ch/index", "usage/api/drivers/stepper_motors/index", "usage/api/drivers/stepper_motors/kinesis_stepper/index", "usage/api/drivers/stepper_motors/stepper_controller/index", "usage/api/drivers/stepper_motors/stepper_motor/index", "usage/api/drivers/stepper_motors/stepper_system/index", "usage/api/drivers/stepper_motors/telemetrix_stepper/index", "usage/api/utils/asyncio_utils/index", "usage/api/utils/blocking_deque/index", "usage/api/utils/constants/index", "usage/api/utils/file_handlers/index", "usage/api/utils/index", "usage/api/utils/logger/index", "usage/api/utils/manager/index", "usage/api/utils/plotting/index", "usage/api/utils/registry/index", "usage/api/utils/serial_utils/index", "usage/api/utils/singleton/index", "usage/api/utils/transformations/index", "usage/cli", "usage/index"], "filenames": ["_templates/python/module.rst", "contributing.md", "index.md", "usage/api.md", "usage/api/algos/algorithm/index.rst", "usage/api/algos/aruco/index.rst", "usage/api/algos/index.rst", "usage/api/drivers/cameras/camera/index.rst", "usage/api/drivers/cameras/flir/index.rst", "usage/api/drivers/cameras/index.rst", "usage/api/drivers/cameras/pkl/index.rst", "usage/api/drivers/cameras/realsense/index.rst", "usage/api/drivers/index.rst", "usage/api/drivers/safe_serial/index.rst", "usage/api/drivers/sensor/index.rst", "usage/api/drivers/spads/dashboard/index.rst", "usage/api/drivers/spads/index.rst", "usage/api/drivers/spads/pkl/index.rst", "usage/api/drivers/spads/spad/index.rst", "usage/api/drivers/spads/tmf8828/index.rst", "usage/api/drivers/spads/vl53l8ch/index.rst", "usage/api/drivers/stepper_motors/index.rst", "usage/api/drivers/stepper_motors/kinesis_stepper/index.rst", "usage/api/drivers/stepper_motors/stepper_controller/index.rst", "usage/api/drivers/stepper_motors/stepper_motor/index.rst", "usage/api/drivers/stepper_motors/stepper_system/index.rst", "usage/api/drivers/stepper_motors/telemetrix_stepper/index.rst", "usage/api/utils/asyncio_utils/index.rst", "usage/api/utils/blocking_deque/index.rst", "usage/api/utils/constants/index.rst", "usage/api/utils/file_handlers/index.rst", "usage/api/utils/index.rst", "usage/api/utils/logger/index.rst", "usage/api/utils/manager/index.rst", "usage/api/utils/plotting/index.rst", "usage/api/utils/registry/index.rst", "usage/api/utils/serial_utils/index.rst", "usage/api/utils/singleton/index.rst", "usage/api/utils/transformations/index.rst", "usage/cli.md", "usage/index.md"], "titles": ["&lt;no title&gt;", "Contributing", "Camera Culture Hardware Repo", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos.aruco</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.camera</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.flir</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.pkl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.realsense</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.safe_serial</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.sensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.dashboard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.pkl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.spad</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.tmf8828</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.vl53l8ch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.kinesis_stepper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_motor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_system</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.telemetrix_stepper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.asyncio_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.blocking_deque</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.file_handlers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.plotting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.serial_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.singleton</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.transformations</span></code>", "CLI Documentation", "Reference"], "terms": {"obj": 0, "displai": [0, 5, 15, 34], "orphan": 0, "endif": 0, "name": [0, 1, 13, 19, 23, 25, 26, 28, 35, 36], "length": 0, "loc_fil": 0, "jinja_env": 0, "test": [0, 17, 24], "set": [0, 1, 8, 11, 15, 20, 22, 26, 32, 34], "readm": [0, 1, 2], "url_root": 0, "pathnam": 0, "md": [0, 1, 2], "i": [0, 1, 2, 4, 5, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 24, 25, 26, 28, 30, 32, 33, 35, 37, 39], "docstr": 0, "autoapi": 0, "nest": 0, "pars": 0, "indent": 0, "3": [0, 8, 19, 25], "block": [0, 24, 25, 26, 28], "subpackag": 0, "visible_subpackag": 0, "selectattr": 0, "list": [0, 5, 11, 13, 14, 15, 17, 19, 20, 22, 23, 25, 26, 27, 30, 36], "toctre": 0, "titlesonli": 0, "maxdepth": 0, "short_nam": 0, "index": [0, 1, 23, 27, 28, 30], "rst": 0, "endfor": 0, "endblock": 0, "submodul": 0, "visible_submodul": 0, "1": [0, 1, 5, 8, 13, 15, 19, 22, 25, 30, 39], "content": [0, 1], "all": [0, 1, 2, 4, 13, 15, 18, 19, 23, 24, 27, 30, 33, 36], "none": [0, 5, 8, 10, 11, 13, 15, 19, 20, 22, 26, 30, 33, 34, 36, 39], "visible_children": 0, "children": 0, "elif": 0, "type": [0, 4, 13, 22, 37], "equalto": 0, "packag": [0, 1, 8, 9, 16, 21, 32, 39], "els": 0, "rejectattr": 0, "import": [0, 2, 15, 32, 33, 37], "titl": [0, 1], "visible_class": 0, "class": [0, 1, 2, 36, 38], "visible_funct": 0, "function": [0, 1, 2, 5, 15, 20, 30, 33, 37], "visible_attribut": 0, "data": [0, 1, 2, 8, 10, 13, 14, 15, 17, 18, 19, 20, 30, 34, 39], "show": [0, 5, 34, 39], "modul": [0, 38], "summari": 0, "autoapi_opt": 0, "scope": 0, "klass": 0, "id": [0, 19, 26], "attribut": [0, 13, 19, 25, 28, 32, 39], "obj_item": 0, "render": 0, "0": [0, 1, 8, 11, 22, 29, 39], "repositori": [1, 2], "fairli": 1, "easi": 1, "so": [1, 8], "pleas": 1, "see": [1, 19, 25], "below": 1, "instruct": [1, 8], "how": [1, 19, 25, 32], "actual": [1, 17], "make": [1, 2, 27, 28], "thi": [1, 2, 4, 5, 8, 10, 11, 15, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 32, 33, 37, 38, 39], "project": 1, "There": [1, 15], "ar": [1, 2, 5, 15, 22, 24, 25, 26, 30, 33, 36], "two": 1, "form": 1, "simpl": [1, 8, 11, 22], "ad": [1, 19, 25], "within": [1, 2, 20], "doc": 1, "folder": 1, "written": [1, 13, 30, 32], "markdown": 1, "convert": [1, 26], "html": 1, "through": [1, 26], "myst_pars": 1, "sphinx": 1, "To": [1, 2, 8], "well": [1, 11], "you": [1, 2, 8, 15, 24, 26], "want": 1, "symlink": [1, 2], "A": [1, 4, 5, 7, 8, 10, 13, 17, 18, 19, 20, 22, 23, 25, 26, 28, 30, 32, 35, 36, 37], "conda": 1, "virtualenv": 1, "add": [1, 4, 33], "isol": 1, "python": [1, 8], "environ": [1, 28], "reduc": 1, "conflict": 1, "amongst": 1, "It": [1, 8, 11, 13, 15, 19, 20, 22, 24, 30, 32, 33, 37], "highli": 1, "recommend": 1, "us": [1, 2, 5, 8, 13, 15, 17, 19, 22, 24, 25, 26, 28, 32, 33, 35, 36, 37, 39], "one": [1, 8, 11, 37, 39], "normal": [1, 39], "git": [1, 2], "http": 1, "github": [1, 2], "com": [1, 2], "camera": [1, 5, 12, 33], "cultur": 1, "cc": [1, 9, 16, 20, 21], "hardwar": [1, 9, 16, 17, 20, 21, 24], "cd": [1, 2], "sinc": 1, "organ": [1, 19], "monorepo": [1, 2], "need": [1, 2, 8, 37], "poetri": [1, 2], "The": [1, 2, 5, 7, 8, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 32, 33, 35, 36, 37, 39], "develop": [1, 2, 19], "mode": [1, 2, 15, 19, 20, 34, 39], "e": [1, 2, 18, 24, 25, 39], "symbol": 1, "link": 1, "immedi": 1, "reflect": [1, 2], "pip": [1, 2, 8], "action": 1, "automat": [1, 2], "site": [1, 8], "page": 1, "host": 1, "static": [1, 30], "updat": [1, 15, 19, 20], "have": [1, 2, 19, 24, 25], "push": 1, "main": [1, 15, 20], "branch": 1, "onc": 1, "rebuild": 1, "ensur": [1, 8, 11, 14, 24, 25, 28, 30, 33, 37], "error": [1, 4, 24], "befor": [1, 13, 22, 33, 39], "do": [1, 8, 32], "mai": [1, 4, 8, 18, 24, 32], "get": [1, 7, 8, 10, 11, 20, 22, 23, 25, 28, 30], "an": [1, 4, 5, 7, 13, 15, 17, 18, 20, 22, 23, 24, 27, 28, 30, 32, 35, 37, 39], "email": 1, "from": [1, 5, 7, 8, 10, 11, 13, 15, 17, 18, 19, 20, 24, 26, 28, 30, 32, 33, 34, 35, 37, 39], "someth": [1, 13], "bad": 1, "happen": [1, 13], "tag": 1, "exampl": [1, 8, 15, 19, 25, 30, 32, 33, 37], "v3": 1, "follow": [1, 2, 8], "pkg": [1, 2], "algo": [1, 2, 3], "contain": [1, 2, 4, 5, 7, 8, 10, 17, 19, 26, 33], "algorithm": [1, 2, 5, 6], "process": [1, 2, 5, 14, 15, 19, 20], "driver": [1, 2, 3], "interfac": [1, 2, 4, 8, 11, 13, 19, 20, 22, 24, 26, 34, 39], "util": [1, 2, 3, 4, 13, 14, 15, 23, 24], "tool": [1, 2, 39], "work": [1, 2, 38], "calibr": [1, 2, 14, 19], "visual": [1, 2, 15, 34], "script": [1, 2, 19, 20, 39], "addit": [1, 4, 13, 22, 33, 36, 37], "licens": 1, "pyproject": [1, 2], "toml": [1, 2], "descript": 1, "If": [1, 13, 15, 20, 26, 30, 32, 35, 36], "plan": 1, "visit": 1, "correspond": [1, 19], "under": 1, "each": [1, 2, 4, 13, 15, 17, 19, 30, 33, 39], "should": [1, 2, 4, 15, 24, 25, 26, 30, 32], "cc_hardwar": [1, 2, 4, 5, 7, 8, 10, 11, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 32, 33], "__init__": [1, 2, 37], "py": [1, 2], "googl": 1, "": [1, 2, 4, 7, 17, 18, 19, 20, 24, 25, 26, 29], "style": [1, 15, 34], "These": [1, 26], "also": [1, 2, 13, 24, 26, 30, 32, 37], "gener": 1, "tutori": 1, "fix": 1, "exist": [1, 14, 30, 32, 37], "_static": 1, "persist": 1, "css": 1, "custom": [1, 19, 32, 39], "differ": [1, 13, 15, 19, 22], "default": [1, 4, 5, 8, 11, 13, 15, 17, 19, 20, 22, 30, 33, 34, 39], "furo": 1, "theme": 1, "imag": [1, 5, 8, 10, 11, 39], "favicon": 1, "etc": 1, "usag": [1, 39], "refer": [1, 18, 22, 24, 26], "guid": 1, "eyesofcambrian": 1, "conf": 1, "relat": [1, 18], "extens": 1, "home": [1, 22, 24, 26], "try": 1, "maintain": 1, "describ": [1, 2], "abov": 1, "tab": 1, "onli": [1, 8, 11, 22, 36, 37], "singl": [1, 13, 18, 19, 25, 30, 37], "background": [1, 8, 11, 19, 20], "ha": [1, 4, 8, 19, 22, 24, 25, 26, 32], "multipl": [1, 2, 13, 19, 20, 22, 25, 26, 27, 30], "creat": [1, 2, 8, 11, 13, 19, 25, 32, 34, 35, 37], "same": [1, 24, 25, 37], "insert": 1, "without": [1, 2, 15, 17, 30], "tabl": 1, "insid": 1, "restructuredtext": 1, "which": [1, 22, 24, 25, 26, 32, 33], "both": [1, 5, 11, 37], "advantag": 1, "disadvantag": 1, "allow": [1, 2, 19, 33], "u": 1, "understand": 1, "languag": 1, "compil": 1, "down": [1, 24, 25, 26], "featur": [1, 15, 22], "librari": [1, 8, 11, 22, 26], "websit": 1, "wai": [1, 2], "easiest": 1, "makefil": [1, 20], "bat": 1, "provid": [1, 4, 8, 11, 13, 15, 20, 22, 23, 24, 26, 27, 28, 30, 32, 35, 37, 38, 39], "directli": [1, 26], "necessari": [1, 20, 37], "depend": [1, 2, 18, 24], "run": [1, 2, 4, 5, 8, 15, 19, 33], "command": [1, 2, 8, 24, 25, 26, 39], "dev": [1, 39], "clean": 1, "view": [1, 39], "go": [1, 8], "browser": 1, "open": [1, 5, 10], "locat": [1, 24, 25, 39], "autobuild": 1, "extrem": 1, "when": [1, 2, 24, 28, 30, 33], "made": [1, 19], "pypi": 1, "tl": 1, "dr": 1, "instal": [2, 39], "can": [2, 4, 8, 13, 15, 18, 19, 24, 25, 26, 33], "clone": 2, "chang": 2, "code": 2, "them": [2, 8, 11, 19, 22, 23, 24, 25, 26, 35], "reinstal": 2, "don": [2, 24], "t": [2, 24, 32], "behavior": [2, 17, 24, 28], "subdirectori": 2, "directori": [2, 32], "separ": 2, "done": 2, "current": [2, 15, 22, 23, 24, 25, 26, 39], "support": [2, 8, 14, 15, 19, 22, 30, 37], "package_nam": 2, "In": 2, "path": [2, 5, 15, 17, 19, 20, 30, 39], "module_nam": 2, "implement": [4, 8, 11, 13, 15, 19, 24, 25, 37], "sourc": [4, 5, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37], "base": [4, 5, 7, 8, 10, 11, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 37], "registri": [4, 14, 15, 23, 24, 31], "abc": [4, 14, 15, 23, 24, 37], "abstract": [4, 7, 10, 11, 14, 15, 18, 23, 24, 37], "properti": [4, 5, 7, 8, 10, 11, 14, 15, 17, 18, 19, 20, 22, 24, 25, 26, 33], "is_okai": [4, 5, 8, 10, 11, 14, 17, 19, 20, 22, 24, 26, 33], "bool": [4, 5, 7, 8, 10, 11, 13, 14, 15, 17, 19, 20, 22, 24, 26, 30, 33], "return": [4, 5, 7, 8, 10, 11, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37], "true": [4, 5, 8, 10, 11, 13, 15, 17, 19, 20, 22, 24, 26, 30, 32, 34, 39], "okai": [4, 5, 33], "fals": [4, 5, 8, 10, 11, 13, 15, 17, 19, 20, 22, 24, 26, 30, 32, 33, 34, 39], "otherwis": [4, 5, 8, 10, 11, 13, 19, 20, 22, 24, 32], "either": [4, 13, 20], "been": [4, 19], "initi": [4, 8, 11, 14, 22, 26], "properli": [4, 5, 8, 11, 14, 24, 25, 30, 33], "encount": 4, "result": [4, 5, 27], "subclass": [4, 23, 24, 35], "paramet": [4, 5, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 33, 34, 35, 36, 37], "method": [4, 7, 8, 10, 11, 13, 15, 17, 18, 19, 23, 24, 25, 26, 27, 30, 35, 39], "specifi": [4, 5, 7, 8, 10, 13, 15, 17, 18, 22, 24, 25, 26, 28, 30, 32, 35], "close": [4, 5, 8, 10, 11, 14, 17, 19, 20, 22, 24, 25, 26, 30, 33], "releas": [4, 5, 14, 24, 25, 33], "ani": [4, 5, 10, 13, 14, 15, 22, 24, 25, 28, 30, 33], "resourc": [4, 5, 10, 14, 24, 25, 33], "here": [4, 26], "overrid": [4, 8], "own": [4, 8, 19, 25], "local": 5, "marker": [5, 39], "arucolocalizationalgorithm": 5, "sensor": [5, 7, 10, 12, 15, 16, 17, 18, 19, 20, 24, 34, 39], "aruco_dict": [5, 39], "marker_s": 5, "origin_id": 5, "num_sampl": [5, 7, 8, 10, 11, 17, 18, 19, 20], "marker_id": 5, "detect": [5, 24, 26], "comput": [5, 24], "pose": 5, "rel": [5, 22, 24, 25, 26], "origin": 5, "check": [5, 8, 10, 11, 13, 14, 17, 19, 20, 22, 24, 26, 33, 36], "save": [5, 15, 34, 39], "filenam": [5, 15, 32, 34, 39], "return_imag": 5, "option": [5, 8, 15, 20, 22, 30, 33, 39], "whether": [5, 7, 8, 11, 13, 15, 17, 19, 22, 34, 39], "str": [5, 13, 15, 19, 20, 22, 26, 28, 30, 33], "video": [5, 30], "dict": [5, 17, 22, 23, 25, 26, 33], "dictionari": [5, 22, 23, 25, 26, 33], "associ": 5, "writer": [5, 30], "aruco": 6, "extend": 7, "defin": [7, 15, 17, 18, 19, 22, 24, 25], "specif": [7, 8, 13, 19, 24, 26, 27, 30], "distortion_coeffici": [7, 8, 10, 11], "numpi": [7, 8, 10, 11], "ndarrai": [7, 8, 10, 11, 14, 15, 17, 19, 20, 30], "distort": [7, 8, 10, 11], "coeffici": [7, 8, 10, 11], "np": [7, 8, 10, 11, 14, 15, 17, 19, 20, 30], "arrai": [7, 8, 10, 19], "repres": [7, 8, 10, 18, 19, 20, 24, 25], "intrinsic_matrix": [7, 8, 10, 11], "intrins": [7, 8, 10, 11], "matrix": [7, 8, 10, 11], "3x3": [7, 8, 10, 19], "resolut": [7, 8, 10, 11, 17, 18, 19, 20, 39], "tupl": [7, 8, 10, 11, 13, 17, 18, 19, 20], "int": [7, 8, 10, 11, 13, 15, 17, 18, 19, 20, 22, 23, 26, 28, 30], "width": [7, 8, 10, 11, 17, 18, 19, 39], "height": [7, 8, 10, 11, 17, 18, 19, 39], "accumul": [7, 8, 10, 11, 13, 17, 18, 19, 20], "averag": [7, 8, 17, 18, 19, 20], "number": [7, 8, 10, 11, 13, 15, 17, 18, 19, 20, 23, 26, 28, 30], "sampl": [7, 8, 10, 11, 17, 18, 19, 20], "keyword": [7, 8, 11, 13, 20, 22, 26, 30, 33, 35, 36, 37, 39], "argument": [7, 8, 11, 13, 15, 20, 22, 26, 30, 33, 35, 36, 37, 39], "flircamera": 8, "wrapper": [8, 11, 13, 22, 25, 26, 27, 28], "around": [8, 11, 13, 22, 25, 26, 28], "captur": [8, 11, 19], "singleton": [8, 11, 31], "instanc": [8, 11, 13, 15, 34, 35, 37], "new": [8, 14], "grasshopperflircamera": 8, "special": 8, "grasshopp": 8, "model": 8, "inherit": [8, 10, 17, 18, 19, 20], "036": 8, "145": 8, "001": 8, "155": 8, "1815": 8, "5": 8, "1817": 8, "753": 8, "721": 8, "299": 8, "531": 8, "352": 8, "def": [8, 33, 37], "self": [8, 15, 30, 37], "spinnak": 8, "usual": [8, 26], "As": 8, "write": [8, 13, 30, 32], "2024": 8, "09": 8, "21": 8, "10": [8, 13, 30, 34, 37, 39], "newer": 8, "version": 8, "step": [8, 24, 26], "after": [8, 33], "re": [8, 39], "tar": 8, "xvzf": 8, "spinnaker_python": 8, "cp": 8, "o": 8, "arch": 8, "gz": 8, "whl": 8, "But": 8, "fail": 8, "replac": 8, "your": 8, "For": 8, "11": 8, "m2": 8, "mac": 8, "would": 8, "turn": 8, "4": 8, "172": 8, "cp310": 8, "macosx_13_0_arm64": 8, "mv": 8, "cp311": 8, "And": 8, "_pyspin": 8, "cpython": 8, "310": 8, "darwin": 8, "311": 8, "offici": 8, "caus": 8, "issu": [8, 24], "risk": 8, "camera_index": [8, 11], "thread": [8, 11, 13, 14, 28], "store": [8, 11, 20, 30], "queue": [8, 11], "stream": [8, 11, 32], "avail": [8, 10, 13, 15, 20, 36], "stop": [8, 11, 13, 19, 20, 33], "deiniti": [8, 11], "flir": [9, 12], "pkl": [9, 12, 16, 30], "realsens": [9, 12], "load": [10, 17, 30], "pre": [10, 17], "record": [10, 17, 30, 32], "file": [10, 15, 17, 30, 32, 34, 39], "pklcamera": 10, "pkl_path": [10, 17, 39], "read": [10, 13, 30], "pickl": [10, 30], "iter": [10, 17, 19, 23, 25], "exhaust": [10, 17], "still": [10, 17], "activ": [10, 17, 19], "placehold": 10, "potenti": 10, "cleanup": [10, 33], "logic": 10, "intel": 11, "devic": [11, 13, 22, 36, 39], "realsensecamera": 11, "pyrealsens": 11, "d435i": 11, "color": [11, 19, 25], "depth": [11, 19, 39], "return_depth": 11, "start_pipeline_onc": 11, "force_autoexposur": 11, "exposur": 11, "rgb": [11, 39], "readi": [11, 14], "rais": [11, 35], "notimplementederror": 11, "yet": 11, "return_rgb": 11, "spad": [12, 34], "dashboard": [12, 16], "tmf8828": [12, 16], "vl53l8ch": [12, 16], "stepper_motor": 12, "kinesis_stepp": [12, 21], "stepper_control": [12, 21], "stepper_system": [12, 21], "telemetrix_stepp": [12, 21], "safe_seri": 12, "safeseri": 13, "safe": [13, 24, 25, 26, 28], "serial": [13, 20, 36], "commun": [13, 19, 20], "few": 13, "conveni": 13, "arg": [13, 19, 22, 24, 25, 28, 32, 35, 37, 39], "lock_typ": 13, "multiprocess": 13, "kwarg": [13, 20, 22, 24, 26, 28, 32, 35, 36, 37], "synchron": [13, 27, 28], "oper": [13, 14, 19, 20, 22, 24, 25, 26, 33], "lock": 13, "handl": [13, 14, 20, 33], "format": [13, 32], "classmethod": [13, 35, 37], "port": [13, 19, 20, 22, 26, 36, 39], "wait": [13, 14, 22, 24, 25, 26, 28], "reset": [13, 14, 19, 20], "establish": [13, 24], "connect": [13, 17, 19, 20, 22, 24, 25, 26], "second": [13, 34], "2": [13, 19, 25, 27], "pass": [13, 26, 35, 36], "constructor": [13, 35, 37], "invalid": 13, "warn": 13, "log": [13, 32], "size": [13, 15, 20], "byte": [13, 20], "wait_for_start_talk": 13, "timeout": [13, 19], "until": [13, 14, 24, 25, 26, 33], "start": [13, 20, 24, 30, 33], "talk": 13, "success": [13, 20], "float": [13, 15, 19, 22, 23, 24, 25, 26], "maximum": [13, 15, 22, 32], "time": [13, 15, 19, 20], "give": 13, "up": [13, 15], "receiv": [13, 19, 20, 24], "wait_for_stop_talk": 13, "write_and_wait_for_start_talk": 13, "tri": 13, "resend": 13, "attempt": [13, 26, 28], "perform": [13, 19, 39], "write_and_wait_for_stop_talk": 13, "return_data": 13, "upon": 13, "statu": [13, 24], "write_and_wait_for_start_and_stop_talk": 13, "event": [13, 14], "__getattr__": [13, 25, 26, 28], "forward": 13, "access": [13, 19, 22, 25, 26, 28, 30], "parent": 13, "appli": 13, "prevent": 13, "concurr": 13, "valu": [13, 15, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 37], "__del__": [14, 30], "destructor": 14, "sensordata": [14, 19, 20], "its": [14, 22, 23, 24, 25, 26, 35, 36], "state": [14, 19, 22, 24, 26], "row": [14, 19, 20], "get_data": [14, 19, 20], "retriev": [14, 20, 28, 37], "sensordatathread": 14, "clear": [14, 19], "real": 15, "three": 15, "matplotlibdashboard": 15, "matplotlib": [15, 34], "pyqtgraphdashboard": 15, "pyqtgraph": 15, "dashdashboard": 15, "dash": 15, "plotli": 15, "web": 15, "user": 15, "callback": [15, 27], "execut": [15, 24, 25, 26], "spadsensor": [15, 17, 18, 19, 20, 34], "spaddashboard": 15, "create_from_registri": [15, 35], "user_callback": 15, "my_callback": 15, "num_fram": 15, "1000000": [15, 39], "min_bin": [15, 34], "max_bin": [15, 34], "autoscal": [15, 39], "ylim": 15, "channel_mask": 15, "frame": [15, 30, 34], "000": 15, "minimum": 15, "bin": [15, 17, 18, 19, 20], "histogram": [15, 17, 18, 19, 20], "y": [15, 20], "axi": [15, 22, 23, 25, 26], "limit": [15, 22, 24], "channel": [15, 19, 22], "callabl": [15, 30, 33], "accept": [15, 33], "variabl": [15, 17, 19, 20], "configur": [15, 19, 20, 24], "setup_sensor": 15, "mask": 15, "fullscreen": [15, 34, 39], "headless": 15, "output": [15, 19, 30, 32, 39], "gui": [15, 34], "setup_plot": 15, "plot": [15, 31], "layout": 15, "adjust_ylim": 15, "adjust": 15, "save_anim": 15, "anim": [15, 34], "funcanim": 15, "object": [15, 25, 26, 28, 30, 39], "applic": [15, 37], "win": 15, "dashboardwindow": 15, "window": [15, 22], "unus": 15, "setup_layout": 15, "figur": 15, "pklspadsensor": 17, "fake": 17, "simul": 17, "common": [17, 19, 20, 24], "_pkl_path": 17, "_data": 17, "entri": 17, "_data_iter": 17, "over": [17, 19, 25], "_resolut": 17, "spatial": [17, 18], "num_bin": [17, 18, 19, 20], "request": [17, 19, 28], "op": 17, "photon": 18, "avalanch": 18, "diod": 18, "design": 18, "manag": [18, 20, 31], "measur": [18, 19], "collect": [18, 19, 25], "analyz": 18, "system": [18, 22, 25], "indic": [18, 19], "discret": 18, "rang": [18, 20, 39], "total": [18, 23], "distanc": 18, "equal": 18, "multipli": 18, "where": [18, 28, 30], "pixel": [18, 19, 20, 39], "point": [18, 24], "respect": 18, "dimens": 18, "sum": 18, "vari": 18, "8x8": [19, 20], "multi": [19, 22, 25, 28], "zone": 19, "flight": [19, 20], "am": 19, "wide": 19, "vcsel": 19, "map": 19, "4x4": [19, 20], "3x6": 19, "multizon": 19, "tmf8828sensor": [19, 39], "wa": 19, "tmf882x": [19, 39], "arduino": 19, "shield": 19, "spadid": 19, "kwd": [19, 25], "enum": [19, 25], "pair": [19, 25], "enumer": [19, 25], "red": [19, 25], "blue": [19, 25], "green": [19, 25], "lookup": [19, 25], "know": [19, 25], "mani": [19, 25], "member": [19, 25], "thei": [19, 25], "len": [19, 25], "document": [19, 25, 40], "detail": [19, 25], "get_num_pixel": 19, "get_num_channel": 19, "get_active_channels_per_subcaptur": 19, "per": [19, 26, 34, 39], "subcaptur": 19, "get_resolut": 19, "rangemod": 19, "tmf8828histogram": 19, "spad_id": 19, "has_data": [19, 20], "complet": [19, 22, 24, 25, 26, 39], "temporari": 19, "intern": 19, "string": [19, 20, 28], "copi": [19, 20, 39], "id15": 19, "setup": [19, 22, 33], "range_mod": 19, "long": 19, "across": [19, 37], "enabl": [19, 26], "high": 19, "baudrat": [19, 20], "baud": [19, 20], "rate": [19, 20], "includ": [20, 24, 37], "framework": 20, "sensorconfig": 20, "uint16_t": 20, "ranging_mod": 20, "ranging_frequency_hz": 20, "frequenc": 20, "hz": 20, "integration_time_m": 20, "integr": 20, "millisecond": 20, "cnh_start_bin": 20, "cnh": 20, "cnh_num_bin": 20, "cnh_subsampl": 20, "subsampl": 20, "agg_start_x": 20, "aggreg": 20, "x": 20, "coordin": 20, "agg_start_i": 20, "agg_merge_x": 20, "merg": 20, "agg_merge_i": 20, "agg_col": 20, "column": 20, "agg_row": 20, "pack": 20, "structur": 20, "sensorconfigshar": 20, "share": [20, 28, 37], "sensorconfig4x4": 20, "grid": 20, "sensorconfig8x8": 20, "vl53l8chhistogram": 20, "num_pixel": 20, "expect": [20, 24], "vl53l8chsensor": [20, 39], "acquisit": 20, "kei": [20, 23, 26, 30], "must": [20, 24, 33], "match": 20, "field": 20, "individu": 20, "stepper": [21, 22, 23, 24, 25, 26], "motor": [21, 22, 23, 24, 25, 26], "steppermotor": [22, 24, 25, 26], "kinesi": 22, "kinesissteppermotor": 22, "thorlab": 22, "c": [22, 29], "api": [22, 40], "via": 22, "pylablib": 22, "throlab": 22, "kinesismotor": 22, "control": [22, 23, 24, 25, 26], "linux": 22, "is_rack_system": 22, "scale": 22, "movement": 22, "posit": [22, 23, 24, 25, 26, 30, 35, 37], "part": 22, "rack": 22, "factor": 22, "absolut": [22, 24, 26], "healthi": [22, 24, 26], "lower_limit": 22, "lower": 22, "upper_limit": 22, "upper": 22, "max_veloc": 22, "acceler": 22, "clip_at_limit": 22, "initial_posit": 22, "reference_posit": 22, "check_hom": 22, "veloc": 22, "clip": 22, "move": [22, 24, 25, 26], "dure": 22, "opposit": [22, 26], "successfulli": 22, "zero": [22, 24, 26], "move_bi": [22, 24, 25, 26], "relative_posit": [22, 24, 26], "amount": [22, 24, 26], "move_to": [22, 24, 25, 26], "target": [22, 24, 25, 26], "wait_for_mov": [22, 24, 25, 26], "kinesisrotationstag": 22, "kinesissteppermotorsystem": 22, "ax": [22, 23, 24, 25, 26], "steppermotorsystem": [22, 25, 26], "whole": [22, 25], "steppermotorsystemaxi": [22, 25], "attach": [22, 24, 25, 26], "instanti": [22, 23, 35], "azimuthelevationsystem": 22, "predefin": [22, 24], "azimuth": 22, "elev": 22, "steppercontrol": 23, "factori": [23, 35], "get_posit": 23, "given": [23, 35, 39], "snakesteppercontrol": 23, "axis_config": 23, "empti": [23, 28], "exce": 23, "unifi": [24, 26], "compat": 24, "unit": [24, 25], "could": 24, "involv": 24, "verifi": 24, "power": [24, 25], "shut": [24, 25, 26], "avoid": [24, 25], "damag": [24, 25], "memori": [24, 25, 30], "leak": [24, 25], "switch": 24, "trigger": 24, "known": 24, "interpret": 24, "characterist": 24, "g": [24, 39], "angl": 24, "degre": 24, "other": 24, "reach": [24, 25, 26], "motion": [24, 25, 26], "dummysteppermotor": 24, "dummi": 24, "doe": 24, "noth": 24, "gantri": 25, "rotat": 25, "stage": 25, "grab": 25, "subtract": 25, "Then": 25, "passthrough": [25, 26], "underli": [25, 26, 28], "telemetrixsteppermotor": 26, "telemetrixsteppermotorsystem": 26, "telemetrix": 26, "cncshield": 26, "board": 26, "distance_pin": 26, "direction_pin": 26, "enable_pin": 26, "cm_per_rev": 26, "steps_per_rev": 26, "speed": [26, 29], "flip_direct": 26, "note": 26, "effect": 26, "call": [26, 33, 37], "set_current_posit": 26, "explicitli": 26, "pin": 26, "centimet": 26, "revolut": 26, "cm": 26, "direct": 26, "set_target_position_cm": 26, "relative_cm": 26, "set_absolute_target_position_cm": 26, "position_cm": 26, "cm_to_rev": 26, "revs_to_cm": 26, "rev": 26, "stepper_": 26, "motorx": 26, "target_posit": 26, "equat": 26, "_board": 26, "stepper_target_posit": 26, "requir": [26, 28, 39], "input": [26, 30], "we": 26, "ll": 26, "auto": 26, "telemetrixsteppermotorx": 26, "telemetrixsteppermotori": 26, "telemetrixsteppermotorz": 26, "telemetrixsteppermotorxrevers": 26, "telemetrixsteppermotoryrevers": 26, "telemetrixsteppermotorzrevers": 26, "dualdrive2axisgantry_x": 26, "dualdrive2axisgantry_y1": 26, "dualdrive2axisgantry_y2": 26, "dualdrive2axisgantri": 26, "singledrive1axisgantry_x": 26, "singledrive1axisgantry_i": 26, "singledrive1axisgantri": 26, "asynchron": 27, "call_async": 27, "fn": 27, "wrap": [27, 28], "call_async_gath": 27, "call_async_valu": 27, "idx": 27, "dequ": 28, "item": 28, "blockingdequ": 28, "condit": 28, "suitabl": 28, "append": [28, 30, 32], "notifi": 28, "manner": 28, "__getitem__": 28, "__len__": [28, 30], "__repr__": 28, "represent": 28, "300000000": 29, "light": 29, "m": 29, "pklhandler": 30, "overwrit": 30, "update_index_kwarg": 30, "random": 30, "entir": 30, "handler": [30, 32], "another_kei": 30, "another_valu": 30, "print": 30, "update_index": 30, "prune_fn": 30, "lambda": 30, "_": 30, "build": [30, 39], "scan": 30, "_index": 30, "filter": [30, 32], "take": 30, "exclud": 30, "first": 30, "load_al": 30, "extract": 30, "videowrit": 30, "fp": [30, 34], "flush_interv": 30, "buffer": 30, "period": 30, "flush": 30, "interv": 30, "mp4": 30, "30": 30, "remain": 30, "delet": 30, "asyncio_util": 31, "blocking_dequ": 31, "constant": 31, "file_handl": 31, "logger": 31, "transform": 31, "tqdm": 32, "messag": [32, 39], "consol": 32, "level": 32, "get_logg": 32, "info": 32, "filehandl": 32, "doesn": 32, "tqdmstreamhandl": 32, "streamhandl": 32, "emit": 32, "formatt": 32, "trail": 32, "newlin": 32, "except": 32, "inform": 32, "present": 32, "traceback": [32, 33], "print_except": 32, "encod": 32, "determin": 32, "loggermaxlevelfilt": 32, "max_level": 32, "deem": 32, "appropri": 32, "modifi": 32, "place": 32, "compon": 33, "context": 33, "loop": 33, "100": 33, "protocol": 33, "essenti": 33, "just": 33, "begin": 33, "__enter__": 33, "__exit__": 33, "exc_typ": 33, "exc_valu": 33, "set_matplotlib_styl": 34, "use_scienceplot": 34, "transient_gui": 34, "normalize_per_pixel": 34, "transient": 34, "decor": 35, "regist": 35, "class_typ": 35, "valueerror": 35, "found": 35, "registrybas": 35, "find_device_by_label": 36, "label": 36, "find": 36, "volum": 36, "search": 36, "find_port": 36, "cl": 36, "metaclass": 37, "pattern": 37, "combin": 37, "singleton_meta": 37, "singletonabcmeta": 37, "mysingleton": 37, "instance1": 37, "instance2": 37, "assert": 37, "singletonmeta": 37, "__call__": 37, "abcmeta": 37, "enforc": 37, "while": 37, "being": 37, "3d": 38, "space": 38, "line": 39, "160": 39, "completioninstal": 39, "shell": 39, "completionshow": 39, "helpshow": 39, "exit": 39, "four": 39, "legaci": 39, "twice": 39, "text": 39, "filenametext": 39, "sketch": 39, "scriptpath": 39, "porttext": 39, "storag": 39, "tty": 39, "media": 39, "usernam": 39, "device_nam": 39, "verbos": 39, "feed": 39, "dashboard_typ": 39, "spad_typ": 39, "dashboard_typetext": 39, "num": 39, "framesinteg": 39, "ylimfloat": 39, "min": 39, "bininteg": 39, "max": 39, "127": 39, "idinteg": 39, "6": 39, "short": 39, "fpsinteg": 39, "binsinteg": 39, "32": 39, "pkl_pathpath": 39, "lt": 39, "integ": 39, "gt": 39, "p": 39, "exposureinteg": 39, "aruco_dicttext": 39, "sizefloat": 39, "8": 39, "25": 39, "samplesinteg": 39, "cli": 40}, "objects": {"": [[6, 0, 0, "-", "algos"], [12, 0, 0, "-", "drivers"], [31, 0, 0, "-", "utils"]], "algos": [[4, 0, 0, "-", "algorithm"], [5, 0, 0, "-", "aruco"]], "algos.algorithm": [[4, 1, 1, "", "Algorithm"]], "algos.algorithm.Algorithm": [[4, 2, 1, "", "close"], [4, 3, 1, "", "is_okay"], [4, 2, 1, "", "run"]], "algos.aruco": [[5, 1, 1, "", "ArucoLocalizationAlgorithm"]], "algos.aruco.ArucoLocalizationAlgorithm": [[5, 2, 1, "", "close"], [5, 3, 1, "", "is_okay"], [5, 2, 1, "", "run"]], "cc_hardware": [[39, 0, 0, "-", "tools"]], "drivers": [[9, 0, 0, "-", "cameras"], [13, 0, 0, "-", "safe_serial"], [14, 0, 0, "-", "sensor"], [16, 0, 0, "-", "spads"], [21, 0, 0, "-", "stepper_motors"]], "drivers.cameras": [[7, 0, 0, "-", "camera"], [8, 0, 0, "-", "flir"], [10, 0, 0, "-", "pkl"], [11, 0, 0, "-", "realsense"]], "drivers.cameras.camera": [[7, 1, 1, "", "Camera"]], "drivers.cameras.camera.Camera": [[7, 2, 1, "", "accumulate"], [7, 3, 1, "", "distortion_coefficients"], [7, 3, 1, "", "intrinsic_matrix"], [7, 3, 1, "", "resolution"]], "drivers.cameras.flir": [[8, 1, 1, "", "FlirCamera"], [8, 1, 1, "", "GrasshopperFlirCamera"]], "drivers.cameras.flir.FlirCamera": [[8, 2, 1, "", "accumulate"], [8, 2, 1, "", "close"], [8, 3, 1, "", "is_okay"], [8, 3, 1, "", "resolution"]], "drivers.cameras.flir.GrasshopperFlirCamera": [[8, 3, 1, "", "distortion_coefficients"], [8, 3, 1, "", "intrinsic_matrix"]], "drivers.cameras.pkl": [[10, 1, 1, "", "PklCamera"]], "drivers.cameras.pkl.PklCamera": [[10, 2, 1, "", "accumulate"], [10, 2, 1, "", "close"], [10, 3, 1, "", "distortion_coefficients"], [10, 3, 1, "", "intrinsic_matrix"], [10, 3, 1, "", "is_okay"], [10, 3, 1, "", "resolution"]], "drivers.cameras.realsense": [[11, 1, 1, "", "RealsenseCamera"]], "drivers.cameras.realsense.RealsenseCamera": [[11, 2, 1, "", "accumulate"], [11, 2, 1, "", "close"], [11, 3, 1, "", "distortion_coefficients"], [11, 3, 1, "", "intrinsic_matrix"], [11, 3, 1, "", "is_okay"], [11, 3, 1, "", "resolution"]], "drivers.safe_serial": [[13, 1, 1, "", "SafeSerial"]], "drivers.safe_serial.SafeSerial": [[13, 2, 1, "", "__getattr__"], [13, 2, 1, "", "create"], [13, 2, 1, "", "read"], [13, 2, 1, "", "wait_for_start_talk"], [13, 2, 1, "", "wait_for_stop_talk"], [13, 2, 1, "", "write"], [13, 2, 1, "", "write_and_wait_for_start_and_stop_talk"], [13, 2, 1, "", "write_and_wait_for_start_talk"], [13, 2, 1, "", "write_and_wait_for_stop_talk"]], "drivers.sensor": [[14, 1, 1, "", "Sensor"], [14, 1, 1, "", "SensorData"], [14, 1, 1, "", "SensorDataThreaded"]], "drivers.sensor.Sensor": [[14, 2, 1, "", "__del__"], [14, 2, 1, "", "calibrate"], [14, 2, 1, "", "close"], [14, 3, 1, "", "is_okay"]], "drivers.sensor.SensorData": [[14, 2, 1, "", "get_data"], [14, 2, 1, "", "process"], [14, 2, 1, "", "reset"]], "drivers.sensor.SensorDataThreaded": [[14, 2, 1, "", "get_data"], [14, 2, 1, "", "reset"]], "drivers.spads": [[15, 0, 0, "-", "dashboard"], [17, 0, 0, "-", "pkl"], [18, 0, 0, "-", "spad"], [19, 0, 0, "-", "tmf8828"], [20, 0, 0, "-", "vl53l8ch"]], "drivers.spads.dashboard": [[15, 1, 1, "", "DashDashboard"], [15, 1, 1, "", "MatplotlibDashboard"], [15, 1, 1, "", "PyQtGraphDashboard"], [15, 1, 1, "", "SPADDashboard"]], "drivers.spads.dashboard.DashDashboard": [[15, 2, 1, "", "run"], [15, 2, 1, "", "setup_layout"]], "drivers.spads.dashboard.MatplotlibDashboard": [[15, 2, 1, "", "adjust_ylim"], [15, 2, 1, "", "run"], [15, 2, 1, "", "save_animation"], [15, 2, 1, "", "setup_plot"], [15, 2, 1, "", "update"]], "drivers.spads.dashboard.PyQtGraphDashboard": [[15, 2, 1, "", "run"], [15, 2, 1, "", "setup_plots"], [15, 2, 1, "", "update"]], "drivers.spads.dashboard.SPADDashboard": [[15, 3, 1, "", "max_bin"], [15, 3, 1, "", "min_bin"], [15, 2, 1, "", "run"], [15, 2, 1, "", "setup_sensor"]], "drivers.spads.pkl": [[17, 1, 1, "", "PklSPADSensor"]], "drivers.spads.pkl.PklSPADSensor": [[17, 2, 1, "", "accumulate"], [17, 2, 1, "", "close"], [17, 3, 1, "", "is_okay"], [17, 3, 1, "", "num_bins"], [17, 3, 1, "", "resolution"]], "drivers.spads.spad": [[18, 1, 1, "", "SPADSensor"]], "drivers.spads.spad.SPADSensor": [[18, 2, 1, "", "accumulate"], [18, 3, 1, "", "num_bins"], [18, 3, 1, "", "resolution"]], "drivers.spads.tmf8828": [[19, 1, 1, "", "RangeMode"], [19, 1, 1, "", "SPADID"], [19, 1, 1, "", "TMF8828Histogram"], [19, 1, 1, "", "TMF8828Sensor"]], "drivers.spads.tmf8828.SPADID": [[19, 2, 1, "", "get_active_channels_per_subcapture"], [19, 2, 1, "", "get_num_channels"], [19, 2, 1, "", "get_num_pixels"], [19, 2, 1, "", "get_resolution"]], "drivers.spads.tmf8828.TMF8828Histogram": [[19, 2, 1, "", "get_data"], [19, 3, 1, "", "has_data"], [19, 2, 1, "", "process"], [19, 2, 1, "", "reset"]], "drivers.spads.tmf8828.TMF8828Sensor": [[19, 2, 1, "", "accumulate"], [19, 2, 1, "", "calibrate"], [19, 2, 1, "", "close"], [19, 3, 1, "", "is_okay"], [19, 3, 1, "", "num_bins"], [19, 3, 1, "", "resolution"]], "drivers.spads.vl53l8ch": [[20, 1, 1, "", "SensorConfig"], [20, 1, 1, "", "SensorConfig4x4"], [20, 1, 1, "", "SensorConfig8x8"], [20, 1, 1, "", "SensorConfigShared"], [20, 1, 1, "", "VL53L8CHHistogram"], [20, 1, 1, "", "VL53L8CHSensor"]], "drivers.spads.vl53l8ch.SensorConfig": [[20, 2, 1, "", "pack"]], "drivers.spads.vl53l8ch.VL53L8CHHistogram": [[20, 2, 1, "", "get_data"], [20, 3, 1, "", "has_data"], [20, 2, 1, "", "process"], [20, 2, 1, "", "reset"]], "drivers.spads.vl53l8ch.VL53L8CHSensor": [[20, 2, 1, "", "accumulate"], [20, 2, 1, "", "close"], [20, 3, 1, "", "is_okay"], [20, 3, 1, "", "num_bins"], [20, 3, 1, "", "resolution"], [20, 2, 1, "", "update"]], "drivers.stepper_motors": [[22, 0, 0, "-", "kinesis_stepper"], [23, 0, 0, "-", "stepper_controller"], [24, 0, 0, "-", "stepper_motor"], [25, 0, 0, "-", "stepper_system"], [26, 0, 0, "-", "telemetrix_stepper"]], "drivers.stepper_motors.kinesis_stepper": [[22, 1, 1, "", "AzimuthElevationSystem"], [22, 1, 1, "", "KinesisRotationStage"], [22, 1, 1, "", "KinesisStepperMotor"], [22, 1, 1, "", "KinesisStepperMotorSystem"]], "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage": [[22, 2, 1, "", "initialize"]], "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor": [[22, 2, 1, "", "close"], [22, 2, 1, "", "home"], [22, 2, 1, "", "initialize"], [22, 3, 1, "", "is_okay"], [22, 3, 1, "", "lower_limit"], [22, 2, 1, "", "move_by"], [22, 2, 1, "", "move_to"], [22, 3, 1, "", "position"], [22, 3, 1, "", "upper_limit"], [22, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_controller": [[23, 1, 1, "", "SnakeStepperController"], [23, 1, 1, "", "StepperController"]], "drivers.stepper_motors.stepper_controller.SnakeStepperController": [[23, 2, 1, "", "get_position"]], "drivers.stepper_motors.stepper_controller.StepperController": [[23, 2, 1, "", "get_position"]], "drivers.stepper_motors.stepper_motor": [[24, 1, 1, "", "DummyStepperMotor"], [24, 1, 1, "", "StepperMotor"]], "drivers.stepper_motors.stepper_motor.StepperMotor": [[24, 2, 1, "", "close"], [24, 2, 1, "", "home"], [24, 3, 1, "", "is_okay"], [24, 2, 1, "", "move_by"], [24, 2, 1, "", "move_to"], [24, 3, 1, "", "position"], [24, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_system": [[25, 1, 1, "", "StepperMotorSystem"], [25, 1, 1, "", "StepperMotorSystemAxis"]], "drivers.stepper_motors.stepper_system.StepperMotorSystem": [[25, 2, 1, "", "__getattr__"], [25, 2, 1, "", "close"], [25, 2, 1, "", "move_by"], [25, 2, 1, "", "move_to"], [25, 3, 1, "", "position"], [25, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.telemetrix_stepper": [[26, 1, 1, "", "DualDrive2AxisGantry"], [26, 1, 1, "", "DualDrive2AxisGantry_X"], [26, 1, 1, "", "DualDrive2AxisGantry_Y1"], [26, 1, 1, "", "DualDrive2AxisGantry_Y2"], [26, 1, 1, "", "SingleDrive1AxisGantry"], [26, 1, 1, "", "SingleDrive1AxisGantry_X"], [26, 1, 1, "", "SingleDrive1AxisGantry_Y"], [26, 1, 1, "", "TelemetrixStepperMotor"], [26, 1, 1, "", "TelemetrixStepperMotorSystem"], [26, 1, 1, "", "TelemetrixStepperMotorX"], [26, 1, 1, "", "TelemetrixStepperMotorXReversed"], [26, 1, 1, "", "TelemetrixStepperMotorY"], [26, 1, 1, "", "TelemetrixStepperMotorYReversed"], [26, 1, 1, "", "TelemetrixStepperMotorZ"], [26, 1, 1, "", "TelemetrixStepperMotorZReversed"]], "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor": [[26, 2, 1, "", "__getattr__"], [26, 2, 1, "", "close"], [26, 2, 1, "", "cm_to_revs"], [26, 2, 1, "", "home"], [26, 3, 1, "", "id"], [26, 3, 1, "", "is_okay"], [26, 2, 1, "", "move_by"], [26, 2, 1, "", "move_to"], [26, 3, 1, "", "position"], [26, 2, 1, "", "revs_to_cm"], [26, 2, 1, "", "set_absolute_target_position_cm"], [26, 2, 1, "", "set_target_position_cm"], [26, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem": [[26, 2, 1, "", "close"]], "utils": [[27, 0, 0, "-", "asyncio_utils"], [28, 0, 0, "-", "blocking_deque"], [29, 0, 0, "-", "constants"], [30, 0, 0, "-", "file_handlers"], [32, 0, 0, "-", "logger"], [33, 0, 0, "-", "manager"], [34, 0, 0, "-", "plotting"], [35, 0, 0, "-", "registry"], [36, 0, 0, "-", "serial_utils"], [37, 0, 0, "-", "singleton"], [38, 0, 0, "-", "transformations"]], "utils.asyncio_utils": [[27, 4, 1, "", "call_async"], [27, 4, 1, "", "call_async_gather"], [27, 4, 1, "", "call_async_value"]], "utils.blocking_deque": [[28, 1, 1, "", "BlockingDeque"]], "utils.blocking_deque.BlockingDeque": [[28, 2, 1, "", "__getattr__"], [28, 2, 1, "", "__getitem__"], [28, 2, 1, "", "__len__"], [28, 2, 1, "", "__repr__"], [28, 2, 1, "", "append"]], "utils.constants": [[29, 5, 1, "", "C"]], "utils.file_handlers": [[30, 1, 1, "", "PklHandler"], [30, 1, 1, "", "VideoWriter"]], "utils.file_handlers.PklHandler": [[30, 2, 1, "", "__len__"], [30, 2, 1, "", "append"], [30, 2, 1, "", "load"], [30, 2, 1, "", "load_all"], [30, 2, 1, "", "update_index"], [30, 2, 1, "", "write"]], "utils.file_handlers.VideoWriter": [[30, 2, 1, "", "__del__"], [30, 2, 1, "", "append"], [30, 2, 1, "", "close"]], "utils.logger": [[32, 1, 1, "", "FileHandler"], [32, 1, 1, "", "LoggerMaxLevelFilter"], [32, 1, 1, "", "TqdmStreamHandler"]], "utils.logger.LoggerMaxLevelFilter": [[32, 2, 1, "", "filter"]], "utils.logger.TqdmStreamHandler": [[32, 2, 1, "", "emit"]], "utils.manager": [[33, 1, 1, "", "Component"], [33, 1, 1, "", "Manager"]], "utils.manager.Component": [[33, 2, 1, "", "close"], [33, 3, 1, "", "is_okay"]], "utils.manager.Manager": [[33, 2, 1, "", "__enter__"], [33, 2, 1, "", "__exit__"], [33, 2, 1, "", "add"], [33, 2, 1, "", "close"], [33, 3, 1, "", "components"], [33, 3, 1, "", "is_okay"], [33, 2, 1, "", "run"]], "utils.plotting": [[34, 4, 1, "", "set_matplotlib_style"], [34, 4, 1, "", "transient_gui"]], "utils.registry": [[35, 1, 1, "", "Registry"], [35, 4, 1, "", "register"]], "utils.registry.Registry": [[35, 2, 1, "", "create_from_registry"], [35, 2, 1, "", "register"]], "utils.serial_utils": [[36, 4, 1, "", "find_device_by_label"], [36, 4, 1, "", "find_ports"]], "utils.singleton": [[37, 1, 1, "", "SingletonABCMeta"], [37, 1, 1, "", "SingletonMeta"]], "utils.singleton.SingletonMeta": [[37, 2, 1, "", "__call__"], [37, 2, 1, "", "instance"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"contribut": 1, "setup": 1, "clone": 1, "repo": [1, 2], "instal": [1, 8], "deploi": 1, "your": 1, "chang": 1, "guidelin": 1, "file": 1, "structur": [1, 2], "edit": 1, "sourc": 1, "code": 1, "comment": 1, "document": [1, 39], "build": 1, "camera": [2, 7, 8, 9, 10, 11, 39], "cultur": 2, "hardwar": 2, "get": 2, "start": 2, "packag": [2, 3], "api": 3, "refer": [3, 40], "algo": [4, 5, 6], "algorithm": 4, "modul": [4, 5, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37], "content": [4, 5, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37], "class": [4, 5, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 32, 33, 35, 37], "aruco": [5, 39], "submodul": [6, 9, 12, 16, 21, 31], "driver": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "flir": [8, 39], "pyspin": 8, "pkl": [10, 17, 39], "realsens": [11, 39], "subpackag": 12, "safe_seri": 13, "sensor": 14, "spad": [15, 16, 17, 18, 19, 20, 39], "dashboard": [15, 39], "tmf8828": [19, 39], "vl53l8ch": [20, 39], "stepper_motor": [21, 22, 23, 24, 25, 26], "kinesis_stepp": 22, "stepper_control": 23, "stepper_system": 25, "telemetrix_stepp": 26, "util": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "asyncio_util": 27, "function": [27, 34, 35, 36], "blocking_dequ": 28, "constant": 29, "file_handl": 30, "logger": 32, "manag": 33, "plot": 34, "registri": 35, "serial_util": 36, "singleton": 37, "transform": 38, "cli": 39, "cc_hardwar": 39, "calib": 39, "calibr": 39, "serial": 39, "arduino": 39, "upload": 39, "vi": 39, "transient": 39, "viewer": 39, "local": 39, "estim": 39, "posit": 39}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributing": [[1, "contributing"]], "Setup": [[1, "setup"]], "Cloning the Repo": [[1, "cloning-the-repo"]], "Installing": [[1, "installing"]], "Deploy your Changes": [[1, "deploy-your-changes"]], "Guidelines": [[1, "guidelines"]], "File Structure": [[1, "file-structure"]], "Editing the Source Code": [[1, "editing-the-source-code"]], "Commenting": [[1, "commenting"]], "Editing the Documentation": [[1, "editing-the-documentation"]], "Building the Documentation": [[1, "building-the-documentation"]], "Camera Culture Hardware Repo": [[2, "camera-culture-hardware-repo"]], "Getting Started": [[2, "getting-started"]], "Repo Structure": [[2, "repo-structure"]], "Package Structure": [[2, "package-structure"]], "API Reference": [[3, "api-reference"]], "Packages": [[3, "packages"]], "algos.algorithm": [[4, "module-algos.algorithm"]], "Module Contents": [[4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"]], "Classes": [[4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [11, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [28, "classes"], [30, "classes"], [32, "classes"], [33, "classes"], [35, "classes"], [37, "classes"]], "algos.aruco": [[5, "module-algos.aruco"]], "algos": [[6, "module-algos"]], "Submodules": [[6, "submodules"], [9, "submodules"], [12, "submodules"], [16, "submodules"], [21, "submodules"], [31, "submodules"]], "drivers.cameras.camera": [[7, "module-drivers.cameras.camera"]], "drivers.cameras.flir": [[8, "module-drivers.cameras.flir"]], "PySpin Installation": [[8, "pyspin-installation"]], "drivers.cameras": [[9, "module-drivers.cameras"]], "drivers.cameras.pkl": [[10, "module-drivers.cameras.pkl"]], "drivers.cameras.realsense": [[11, "module-drivers.cameras.realsense"]], "drivers": [[12, "module-drivers"]], "Subpackages": [[12, "subpackages"]], "drivers.safe_serial": [[13, "module-drivers.safe_serial"]], "drivers.sensor": [[14, "module-drivers.sensor"]], "drivers.spads.dashboard": [[15, "module-drivers.spads.dashboard"]], "drivers.spads": [[16, "module-drivers.spads"]], "drivers.spads.pkl": [[17, "module-drivers.spads.pkl"]], "drivers.spads.spad": [[18, "module-drivers.spads.spad"]], "drivers.spads.tmf8828": [[19, "module-drivers.spads.tmf8828"]], "drivers.spads.vl53l8ch": [[20, "module-drivers.spads.vl53l8ch"]], "drivers.stepper_motors": [[21, "module-drivers.stepper_motors"]], "drivers.stepper_motors.kinesis_stepper": [[22, "module-drivers.stepper_motors.kinesis_stepper"]], "drivers.stepper_motors.stepper_controller": [[23, "module-drivers.stepper_motors.stepper_controller"]], "drivers.stepper_motors.stepper_motor": [[24, "module-drivers.stepper_motors.stepper_motor"]], "drivers.stepper_motors.stepper_system": [[25, "module-drivers.stepper_motors.stepper_system"]], "drivers.stepper_motors.telemetrix_stepper": [[26, "module-drivers.stepper_motors.telemetrix_stepper"]], "utils.asyncio_utils": [[27, "module-utils.asyncio_utils"]], "Functions": [[27, "functions"], [34, "functions"], [35, "functions"], [36, "functions"]], "utils.blocking_deque": [[28, "module-utils.blocking_deque"]], "utils.constants": [[29, "module-utils.constants"]], "utils.file_handlers": [[30, "module-utils.file_handlers"]], "utils": [[31, "module-utils"]], "utils.logger": [[32, "module-utils.logger"]], "utils.manager": [[33, "module-utils.manager"]], "utils.plotting": [[34, "module-utils.plotting"]], "utils.registry": [[35, "module-utils.registry"]], "utils.serial_utils": [[36, "module-utils.serial_utils"]], "utils.singleton": [[37, "module-utils.singleton"]], "utils.transformations": [[38, "module-utils.transformations"]], "CLI Documentation": [[39, "module-cc_hardware.tools"]], "cc_hardware": [[39, "cc-hardware"]], "calib": [[39, "cc-hardware-calib"]], "tmf8828-calibrate": [[39, "cc-hardware-calib-tmf8828-calibrate"]], "serial": [[39, "cc-hardware-serial"]], "arduino-upload": [[39, "cc-hardware-serial-arduino-upload"]], "tmf8828-upload": [[39, "cc-hardware-serial-tmf8828-upload"]], "vl53l8ch-upload": [[39, "cc-hardware-serial-vl53l8ch-upload"]], "vis": [[39, "cc-hardware-vis"]], "spad-dashboard": [[39, "cc-hardware-vis-spad-dashboard"]], "tmf8828-transient-viewer": [[39, "cc-hardware-vis-tmf8828-transient-viewer"]], "vl53l8ch-transient-viewer": [[39, "cc-hardware-vis-vl53l8ch-transient-viewer"]], "pkl-transient-viewer": [[39, "cc-hardware-vis-pkl-transient-viewer"]], "flir-camera-viewer": [[39, "cc-hardware-vis-flir-camera-viewer"]], "pkl-camera-viewer": [[39, "cc-hardware-vis-pkl-camera-viewer"]], "realsense-camera-viewer": [[39, "cc-hardware-vis-realsense-camera-viewer"]], "flir-aruco-localization": [[39, "cc-hardware-vis-flir-aruco-localization"]], "pkl-aruco-localization": [[39, "cc-hardware-vis-pkl-aruco-localization"]], "pkl-estimated-position": [[39, "cc-hardware-vis-pkl-estimated-position"]], "Reference": [[40, "reference"]]}, "indexentries": {"algorithm (class in algos.algorithm)": [[4, "algos.algorithm.Algorithm"]], "algos.algorithm": [[4, "module-algos.algorithm"]], "close() (algorithm method)": [[4, "algos.algorithm.Algorithm.close"]], "is_okay (algorithm property)": [[4, "algos.algorithm.Algorithm.is_okay"]], "module": [[4, "module-algos.algorithm"], [5, "module-algos.aruco"], [6, "module-algos"], [7, "module-drivers.cameras.camera"], [8, "module-drivers.cameras.flir"], [9, "module-drivers.cameras"], [10, "module-drivers.cameras.pkl"], [11, "module-drivers.cameras.realsense"], [12, "module-drivers"], [13, "module-drivers.safe_serial"], [14, "module-drivers.sensor"], [15, "module-drivers.spads.dashboard"], [16, "module-drivers.spads"], [17, "module-drivers.spads.pkl"], [18, "module-drivers.spads.spad"], [19, "module-drivers.spads.tmf8828"], [20, "module-drivers.spads.vl53l8ch"], [21, "module-drivers.stepper_motors"], [22, "module-drivers.stepper_motors.kinesis_stepper"], [23, "module-drivers.stepper_motors.stepper_controller"], [24, "module-drivers.stepper_motors.stepper_motor"], [25, "module-drivers.stepper_motors.stepper_system"], [26, "module-drivers.stepper_motors.telemetrix_stepper"], [27, "module-utils.asyncio_utils"], [28, "module-utils.blocking_deque"], [29, "module-utils.constants"], [30, "module-utils.file_handlers"], [31, "module-utils"], [32, "module-utils.logger"], [33, "module-utils.manager"], [34, "module-utils.plotting"], [35, "module-utils.registry"], [36, "module-utils.serial_utils"], [37, "module-utils.singleton"], [38, "module-utils.transformations"], [39, "module-cc_hardware.tools"]], "run() (algorithm method)": [[4, "algos.algorithm.Algorithm.run"]], "arucolocalizationalgorithm (class in algos.aruco)": [[5, "algos.aruco.ArucoLocalizationAlgorithm"]], "algos.aruco": [[5, "module-algos.aruco"]], "close() (arucolocalizationalgorithm method)": [[5, "algos.aruco.ArucoLocalizationAlgorithm.close"]], "is_okay (arucolocalizationalgorithm property)": [[5, "algos.aruco.ArucoLocalizationAlgorithm.is_okay"]], "run() (arucolocalizationalgorithm method)": [[5, "algos.aruco.ArucoLocalizationAlgorithm.run"]], "algos": [[6, "module-algos"]], "camera (class in drivers.cameras.camera)": [[7, "drivers.cameras.camera.Camera"]], "accumulate() (camera method)": [[7, "drivers.cameras.camera.Camera.accumulate"]], "distortion_coefficients (camera property)": [[7, "drivers.cameras.camera.Camera.distortion_coefficients"]], "drivers.cameras.camera": [[7, "module-drivers.cameras.camera"]], "intrinsic_matrix (camera property)": [[7, "drivers.cameras.camera.Camera.intrinsic_matrix"]], "resolution (camera property)": [[7, "drivers.cameras.camera.Camera.resolution"]], "flircamera (class in drivers.cameras.flir)": [[8, "drivers.cameras.flir.FlirCamera"]], "grasshopperflircamera (class in drivers.cameras.flir)": [[8, "drivers.cameras.flir.GrasshopperFlirCamera"]], "accumulate() (flircamera method)": [[8, "drivers.cameras.flir.FlirCamera.accumulate"]], "close() (flircamera method)": [[8, "drivers.cameras.flir.FlirCamera.close"]], "distortion_coefficients (grasshopperflircamera property)": [[8, "drivers.cameras.flir.GrasshopperFlirCamera.distortion_coefficients"]], "drivers.cameras.flir": [[8, "module-drivers.cameras.flir"]], "intrinsic_matrix (grasshopperflircamera property)": [[8, "drivers.cameras.flir.GrasshopperFlirCamera.intrinsic_matrix"]], "is_okay (flircamera property)": [[8, "drivers.cameras.flir.FlirCamera.is_okay"]], "resolution (flircamera property)": [[8, "drivers.cameras.flir.FlirCamera.resolution"]], "drivers.cameras": [[9, "module-drivers.cameras"]], "pklcamera (class in drivers.cameras.pkl)": [[10, "drivers.cameras.pkl.PklCamera"]], "accumulate() (pklcamera method)": [[10, "drivers.cameras.pkl.PklCamera.accumulate"]], "close() (pklcamera method)": [[10, "drivers.cameras.pkl.PklCamera.close"]], "distortion_coefficients (pklcamera property)": [[10, "drivers.cameras.pkl.PklCamera.distortion_coefficients"]], "drivers.cameras.pkl": [[10, "module-drivers.cameras.pkl"]], "intrinsic_matrix (pklcamera property)": [[10, "drivers.cameras.pkl.PklCamera.intrinsic_matrix"]], "is_okay (pklcamera property)": [[10, "drivers.cameras.pkl.PklCamera.is_okay"]], "resolution (pklcamera property)": [[10, "drivers.cameras.pkl.PklCamera.resolution"]], "realsensecamera (class in drivers.cameras.realsense)": [[11, "drivers.cameras.realsense.RealsenseCamera"]], "accumulate() (realsensecamera method)": [[11, "drivers.cameras.realsense.RealsenseCamera.accumulate"]], "close() (realsensecamera method)": [[11, "drivers.cameras.realsense.RealsenseCamera.close"]], "distortion_coefficients (realsensecamera property)": [[11, "drivers.cameras.realsense.RealsenseCamera.distortion_coefficients"]], "drivers.cameras.realsense": [[11, "module-drivers.cameras.realsense"]], "intrinsic_matrix (realsensecamera property)": [[11, "drivers.cameras.realsense.RealsenseCamera.intrinsic_matrix"]], "is_okay (realsensecamera property)": [[11, "drivers.cameras.realsense.RealsenseCamera.is_okay"]], "resolution (realsensecamera property)": [[11, "drivers.cameras.realsense.RealsenseCamera.resolution"]], "drivers": [[12, "module-drivers"]], "safeserial (class in drivers.safe_serial)": [[13, "drivers.safe_serial.SafeSerial"]], "__getattr__() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.__getattr__"]], "create() (safeserial class method)": [[13, "drivers.safe_serial.SafeSerial.create"]], "drivers.safe_serial": [[13, "module-drivers.safe_serial"]], "read() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.read"]], "wait_for_start_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.wait_for_start_talk"]], "wait_for_stop_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.wait_for_stop_talk"]], "write() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.write"]], "write_and_wait_for_start_and_stop_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.write_and_wait_for_start_and_stop_talk"]], "write_and_wait_for_start_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.write_and_wait_for_start_talk"]], "write_and_wait_for_stop_talk() (safeserial method)": [[13, "drivers.safe_serial.SafeSerial.write_and_wait_for_stop_talk"]], "sensor (class in drivers.sensor)": [[14, "drivers.sensor.Sensor"]], "sensordata (class in drivers.sensor)": [[14, "drivers.sensor.SensorData"]], "sensordatathreaded (class in drivers.sensor)": [[14, "drivers.sensor.SensorDataThreaded"]], "__del__() (sensor method)": [[14, "drivers.sensor.Sensor.__del__"]], "calibrate() (sensor method)": [[14, "drivers.sensor.Sensor.calibrate"]], "close() (sensor method)": [[14, "drivers.sensor.Sensor.close"]], "drivers.sensor": [[14, "module-drivers.sensor"]], "get_data() (sensordata method)": [[14, "drivers.sensor.SensorData.get_data"]], "get_data() (sensordatathreaded method)": [[14, "drivers.sensor.SensorDataThreaded.get_data"]], "is_okay (sensor property)": [[14, "drivers.sensor.Sensor.is_okay"]], "process() (sensordata method)": [[14, "drivers.sensor.SensorData.process"]], "reset() (sensordata method)": [[14, "drivers.sensor.SensorData.reset"]], "reset() (sensordatathreaded method)": [[14, "drivers.sensor.SensorDataThreaded.reset"]], "dashdashboard (class in drivers.spads.dashboard)": [[15, "drivers.spads.dashboard.DashDashboard"]], "matplotlibdashboard (class in drivers.spads.dashboard)": [[15, "drivers.spads.dashboard.MatplotlibDashboard"]], "pyqtgraphdashboard (class in drivers.spads.dashboard)": [[15, "drivers.spads.dashboard.PyQtGraphDashboard"]], "spaddashboard (class in drivers.spads.dashboard)": [[15, "drivers.spads.dashboard.SPADDashboard"]], "adjust_ylim() (matplotlibdashboard method)": [[15, "drivers.spads.dashboard.MatplotlibDashboard.adjust_ylim"]], "drivers.spads.dashboard": [[15, "module-drivers.spads.dashboard"]], "max_bin (spaddashboard property)": [[15, "drivers.spads.dashboard.SPADDashboard.max_bin"]], "min_bin (spaddashboard property)": [[15, "drivers.spads.dashboard.SPADDashboard.min_bin"]], "run() (dashdashboard method)": [[15, "drivers.spads.dashboard.DashDashboard.run"]], "run() (matplotlibdashboard method)": [[15, "drivers.spads.dashboard.MatplotlibDashboard.run"]], "run() (pyqtgraphdashboard method)": [[15, "drivers.spads.dashboard.PyQtGraphDashboard.run"]], "run() (spaddashboard method)": [[15, "drivers.spads.dashboard.SPADDashboard.run"]], "save_animation() (matplotlibdashboard method)": [[15, "drivers.spads.dashboard.MatplotlibDashboard.save_animation"]], "setup_layout() (dashdashboard method)": [[15, "drivers.spads.dashboard.DashDashboard.setup_layout"]], "setup_plot() (matplotlibdashboard method)": [[15, "drivers.spads.dashboard.MatplotlibDashboard.setup_plot"]], "setup_plots() (pyqtgraphdashboard method)": [[15, "drivers.spads.dashboard.PyQtGraphDashboard.setup_plots"]], "setup_sensor() (spaddashboard method)": [[15, "drivers.spads.dashboard.SPADDashboard.setup_sensor"]], "update() (matplotlibdashboard method)": [[15, "drivers.spads.dashboard.MatplotlibDashboard.update"]], "update() (pyqtgraphdashboard method)": [[15, "drivers.spads.dashboard.PyQtGraphDashboard.update"]], "drivers.spads": [[16, "module-drivers.spads"]], "pklspadsensor (class in drivers.spads.pkl)": [[17, "drivers.spads.pkl.PklSPADSensor"]], "accumulate() (pklspadsensor method)": [[17, "drivers.spads.pkl.PklSPADSensor.accumulate"]], "close() (pklspadsensor method)": [[17, "drivers.spads.pkl.PklSPADSensor.close"]], "drivers.spads.pkl": [[17, "module-drivers.spads.pkl"]], "is_okay (pklspadsensor property)": [[17, "drivers.spads.pkl.PklSPADSensor.is_okay"]], "num_bins (pklspadsensor property)": [[17, "drivers.spads.pkl.PklSPADSensor.num_bins"]], "resolution (pklspadsensor property)": [[17, "drivers.spads.pkl.PklSPADSensor.resolution"]], "spadsensor (class in drivers.spads.spad)": [[18, "drivers.spads.spad.SPADSensor"]], "accumulate() (spadsensor method)": [[18, "drivers.spads.spad.SPADSensor.accumulate"]], "drivers.spads.spad": [[18, "module-drivers.spads.spad"]], "num_bins (spadsensor property)": [[18, "drivers.spads.spad.SPADSensor.num_bins"]], "resolution (spadsensor property)": [[18, "drivers.spads.spad.SPADSensor.resolution"]], "rangemode (class in drivers.spads.tmf8828)": [[19, "drivers.spads.tmf8828.RangeMode"]], "spadid (class in drivers.spads.tmf8828)": [[19, "drivers.spads.tmf8828.SPADID"]], "tmf8828histogram (class in drivers.spads.tmf8828)": [[19, "drivers.spads.tmf8828.TMF8828Histogram"]], "tmf8828sensor (class in drivers.spads.tmf8828)": [[19, "drivers.spads.tmf8828.TMF8828Sensor"]], "accumulate() (tmf8828sensor method)": [[19, "drivers.spads.tmf8828.TMF8828Sensor.accumulate"]], "calibrate() (tmf8828sensor method)": [[19, "drivers.spads.tmf8828.TMF8828Sensor.calibrate"]], "close() (tmf8828sensor method)": [[19, "drivers.spads.tmf8828.TMF8828Sensor.close"]], "drivers.spads.tmf8828": [[19, "module-drivers.spads.tmf8828"]], "get_active_channels_per_subcapture() (spadid method)": [[19, "drivers.spads.tmf8828.SPADID.get_active_channels_per_subcapture"]], "get_data() (tmf8828histogram method)": [[19, "drivers.spads.tmf8828.TMF8828Histogram.get_data"]], "get_num_channels() (spadid method)": [[19, "drivers.spads.tmf8828.SPADID.get_num_channels"]], "get_num_pixels() (spadid method)": [[19, "drivers.spads.tmf8828.SPADID.get_num_pixels"]], "get_resolution() (spadid method)": [[19, "drivers.spads.tmf8828.SPADID.get_resolution"]], "has_data (tmf8828histogram property)": [[19, "drivers.spads.tmf8828.TMF8828Histogram.has_data"]], "is_okay (tmf8828sensor property)": [[19, "drivers.spads.tmf8828.TMF8828Sensor.is_okay"]], "num_bins (tmf8828sensor property)": [[19, "drivers.spads.tmf8828.TMF8828Sensor.num_bins"]], "process() (tmf8828histogram method)": [[19, "drivers.spads.tmf8828.TMF8828Histogram.process"]], "reset() (tmf8828histogram method)": [[19, "drivers.spads.tmf8828.TMF8828Histogram.reset"]], "resolution (tmf8828sensor property)": [[19, "drivers.spads.tmf8828.TMF8828Sensor.resolution"]], "sensorconfig (class in drivers.spads.vl53l8ch)": [[20, "drivers.spads.vl53l8ch.SensorConfig"]], "sensorconfig4x4 (class in drivers.spads.vl53l8ch)": [[20, "drivers.spads.vl53l8ch.SensorConfig4x4"]], "sensorconfig8x8 (class in drivers.spads.vl53l8ch)": [[20, "drivers.spads.vl53l8ch.SensorConfig8x8"]], "sensorconfigshared (class in drivers.spads.vl53l8ch)": [[20, "drivers.spads.vl53l8ch.SensorConfigShared"]], "vl53l8chhistogram (class in drivers.spads.vl53l8ch)": [[20, "drivers.spads.vl53l8ch.VL53L8CHHistogram"]], "vl53l8chsensor (class in drivers.spads.vl53l8ch)": [[20, "drivers.spads.vl53l8ch.VL53L8CHSensor"]], "accumulate() (vl53l8chsensor method)": [[20, "drivers.spads.vl53l8ch.VL53L8CHSensor.accumulate"]], "close() (vl53l8chsensor method)": [[20, "drivers.spads.vl53l8ch.VL53L8CHSensor.close"]], "drivers.spads.vl53l8ch": [[20, "module-drivers.spads.vl53l8ch"]], "get_data() (vl53l8chhistogram method)": [[20, "drivers.spads.vl53l8ch.VL53L8CHHistogram.get_data"]], "has_data (vl53l8chhistogram property)": [[20, "drivers.spads.vl53l8ch.VL53L8CHHistogram.has_data"]], "is_okay (vl53l8chsensor property)": [[20, "drivers.spads.vl53l8ch.VL53L8CHSensor.is_okay"]], "num_bins (vl53l8chsensor property)": [[20, "drivers.spads.vl53l8ch.VL53L8CHSensor.num_bins"]], "pack() (sensorconfig method)": [[20, "drivers.spads.vl53l8ch.SensorConfig.pack"]], "process() (vl53l8chhistogram method)": [[20, "drivers.spads.vl53l8ch.VL53L8CHHistogram.process"]], "reset() (vl53l8chhistogram method)": [[20, "drivers.spads.vl53l8ch.VL53L8CHHistogram.reset"]], "resolution (vl53l8chsensor property)": [[20, "drivers.spads.vl53l8ch.VL53L8CHSensor.resolution"]], "update() (vl53l8chsensor method)": [[20, "drivers.spads.vl53l8ch.VL53L8CHSensor.update"]], "drivers.stepper_motors": [[21, "module-drivers.stepper_motors"]], "azimuthelevationsystem (class in drivers.stepper_motors.kinesis_stepper)": [[22, "drivers.stepper_motors.kinesis_stepper.AzimuthElevationSystem"]], "kinesisrotationstage (class in drivers.stepper_motors.kinesis_stepper)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage"]], "kinesissteppermotor (class in drivers.stepper_motors.kinesis_stepper)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor"]], "kinesissteppermotorsystem (class in drivers.stepper_motors.kinesis_stepper)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotorSystem"]], "close() (kinesissteppermotor method)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.close"]], "drivers.stepper_motors.kinesis_stepper": [[22, "module-drivers.stepper_motors.kinesis_stepper"]], "home() (kinesissteppermotor method)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.home"]], "initialize() (kinesisrotationstage method)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage.initialize"]], "initialize() (kinesissteppermotor method)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.initialize"]], "is_okay (kinesissteppermotor property)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.is_okay"]], "lower_limit (kinesissteppermotor property)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.lower_limit"]], "move_by() (kinesissteppermotor method)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.move_by"]], "move_to() (kinesissteppermotor method)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.move_to"]], "position (kinesissteppermotor property)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.position"]], "upper_limit (kinesissteppermotor property)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.upper_limit"]], "wait_for_move() (kinesissteppermotor method)": [[22, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.wait_for_move"]], "snakesteppercontroller (class in drivers.stepper_motors.stepper_controller)": [[23, "drivers.stepper_motors.stepper_controller.SnakeStepperController"]], "steppercontroller (class in drivers.stepper_motors.stepper_controller)": [[23, "drivers.stepper_motors.stepper_controller.StepperController"]], "drivers.stepper_motors.stepper_controller": [[23, "module-drivers.stepper_motors.stepper_controller"]], "get_position() (snakesteppercontroller method)": [[23, "drivers.stepper_motors.stepper_controller.SnakeStepperController.get_position"]], "get_position() (steppercontroller method)": [[23, "drivers.stepper_motors.stepper_controller.StepperController.get_position"]], "dummysteppermotor (class in drivers.stepper_motors.stepper_motor)": [[24, "drivers.stepper_motors.stepper_motor.DummyStepperMotor"]], "steppermotor (class in drivers.stepper_motors.stepper_motor)": [[24, "drivers.stepper_motors.stepper_motor.StepperMotor"]], "close() (steppermotor method)": [[24, "drivers.stepper_motors.stepper_motor.StepperMotor.close"]], "drivers.stepper_motors.stepper_motor": [[24, "module-drivers.stepper_motors.stepper_motor"]], "home() (steppermotor method)": [[24, "drivers.stepper_motors.stepper_motor.StepperMotor.home"]], "is_okay (steppermotor property)": [[24, "drivers.stepper_motors.stepper_motor.StepperMotor.is_okay"]], "move_by() (steppermotor method)": [[24, "drivers.stepper_motors.stepper_motor.StepperMotor.move_by"]], "move_to() (steppermotor method)": [[24, "drivers.stepper_motors.stepper_motor.StepperMotor.move_to"]], "position (steppermotor property)": [[24, "drivers.stepper_motors.stepper_motor.StepperMotor.position"]], "wait_for_move() (steppermotor method)": [[24, "drivers.stepper_motors.stepper_motor.StepperMotor.wait_for_move"]], "steppermotorsystem (class in drivers.stepper_motors.stepper_system)": [[25, "drivers.stepper_motors.stepper_system.StepperMotorSystem"]], "steppermotorsystemaxis (class in drivers.stepper_motors.stepper_system)": [[25, "drivers.stepper_motors.stepper_system.StepperMotorSystemAxis"]], "__getattr__() (steppermotorsystem method)": [[25, "drivers.stepper_motors.stepper_system.StepperMotorSystem.__getattr__"]], "close() (steppermotorsystem method)": [[25, "drivers.stepper_motors.stepper_system.StepperMotorSystem.close"]], "drivers.stepper_motors.stepper_system": [[25, "module-drivers.stepper_motors.stepper_system"]], "move_by() (steppermotorsystem method)": [[25, "drivers.stepper_motors.stepper_system.StepperMotorSystem.move_by"]], "move_to() (steppermotorsystem method)": [[25, "drivers.stepper_motors.stepper_system.StepperMotorSystem.move_to"]], "position (steppermotorsystem property)": [[25, "drivers.stepper_motors.stepper_system.StepperMotorSystem.position"]], "wait_for_move() (steppermotorsystem method)": [[25, "drivers.stepper_motors.stepper_system.StepperMotorSystem.wait_for_move"]], "dualdrive2axisgantry (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry"]], "dualdrive2axisgantry_x (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_X"]], "dualdrive2axisgantry_y1 (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_Y1"]], "dualdrive2axisgantry_y2 (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_Y2"]], "singledrive1axisgantry (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry"]], "singledrive1axisgantry_x (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry_X"]], "singledrive1axisgantry_y (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry_Y"]], "telemetrixsteppermotor (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor"]], "telemetrixsteppermotorsystem (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem"]], "telemetrixsteppermotorx (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorX"]], "telemetrixsteppermotorxreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorXReversed"]], "telemetrixsteppermotory (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorY"]], "telemetrixsteppermotoryreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorYReversed"]], "telemetrixsteppermotorz (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorZ"]], "telemetrixsteppermotorzreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorZReversed"]], "__getattr__() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.__getattr__"]], "close() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.close"]], "close() (telemetrixsteppermotorsystem method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem.close"]], "cm_to_revs() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.cm_to_revs"]], "drivers.stepper_motors.telemetrix_stepper": [[26, "module-drivers.stepper_motors.telemetrix_stepper"]], "home() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.home"]], "id (telemetrixsteppermotor property)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.id"]], "is_okay (telemetrixsteppermotor property)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.is_okay"]], "move_by() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.move_by"]], "move_to() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.move_to"]], "position (telemetrixsteppermotor property)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.position"]], "revs_to_cm() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.revs_to_cm"]], "set_absolute_target_position_cm() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.set_absolute_target_position_cm"]], "set_target_position_cm() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.set_target_position_cm"]], "wait_for_move() (telemetrixsteppermotor method)": [[26, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.wait_for_move"]], "call_async() (in module utils.asyncio_utils)": [[27, "utils.asyncio_utils.call_async"]], "call_async_gather() (in module utils.asyncio_utils)": [[27, "utils.asyncio_utils.call_async_gather"]], "call_async_value() (in module utils.asyncio_utils)": [[27, "utils.asyncio_utils.call_async_value"]], "utils.asyncio_utils": [[27, "module-utils.asyncio_utils"]], "blockingdeque (class in utils.blocking_deque)": [[28, "utils.blocking_deque.BlockingDeque"]], "__getattr__() (blockingdeque method)": [[28, "utils.blocking_deque.BlockingDeque.__getattr__"]], "__getitem__() (blockingdeque method)": [[28, "utils.blocking_deque.BlockingDeque.__getitem__"]], "__len__() (blockingdeque method)": [[28, "utils.blocking_deque.BlockingDeque.__len__"]], "__repr__() (blockingdeque method)": [[28, "utils.blocking_deque.BlockingDeque.__repr__"]], "append() (blockingdeque method)": [[28, "utils.blocking_deque.BlockingDeque.append"]], "utils.blocking_deque": [[28, "module-utils.blocking_deque"]], "c (in module utils.constants)": [[29, "utils.constants.C"]], "utils.constants": [[29, "module-utils.constants"]], "pklhandler (class in utils.file_handlers)": [[30, "utils.file_handlers.PklHandler"]], "videowriter (class in utils.file_handlers)": [[30, "utils.file_handlers.VideoWriter"]], "__del__() (videowriter method)": [[30, "utils.file_handlers.VideoWriter.__del__"]], "__len__() (pklhandler method)": [[30, "utils.file_handlers.PklHandler.__len__"]], "append() (pklhandler method)": [[30, "utils.file_handlers.PklHandler.append"]], "append() (videowriter method)": [[30, "utils.file_handlers.VideoWriter.append"]], "close() (videowriter method)": [[30, "utils.file_handlers.VideoWriter.close"]], "load() (pklhandler method)": [[30, "utils.file_handlers.PklHandler.load"]], "load_all() (pklhandler static method)": [[30, "utils.file_handlers.PklHandler.load_all"]], "update_index() (pklhandler method)": [[30, "utils.file_handlers.PklHandler.update_index"]], "utils.file_handlers": [[30, "module-utils.file_handlers"]], "write() (pklhandler method)": [[30, "utils.file_handlers.PklHandler.write"]], "utils": [[31, "module-utils"]], "filehandler (class in utils.logger)": [[32, "utils.logger.FileHandler"]], "loggermaxlevelfilter (class in utils.logger)": [[32, "utils.logger.LoggerMaxLevelFilter"]], "tqdmstreamhandler (class in utils.logger)": [[32, "utils.logger.TqdmStreamHandler"]], "emit() (tqdmstreamhandler method)": [[32, "utils.logger.TqdmStreamHandler.emit"]], "filter() (loggermaxlevelfilter method)": [[32, "utils.logger.LoggerMaxLevelFilter.filter"]], "utils.logger": [[32, "module-utils.logger"]], "component (class in utils.manager)": [[33, "utils.manager.Component"]], "manager (class in utils.manager)": [[33, "utils.manager.Manager"]], "__enter__() (manager method)": [[33, "utils.manager.Manager.__enter__"]], "__exit__() (manager method)": [[33, "utils.manager.Manager.__exit__"]], "add() (manager method)": [[33, "utils.manager.Manager.add"]], "close() (component method)": [[33, "utils.manager.Component.close"]], "close() (manager method)": [[33, "utils.manager.Manager.close"]], "components (manager property)": [[33, "utils.manager.Manager.components"]], "is_okay (component property)": [[33, "utils.manager.Component.is_okay"]], "is_okay (manager property)": [[33, "utils.manager.Manager.is_okay"]], "run() (manager method)": [[33, "utils.manager.Manager.run"]], "utils.manager": [[33, "module-utils.manager"]], "set_matplotlib_style() (in module utils.plotting)": [[34, "utils.plotting.set_matplotlib_style"]], "transient_gui() (in module utils.plotting)": [[34, "utils.plotting.transient_gui"]], "utils.plotting": [[34, "module-utils.plotting"]], "registry (class in utils.registry)": [[35, "utils.registry.Registry"]], "create_from_registry() (registry class method)": [[35, "utils.registry.Registry.create_from_registry"]], "register() (registry class method)": [[35, "utils.registry.Registry.register"]], "register() (in module utils.registry)": [[35, "utils.registry.register"]], "utils.registry": [[35, "module-utils.registry"]], "find_device_by_label() (in module utils.serial_utils)": [[36, "utils.serial_utils.find_device_by_label"]], "find_ports() (in module utils.serial_utils)": [[36, "utils.serial_utils.find_ports"]], "utils.serial_utils": [[36, "module-utils.serial_utils"]], "singletonabcmeta (class in utils.singleton)": [[37, "utils.singleton.SingletonABCMeta"]], "singletonmeta (class in utils.singleton)": [[37, "utils.singleton.SingletonMeta"]], "__call__() (singletonmeta method)": [[37, "utils.singleton.SingletonMeta.__call__"]], "instance() (singletonmeta class method)": [[37, "utils.singleton.SingletonMeta.instance"]], "utils.singleton": [[37, "module-utils.singleton"]], "utils.transformations": [[38, "module-utils.transformations"]], "cc_hardware.tools": [[39, "module-cc_hardware.tools"]]}})