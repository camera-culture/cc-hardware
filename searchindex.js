Search.setIndex({"docnames": ["_templates/python/module", "contributing", "examples/index", "examples/spad_dashboard", "examples/spad_gantry_capture", "examples/stepper_motor_controller", "index", "usage/api", "usage/api/algos/algorithm/index", "usage/api/algos/aruco/index", "usage/api/algos/index", "usage/api/drivers/cameras/camera/index", "usage/api/drivers/cameras/flir/index", "usage/api/drivers/cameras/index", "usage/api/drivers/cameras/pkl/index", "usage/api/drivers/cameras/realsense/index", "usage/api/drivers/index", "usage/api/drivers/safe_serial/index", "usage/api/drivers/sensor/index", "usage/api/drivers/spads/dashboards/dash/index", "usage/api/drivers/spads/dashboards/dashboard/index", "usage/api/drivers/spads/dashboards/index", "usage/api/drivers/spads/dashboards/matplotlib/index", "usage/api/drivers/spads/dashboards/pyqtgraph/index", "usage/api/drivers/spads/index", "usage/api/drivers/spads/pkl/index", "usage/api/drivers/spads/spad/index", "usage/api/drivers/spads/tmf8828/index", "usage/api/drivers/spads/vl53l8ch/index", "usage/api/drivers/stepper_motors/index", "usage/api/drivers/stepper_motors/kinesis_stepper/index", "usage/api/drivers/stepper_motors/stepper_controller/index", "usage/api/drivers/stepper_motors/stepper_motor/index", "usage/api/drivers/stepper_motors/stepper_system/index", "usage/api/drivers/stepper_motors/telemetrix_stepper/index", "usage/api/utils/asyncio_utils/index", "usage/api/utils/blocking_deque/index", "usage/api/utils/config/index", "usage/api/utils/constants/index", "usage/api/utils/file_handlers/index", "usage/api/utils/index", "usage/api/utils/logger/index", "usage/api/utils/manager/index", "usage/api/utils/misc/index", "usage/api/utils/plotting/index", "usage/api/utils/registry/index", "usage/api/utils/serial_utils/index", "usage/api/utils/setting/index", "usage/api/utils/singleton/index", "usage/api/utils/transformations/index", "usage/cli", "usage/index"], "filenames": ["_templates/python/module.rst", "contributing.md", "examples/index.md", "examples/spad_dashboard.md", "examples/spad_gantry_capture.md", "examples/stepper_motor_controller.md", "index.md", "usage/api.md", "usage/api/algos/algorithm/index.rst", "usage/api/algos/aruco/index.rst", "usage/api/algos/index.rst", "usage/api/drivers/cameras/camera/index.rst", "usage/api/drivers/cameras/flir/index.rst", "usage/api/drivers/cameras/index.rst", "usage/api/drivers/cameras/pkl/index.rst", "usage/api/drivers/cameras/realsense/index.rst", "usage/api/drivers/index.rst", "usage/api/drivers/safe_serial/index.rst", "usage/api/drivers/sensor/index.rst", "usage/api/drivers/spads/dashboards/dash/index.rst", "usage/api/drivers/spads/dashboards/dashboard/index.rst", "usage/api/drivers/spads/dashboards/index.rst", "usage/api/drivers/spads/dashboards/matplotlib/index.rst", "usage/api/drivers/spads/dashboards/pyqtgraph/index.rst", "usage/api/drivers/spads/index.rst", "usage/api/drivers/spads/pkl/index.rst", "usage/api/drivers/spads/spad/index.rst", "usage/api/drivers/spads/tmf8828/index.rst", "usage/api/drivers/spads/vl53l8ch/index.rst", "usage/api/drivers/stepper_motors/index.rst", "usage/api/drivers/stepper_motors/kinesis_stepper/index.rst", "usage/api/drivers/stepper_motors/stepper_controller/index.rst", "usage/api/drivers/stepper_motors/stepper_motor/index.rst", "usage/api/drivers/stepper_motors/stepper_system/index.rst", "usage/api/drivers/stepper_motors/telemetrix_stepper/index.rst", "usage/api/utils/asyncio_utils/index.rst", "usage/api/utils/blocking_deque/index.rst", "usage/api/utils/config/index.rst", "usage/api/utils/constants/index.rst", "usage/api/utils/file_handlers/index.rst", "usage/api/utils/index.rst", "usage/api/utils/logger/index.rst", "usage/api/utils/manager/index.rst", "usage/api/utils/misc/index.rst", "usage/api/utils/plotting/index.rst", "usage/api/utils/registry/index.rst", "usage/api/utils/serial_utils/index.rst", "usage/api/utils/setting/index.rst", "usage/api/utils/singleton/index.rst", "usage/api/utils/transformations/index.rst", "usage/cli.md", "usage/index.md"], "titles": ["&lt;no title&gt;", "Contributing", "Examples", "SPAD Dashboard", "Stepper Gantry Collab", "Stepper Motor Controller", "Camera Culture Hardware Repo", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos.aruco</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.camera</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.flir</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.pkl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.realsense</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.safe_serial</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.sensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.dashboards.dash</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.dashboards.dashboard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.dashboards</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.dashboards.matplotlib</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.dashboards.pyqtgraph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.pkl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.spad</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.tmf8828</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.vl53l8ch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.kinesis_stepper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_motor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_system</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.telemetrix_stepper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.asyncio_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.blocking_deque</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.file_handlers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.misc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.plotting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.serial_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.setting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.singleton</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.transformations</span></code>", "CLI Documentation", "Reference"], "terms": {"obj": 0, "displai": [0, 9, 20, 23, 44], "orphan": 0, "endif": 0, "name": [0, 1, 4, 5, 17, 27, 31, 33, 34, 36, 37, 45, 46], "length": 0, "loc_fil": 0, "jinja_env": 0, "test": [0, 25, 32], "set": [0, 1, 3, 4, 5, 12, 15, 18, 19, 20, 22, 23, 28, 30, 34, 37, 40, 41, 44], "readm": [0, 1, 6], "url_root": 0, "pathnam": 0, "md": [0, 1, 6], "i": [0, 1, 3, 4, 5, 6, 8, 9, 12, 14, 15, 17, 18, 20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 47, 48], "docstr": 0, "autoapi": 0, "nest": 0, "pars": 0, "indent": 0, "3": [0, 12, 27, 33], "block": [0, 20, 32, 33, 36], "subpackag": 0, "visible_subpackag": 0, "selectattr": 0, "list": [0, 4, 5, 9, 15, 17, 18, 20, 25, 27, 28, 30, 31, 33, 34, 35, 39, 46, 47], "toctre": 0, "titlesonli": 0, "maxdepth": 0, "short_nam": 0, "index": [0, 1, 31, 35, 36, 39], "rst": 0, "endfor": 0, "endblock": 0, "submodul": 0, "visible_submodul": 0, "1": [0, 1, 3, 9, 12, 17, 20, 26, 27, 28, 30, 33, 39], "content": [0, 1], "all": [0, 1, 6, 8, 17, 22, 26, 27, 32, 35, 37, 39, 42, 45, 46], "none": [0, 4, 5, 9, 12, 14, 15, 17, 19, 20, 22, 23, 27, 28, 30, 34, 39, 42, 44, 45, 46, 47], "visible_children": 0, "children": 0, "elif": 0, "type": [0, 8, 17, 30, 43, 45, 47, 48], "equalto": 0, "packag": [0, 1, 2, 12, 13, 24, 29, 41, 50], "els": 0, "rejectattr": 0, "import": [0, 3, 4, 5, 6, 20, 41, 42, 45, 48], "titl": [0, 1, 47], "visible_class": 0, "class": [0, 1, 6, 43, 46, 49], "visible_funct": 0, "function": [0, 1, 6, 9, 20, 28, 39, 42, 48], "visible_attribut": 0, "data": [0, 1, 4, 5, 6, 12, 14, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 39, 44], "show": [0, 9, 44], "modul": [0, 49], "summari": 0, "autoapi_opt": 0, "scope": 0, "klass": 0, "id": [0, 27, 34], "attribut": [0, 17, 27, 33, 36, 37, 41, 47], "obj_item": 0, "render": 0, "0": [0, 1, 3, 4, 5, 12, 15, 30, 38], "repositori": [1, 6], "fairli": 1, "easi": 1, "so": [1, 12], "pleas": 1, "see": [1, 27, 33], "below": 1, "instruct": [1, 12], "how": [1, 2, 27, 33, 41], "actual": [1, 25], "make": [1, 6, 35, 36], "thi": [1, 6, 8, 9, 12, 14, 15, 18, 20, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 47, 48, 49], "project": 1, "There": [1, 20], "ar": [1, 6, 9, 17, 18, 20, 28, 30, 32, 33, 34, 37, 39, 42, 46], "two": 1, "form": 1, "simpl": [1, 12, 15, 30], "ad": [1, 27, 33], "within": [1, 6, 28], "doc": 1, "folder": 1, "written": [1, 17, 39, 41], "markdown": 1, "convert": [1, 34], "html": 1, "through": [1, 34], "myst_pars": 1, "sphinx": 1, "To": [1, 6, 12], "well": [1, 15], "you": [1, 6, 12, 20, 32, 34], "want": 1, "symlink": [1, 6], "A": [1, 8, 9, 11, 12, 14, 17, 25, 26, 27, 28, 30, 31, 33, 34, 36, 39, 41, 45, 46, 48], "conda": 1, "virtualenv": 1, "add": [1, 3, 4, 5, 8, 18, 20, 42], "isol": 1, "python": [1, 12], "environ": [1, 36], "reduc": 1, "conflict": 1, "amongst": 1, "It": [1, 12, 15, 17, 20, 27, 28, 30, 32, 37, 39, 41, 42, 48], "highli": 1, "recommend": 1, "us": [1, 2, 3, 4, 5, 6, 9, 12, 17, 19, 20, 22, 23, 25, 27, 30, 32, 33, 34, 36, 41, 42, 45, 46, 47, 48], "one": [1, 12, 15, 17, 48], "normal": 1, "git": [1, 6], "http": 1, "github": [1, 6], "com": [1, 6], "camera": [1, 9, 16, 42], "cultur": 1, "cc": [1, 13, 24, 28, 29, 37], "hardwar": [1, 13, 24, 25, 28, 29, 32, 34, 37], "cd": [1, 6], "sinc": [1, 47], "organ": [1, 27], "monorepo": [1, 6], "need": [1, 6, 12, 48], "poetri": [1, 6], "The": [1, 3, 5, 6, 9, 11, 12, 15, 17, 18, 19, 20, 22, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 45, 46, 47, 48], "develop": [1, 6, 27], "mode": [1, 4, 5, 6, 23, 27, 28, 44], "e": [1, 6, 26, 32, 33, 45], "symbol": 1, "link": 1, "immedi": 1, "reflect": [1, 6], "pip": [1, 6, 12], "action": 1, "automat": [1, 6, 37], "site": [1, 12], "page": 1, "host": 1, "static": [1, 39], "updat": [1, 3, 4, 18, 19, 20, 22, 23, 27, 28, 47], "have": [1, 6, 27, 32, 33, 37], "push": 1, "main": [1, 4, 5, 20, 28], "branch": 1, "onc": 1, "rebuild": 1, "ensur": [1, 12, 15, 18, 32, 33, 36, 39, 42, 45, 48], "error": [1, 8, 17, 32, 34], "befor": [1, 17, 30, 42], "do": [1, 12, 41], "mai": [1, 8, 12, 26, 32, 41], "get": [1, 11, 12, 14, 15, 28, 30, 31, 36, 37, 39, 45], "an": [1, 8, 9, 11, 17, 20, 25, 26, 28, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 46, 47, 48], "email": 1, "from": [1, 3, 4, 5, 9, 11, 12, 14, 15, 17, 20, 25, 26, 27, 28, 32, 34, 36, 39, 41, 42, 43, 44, 48], "someth": [1, 17], "bad": 1, "happen": [1, 17], "tag": 1, "exampl": [1, 12, 20, 27, 33, 39, 41, 42, 48], "v3": 1, "follow": [1, 6, 12], "pkg": [1, 6], "algo": [1, 6, 7], "contain": [1, 6, 8, 9, 11, 12, 14, 25, 27, 34, 42], "algorithm": [1, 6, 9, 10], "process": [1, 6, 9, 18, 20, 27, 28], "driver": [1, 3, 4, 5, 6, 7], "interfac": [1, 6, 8, 12, 15, 17, 23, 27, 28, 30, 32, 34, 44, 50], "util": [1, 3, 4, 5, 6, 7, 8, 17, 18, 20, 28, 31, 32], "tool": [1, 3, 6, 50], "work": [1, 6, 46, 49], "calibr": [1, 6, 18, 27], "visual": [1, 6, 19, 20, 22, 23, 44], "script": [1, 6, 27, 28, 46], "addit": [1, 8, 17, 28, 30, 34, 37, 42, 46, 48], "licens": 1, "pyproject": [1, 6], "toml": [1, 6], "descript": [1, 4, 5], "If": [1, 17, 18, 19, 20, 22, 23, 28, 34, 37, 39, 41, 45, 46, 47], "plan": 1, "visit": 1, "correspond": [1, 27, 37], "under": 1, "each": [1, 3, 6, 8, 17, 19, 20, 22, 25, 27, 39, 42], "should": [1, 6, 8, 20, 31, 32, 33, 34, 37, 39, 41, 47], "cc_hardwar": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 41, 42, 47, 50], "__init__": [1, 6, 48], "py": [1, 6], "googl": 1, "": [1, 4, 5, 6, 8, 11, 25, 26, 27, 28, 32, 33, 34, 38], "style": [1, 22, 23, 44], "These": [1, 34], "also": [1, 6, 17, 31, 32, 34, 39, 41, 45, 48], "gener": [1, 47], "tutori": 1, "fix": [1, 23], "exist": [1, 4, 5, 18, 39, 41, 48], "_static": 1, "persist": 1, "css": 1, "custom": [1, 23, 27, 41], "differ": [1, 17, 20, 27, 30, 47], "default": [1, 5, 8, 9, 12, 15, 17, 20, 25, 26, 27, 28, 30, 39, 42, 44, 47], "furo": 1, "theme": 1, "imag": [1, 9, 12, 14, 15], "favicon": 1, "etc": 1, "usag": 1, "refer": [1, 26, 30, 32, 34], "guid": 1, "eyesofcambrian": 1, "conf": 1, "relat": [1, 26], "extens": 1, "home": [1, 30, 32, 34], "try": 1, "maintain": 1, "describ": [1, 6], "abov": 1, "tab": 1, "onli": [1, 12, 15, 30, 45, 46, 48], "singl": [1, 17, 26, 27, 33, 39, 48], "background": [1, 12, 15, 27, 28], "ha": [1, 8, 12, 27, 30, 32, 33, 34, 41, 47], "multipl": [1, 6, 17, 27, 28, 30, 33, 34, 35, 39], "creat": [1, 6, 12, 15, 17, 18, 20, 27, 33, 37, 41, 44, 45, 47, 48], "same": [1, 32, 33, 48], "insert": 1, "without": [1, 6, 25, 39], "tabl": 1, "insid": 1, "restructuredtext": 1, "which": [1, 28, 30, 32, 33, 34, 41, 42], "both": [1, 9, 15, 31, 45, 48], "advantag": 1, "disadvantag": 1, "allow": [1, 6, 23, 27, 31, 42, 45], "u": 1, "understand": 1, "languag": 1, "compil": 1, "down": [1, 32, 33, 34], "featur": [1, 20, 30], "librari": [1, 12, 15, 30, 34], "websit": 1, "wai": [1, 6, 47], "easiest": 1, "makefil": [1, 28], "bat": 1, "provid": [1, 2, 8, 12, 15, 17, 18, 19, 20, 22, 23, 28, 30, 31, 32, 34, 35, 36, 37, 39, 41, 45, 47, 48, 49], "directli": [1, 34], "necessari": [1, 18, 20, 28, 45, 48], "depend": [1, 6, 26, 32], "run": [1, 3, 4, 5, 6, 8, 9, 12, 19, 20, 22, 23, 27, 42], "command": [1, 6, 12, 32, 33, 50], "dev": 1, "clean": 1, "view": 1, "go": [1, 12], "browser": [1, 19], "open": [1, 9, 14], "locat": [1, 32, 33], "autobuild": 1, "extrem": 1, "when": [1, 6, 18, 20, 32, 36, 37, 39, 42], "made": [1, 27], "pypi": 1, "tl": 1, "dr": 1, "we": [2, 34], "few": [2, 17], "spad": [2, 4, 16, 44], "dashboard": [2, 4], "stepper": [2, 29, 30, 31, 32, 33, 34], "gantri": [2, 33], "collab": 2, "motor": [2, 29, 30, 31, 32, 33, 34], "control": [2, 3, 4, 30, 31, 32, 33, 34], "spaddashboard": [3, 4, 19, 20, 22, 23], "spaddashboardconfig": [3, 19, 20, 22, 23], "spadsensor": [3, 4, 20, 25, 26, 27, 28, 44], "spadsensorconfig": [3, 26, 28], "cli": [3, 51], "register_cli": 3, "run_cli": 3, "get_logg": [3, 4, 5, 41], "manag": [3, 4, 5, 26, 28, 40, 47], "def": [3, 4, 5, 12, 42, 48], "my_callback": [3, 20], "call": [3, 34, 42, 48], "logger": [3, 4, 5, 40], "interv": [3, 39], "arg": [3, 4, 5, 17, 27, 28, 30, 32, 33, 34, 36, 37, 41, 45, 48], "instanc": [3, 12, 15, 17, 20, 37, 44, 45, 47, 48], "callback": [3, 20, 35], "global": 3, "10": [3, 4, 5, 12, 17, 39, 44, 48], "info": [3, 4, 5, 41], "spad_dashboard": 3, "sensor": [3, 4, 9, 11, 14, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 34, 44, 47], "up": [3, 17, 19, 20, 22, 23, 43], "configur": [3, 18, 19, 20, 22, 23, 26, 27, 28, 32, 37], "object": [3, 22, 33, 34, 36, 39, 45], "setup": [3, 4, 5, 19, 20, 22, 23, 27, 30, 42], "_sensor": 3, "create_inst": [3, 37], "user_callback": [3, 20], "_dashboard": 3, "loop": [3, 4, 5, 20, 42], "frame": [3, 19, 20, 22, 23, 39, 44], "int": [3, 4, 5, 11, 12, 14, 15, 17, 19, 20, 22, 25, 26, 27, 28, 30, 31, 34, 36, 39], "bool": [3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 18, 20, 23, 25, 27, 28, 30, 32, 34, 39, 42, 47], "current": [3, 6, 19, 20, 22, 30, 31, 32, 33, 34, 47], "number": [3, 11, 12, 14, 15, 17, 19, 20, 22, 25, 26, 27, 28, 31, 34, 36, 39, 47], "unus": 3, "here": [3, 8, 34], "return": [3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 18, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 45, 46, 48], "whether": [3, 9, 11, 12, 15, 17, 20, 23, 25, 27, 30, 37, 44, 47], "continu": 3, "true": [3, 4, 5, 8, 9, 12, 14, 15, 17, 20, 23, 25, 27, 28, 30, 32, 34, 37, 39, 41, 44], "__name__": [3, 4, 5], "__main__": [3, 4, 5], "time": [4, 5, 17, 20, 22, 23, 27, 28, 47], "datetim": [4, 5], "pathlib": [4, 5], "path": [4, 5, 6, 9, 23, 25, 27, 28, 31, 39, 43, 45], "stepper_motor": [4, 5, 16], "steppermotorsystem": [4, 5, 30, 33, 34], "stepper_control": [4, 5, 16, 29], "snakesteppercontrol": [4, 5, 31], "file_handl": [4, 5, 40], "pklhandler": [4, 5, 39], "uncom": [4, 5], "debug": [4, 5], "level": [4, 5, 41], "log": [4, 5, 17, 41], "now": [4, 5], "logdir": [4, 5], "strftime": [4, 5], "y": [4, 5, 20, 22, 28], "m": [4, 5, 38], "d": [4, 5], "h": [4, 5], "spad_nam": 4, "str": [4, 5, 9, 17, 18, 22, 27, 28, 30, 34, 36, 37, 39, 42, 45, 47], "vl53l8chsensor": [4, 28], "spad_port": 4, "stepper_system_nam": [4, 5], "singledrive1axisgantri": [4, 5, 34], "stepper_port": [4, 5], "controller_config": [4, 5], "dict": [4, 5, 9, 18, 25, 28, 30, 31, 33, 34, 42], "x": [4, 5, 28], "rang": [4, 5, 26, 28, 47], "16": [4, 5], "sampl": [4, 5, 11, 12, 14, 15, 25, 26, 27, 28], "dashboard_nam": 4, "pyqtgraphdashboard": [4, 20, 23], "output_pkl": [4, 5], "pkl": [4, 5, 13, 16, 24, 39], "mkdir": [4, 5], "parent": [4, 5, 17, 23], "exist_ok": [4, 5], "create_from_registri": [4, 5, 20, 45], "port": [4, 5, 17, 27, 28, 30, 34, 46], "is_okai": [4, 8, 9, 12, 14, 15, 18, 25, 27, 28, 30, 32, 34, 42], "fatal": 4, "fail": [4, 12], "initi": [4, 5, 8, 12, 15, 18, 23, 30, 34], "stepper_system": [4, 5, 16, 29, 30], "assert": [4, 5, 48], "f": [4, 5], "output": [4, 5, 22, 23, 27, 39, 41], "file": [4, 5, 14, 22, 23, 25, 39, 41, 44], "alreadi": [4, 5], "writer": [4, 5, 9, 39], "iter": [4, 5, 14, 25, 27, 31, 33], "kwarg": [4, 5, 17, 18, 28, 30, 32, 34, 36, 37, 41, 45, 46, 47, 48], "start": [4, 5, 17, 28, 32, 34, 39, 42], "histogram": [4, 19, 20, 22, 23, 25, 26, 27, 28], "accumul": [4, 11, 12, 14, 15, 17, 19, 20, 22, 25, 26, 27, 28], "po": [4, 5], "get_posit": [4, 5, 31], "fals": [4, 5, 8, 9, 12, 14, 15, 17, 25, 27, 28, 30, 32, 34, 39, 41, 42, 44], "move_to": [4, 5, 30, 32, 33, 34], "append": [4, 5, 36, 39, 41], "sleep": [4, 5], "25": [4, 5], "argpars": [4, 5], "parser": [4, 5], "argumentpars": [4, 5], "demo": [4, 5], "add_argu": [4, 5], "help": [4, 5], "requir": [4, 34, 36], "parse_arg": [4, 5], "gantry_port": 4, "system": [5, 26, 30, 33], "instal": 6, "can": [6, 8, 12, 17, 20, 26, 27, 32, 33, 34, 42, 45], "clone": 6, "chang": [6, 18, 28], "code": 6, "them": [6, 12, 15, 27, 30, 31, 32, 33, 34, 45, 47], "reinstal": 6, "don": [6, 32], "t": [6, 32, 41], "behavior": [6, 25, 32, 36], "subdirectori": 6, "directori": [6, 41], "separ": 6, "done": 6, "support": [6, 12, 18, 20, 27, 30, 31, 39, 45, 47, 48], "package_nam": 6, "In": 6, "module_nam": 6, "implement": [8, 12, 15, 17, 19, 20, 22, 23, 27, 32, 33, 48], "sourc": [8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48], "base": [8, 9, 11, 12, 14, 15, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 39, 41, 42, 43, 44, 45, 47, 48], "registri": [8, 18, 20, 31, 32, 37, 40], "abc": [8, 18, 20, 31, 32, 48], "abstract": [8, 11, 14, 15, 18, 20, 26, 31, 32, 34, 48], "properti": [8, 9, 11, 12, 14, 15, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 42], "okai": [8, 9, 42], "otherwis": [8, 9, 12, 14, 15, 17, 27, 28, 30, 32, 34, 41, 45], "either": [8, 17, 28], "been": [8, 27, 47], "properli": [8, 9, 12, 15, 18, 32, 33, 39, 42], "encount": 8, "result": [8, 9, 35], "subclass": [8, 18, 20, 31, 32, 45], "paramet": [8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 42, 44, 45, 46, 47, 48], "method": [8, 11, 12, 14, 15, 17, 20, 25, 26, 27, 31, 32, 33, 34, 35, 39, 45, 47], "specifi": [8, 9, 11, 12, 14, 17, 20, 25, 26, 30, 32, 33, 34, 36, 37, 39, 41], "close": [8, 9, 12, 14, 15, 18, 20, 25, 27, 28, 30, 32, 33, 34, 39, 42], "releas": [8, 9, 18, 32, 33, 42], "ani": [8, 9, 14, 17, 18, 20, 22, 28, 30, 32, 33, 36, 39, 42, 43, 47], "resourc": [8, 9, 14, 18, 32, 33, 42], "overrid": [8, 12], "own": [8, 12, 27, 33], "local": 9, "marker": 9, "arucolocalizationalgorithm": 9, "aruco_dict": 9, "marker_s": 9, "origin_id": 9, "num_sampl": [9, 11, 12, 14, 15, 25, 26, 27, 28], "marker_id": 9, "detect": [9, 32, 34], "comput": [9, 32], "pose": 9, "rel": [9, 30, 32, 34], "origin": 9, "check": [9, 12, 14, 15, 17, 18, 25, 27, 28, 30, 32, 34, 42, 43, 46], "save": [9, 22, 23, 44], "filenam": [9, 22, 41, 44], "return_imag": 9, "option": [9, 12, 20, 28, 30, 37, 39, 42, 47], "video": [9, 39], "dictionari": [9, 30, 31, 33, 34, 42, 45, 47], "associ": 9, "aruco": 10, "config": [11, 18, 19, 20, 22, 23, 26, 28, 40, 47], "extend": 11, "defin": [11, 18, 20, 25, 26, 27, 30, 32, 33, 37, 45, 47], "specif": [11, 12, 17, 27, 32, 34, 35, 39], "distortion_coeffici": [11, 12, 14, 15], "numpi": [11, 12, 14, 15], "ndarrai": [11, 12, 14, 15, 18, 19, 20, 22, 25, 27, 28, 39], "distort": [11, 12, 14, 15], "coeffici": [11, 12, 14, 15], "np": [11, 12, 14, 15, 18, 19, 20, 22, 25, 27, 28, 39], "arrai": [11, 12, 14, 27], "repres": [11, 12, 14, 26, 27, 28, 32, 33], "intrinsic_matrix": [11, 12, 14, 15], "intrins": [11, 12, 14, 15], "matrix": [11, 12, 14, 15], "3x3": [11, 12, 14, 27], "resolut": [11, 12, 14, 15, 25, 26, 27, 28], "tupl": [11, 12, 14, 15, 17, 25, 26, 27, 28], "width": [11, 12, 14, 15, 25, 26, 27], "height": [11, 12, 14, 15, 25, 26, 27], "averag": [11, 12, 25, 26, 27, 28], "keyword": [11, 12, 15, 17, 18, 19, 20, 22, 28, 30, 33, 34, 37, 39, 42, 45, 46, 48], "argument": [11, 12, 15, 17, 18, 19, 20, 22, 28, 30, 33, 34, 37, 39, 42, 45, 46, 48], "flircamera": 12, "wrapper": [12, 15, 17, 30, 33, 34, 35, 36], "around": [12, 15, 17, 30, 33, 34, 36], "captur": [12, 15, 27], "singleton": [12, 15, 40], "new": [12, 18, 20, 47], "grasshopperflircamera": 12, "special": 12, "grasshopp": 12, "model": 12, "inherit": [12, 14, 25, 26, 27, 28], "036": 12, "145": 12, "001": 12, "155": 12, "1815": 12, "5": 12, "1817": 12, "753": 12, "721": 12, "299": 12, "531": 12, "352": 12, "self": [12, 20, 39, 48], "spinnak": 12, "usual": [12, 34], "As": 12, "write": [12, 17, 39, 41], "2024": 12, "09": 12, "21": 12, "newer": 12, "version": 12, "step": [12, 23, 32, 34], "after": [12, 42], "re": 12, "tar": 12, "xvzf": 12, "spinnaker_python": 12, "cp": 12, "o": 12, "arch": 12, "gz": 12, "whl": 12, "But": 12, "replac": 12, "your": 12, "For": 12, "11": 12, "m2": 12, "mac": 12, "would": [12, 47], "turn": 12, "4": 12, "172": 12, "cp310": 12, "macosx_13_0_arm64": 12, "mv": 12, "cp311": 12, "And": 12, "_pyspin": 12, "cpython": 12, "310": 12, "darwin": 12, "311": 12, "offici": 12, "caus": 12, "issu": [12, 32, 34], "risk": 12, "camera_index": [12, 15], "thread": [12, 15, 17, 18, 20, 36], "store": [12, 15, 28, 39], "queue": [12, 15], "stream": [12, 15, 41], "avail": [12, 14, 17, 20, 28, 46], "stop": [12, 15, 17, 27, 28, 42], "deiniti": [12, 15], "flir": [13, 16], "realsens": [13, 16], "load": [14, 25, 31, 39, 45], "pre": [14, 25], "record": [14, 25, 39, 41], "pklcamera": 14, "pkl_path": [14, 25], "read": [14, 17, 39, 47], "pickl": [14, 39], "exhaust": [14, 25], "still": [14, 25], "activ": [14, 25, 27], "placehold": 14, "potenti": 14, "cleanup": [14, 42], "logic": [14, 47], "intel": 15, "devic": [15, 17, 30, 46], "realsensecamera": 15, "pyrealsens": 15, "d435i": 15, "color": [15, 27, 33], "depth": [15, 27], "return_depth": 15, "start_pipeline_onc": 15, "force_autoexposur": 15, "exposur": 15, "rgb": 15, "readi": [15, 18], "rais": [15, 17, 45], "notimplementederror": 15, "yet": 15, "return_rgb": 15, "tmf8828": [16, 24], "vl53l8ch": [16, 24], "kinesis_stepp": [16, 29], "telemetrix_stepp": [16, 29], "safe_seri": 16, "safeseri": 17, "safe": [17, 32, 33, 34, 36], "serial": [17, 28, 46], "commun": [17, 27, 28], "conveni": 17, "lock_typ": 17, "multiprocess": 17, "synchron": [17, 35, 36], "oper": [17, 18, 27, 28, 30, 32, 33, 34, 42], "lock": 17, "handl": [17, 18, 23, 28, 42], "format": [17, 41], "classmethod": [17, 45, 47, 48], "wait": [17, 18, 30, 32, 33, 34, 36], "reset": [17, 18, 27, 28], "establish": [17, 32, 34], "connect": [17, 25, 27, 28, 30, 32, 33, 34], "second": [17, 44], "2": [17, 27, 33, 35], "forc": 17, "found": [17, 45], "pass": [17, 34, 37, 45, 46], "constructor": [17, 37, 45, 48], "invalid": 17, "warn": 17, "size": [17, 20], "byte": [17, 28], "wait_for_start_talk": 17, "timeout": [17, 27], "until": [17, 18, 20, 32, 33, 34, 42], "talk": 17, "success": [17, 28], "float": [17, 20, 27, 30, 31, 32, 33, 34], "maximum": [17, 20, 30, 41, 47], "give": 17, "receiv": [17, 27, 28, 32, 34], "wait_for_stop_talk": 17, "write_and_wait_for_start_talk": 17, "tri": 17, "resend": 17, "attempt": [17, 34, 36], "perform": [17, 27, 43, 45], "write_and_wait_for_stop_talk": 17, "return_data": 17, "upon": 17, "statu": [17, 32], "write_and_wait_for_start_and_stop_talk": 17, "event": [17, 18, 23], "__getattr__": [17, 33, 34, 36], "forward": 17, "access": [17, 27, 30, 33, 34, 36, 39], "appli": 17, "prevent": 17, "concurr": 17, "valu": [17, 20, 26, 27, 28, 31, 32, 33, 34, 35, 36, 39, 47, 48], "sensorconfig": [18, 26, 28], "cchardwareconfig": [18, 20, 37, 47], "retriev": [18, 19, 20, 22, 23, 28, 36, 48], "given": [18, 28, 31, 45, 46], "via": [18, 28, 30], "sent": [18, 28], "kei": [18, 23, 28, 31, 34, 39, 47], "must": [18, 28, 32, 37, 42], "match": [18, 28], "field": [18, 28], "__del__": [18, 39], "destructor": 18, "sensordata": [18, 27, 28], "its": [18, 30, 31, 32, 33, 34, 45, 46], "state": [18, 27, 30, 32, 34], "row": [18, 27, 28], "get_data": [18, 27, 28], "sensordatathread": 18, "clear": [18, 27], "dashdashboardconfig": 19, "dashdashboard": [19, 20], "plotli": [19, 20], "web": [19, 20], "layout": [19, 22, 23], "figur": 19, "applic": [19, 23, 48], "execut": [19, 20, 22, 23, 32, 33], "n_interv": 19, "existing_fig": 19, "real": [20, 22, 23], "three": 20, "matplotlibdashboard": [20, 22], "matplotlib": [20, 21, 44], "pyqtgraph": [20, 21], "dash": [20, 21], "user": [20, 23], "variabl": [20, 25, 27, 28, 37, 47], "num_fram": 20, "000": 20, "min_bin": [20, 44], "minimum": [20, 47], "bin": [20, 25, 26, 27, 28], "max_bin": [20, 44], "autoscal": 20, "ylim": 20, "axi": [20, 22, 30, 31, 33, 34], "limit": [20, 22, 30, 32, 34], "channel_mask": 20, "channel": [20, 22, 27, 30], "callabl": [20, 39, 42], "accept": [20, 42], "independ": 20, "capabl": 20, "being": [20, 48], "non": 20, "matplotlibdashboardconfig": 22, "plot": [22, 23, 40], "adjust_ylim": 22, "adjust": 22, "save_anim": 22, "anim": [22, 44], "funcanim": 22, "pyqtgraphdashboardconfig": 23, "dashboardwindow": 23, "qt": 23, "qtwidget": 23, "qwidget": 23, "window": [23, 30], "panel": 23, "right": 23, "init_ui": 23, "keypressev": 23, "press": 23, "exit": 23, "fullscreen": [23, 44], "headless": 23, "pklspadsensor": 25, "fake": 25, "simul": 25, "common": [25, 27, 28, 32], "_pkl_path": 25, "_data": 25, "entri": 25, "_data_iter": 25, "over": [25, 27, 33], "_resolut": 25, "spatial": [25, 26], "num_bin": [25, 26, 27, 28], "request": [25, 27, 36, 45], "op": 25, "photon": 26, "avalanch": 26, "diod": 26, "design": 26, "measur": [26, 27], "collect": [26, 27, 33], "analyz": 26, "indic": [26, 27], "discret": 26, "total": [26, 31], "distanc": 26, "equal": 26, "multipli": 26, "where": [26, 36, 39, 45], "pixel": [26, 27, 28], "point": [26, 32, 34], "respect": 26, "dimens": 26, "sum": 26, "vari": 26, "8x8": [27, 28], "multi": [27, 30, 33, 36], "zone": 27, "flight": [27, 28], "am": 27, "wide": 27, "vcsel": 27, "map": [27, 45], "4x4": [27, 28], "3x6": 27, "multizon": 27, "tmf8828sensor": 27, "wa": [27, 47], "tmf882x": 27, "arduino": [27, 46], "shield": 27, "spadid": 27, "kwd": [27, 28, 33], "enum": [27, 28, 33, 47], "pair": [27, 33], "enumer": [27, 28, 31, 33, 45], "red": [27, 33], "blue": [27, 33], "green": [27, 33], "lookup": [27, 33], "know": [27, 33], "mani": [27, 33], "member": [27, 33], "thei": [27, 33], "len": [27, 33], "document": [27, 33, 51], "detail": [27, 33], "get_num_pixel": 27, "get_num_channel": 27, "get_active_channels_per_subcaptur": 27, "per": [27, 34, 44], "subcaptur": 27, "get_resolut": 27, "rangemod": 27, "tmf8828histogram": 27, "spad_id": 27, "has_data": [27, 28], "complet": [27, 30, 32, 33, 34], "temporari": 27, "intern": 27, "string": [27, 28, 36], "copi": [27, 28], "id15": 27, "range_mod": 27, "long": 27, "across": [27, 48], "enabl": [27, 34], "high": 27, "baudrat": [27, 28], "baud": [27, 28], "rate": [27, 28], "includ": [28, 32, 48], "framework": 28, "rangingmod": 28, "vl53l8chconfig": 28, "uint16_t": 28, "ranging_mod": 28, "ranging_frequency_hz": 28, "frequenc": 28, "hz": 28, "integration_time_m": 28, "integr": 28, "millisecond": 28, "cnh_start_bin": 28, "cnh": 28, "cnh_num_bin": 28, "cnh_subsampl": 28, "subsampl": 28, "agg_start_x": 28, "aggreg": 28, "coordin": 28, "agg_start_i": 28, "agg_merge_x": 28, "merg": 28, "agg_merge_i": 28, "agg_col": 28, "column": 28, "agg_row": 28, "pack": 28, "structur": 28, "vl53l8chsharedconfig": 28, "share": [28, 36, 48], "vl53l8chconfig4x4": 28, "vl53l8chconfig8x8": 28, "vl53l8chhistogram": 28, "num_pixel": 28, "expect": [28, 32], "acquisit": 28, "grid": 28, "individu": [28, 47], "steppermotor": [30, 32, 33, 34], "kinesi": 30, "kinesissteppermotor": 30, "thorlab": 30, "c": [30, 38], "api": [30, 51], "pylablib": 30, "throlab": 30, "kinesismotor": 30, "linux": 30, "is_rack_system": 30, "scale": 30, "movement": 30, "posit": [30, 31, 32, 33, 34, 37, 39, 45, 48], "part": 30, "rack": 30, "factor": 30, "absolut": [30, 32, 34], "healthi": [30, 32, 34], "lower_limit": 30, "lower": 30, "upper_limit": 30, "upper": 30, "max_veloc": 30, "acceler": 30, "clip_at_limit": 30, "initial_posit": 30, "reference_posit": 30, "check_hom": 30, "veloc": 30, "clip": 30, "move": [30, 31, 32, 33, 34], "dure": 30, "opposit": [30, 34], "successfulli": 30, "zero": [30, 32, 34], "move_bi": [30, 32, 33, 34], "relative_posit": [30, 32, 34], "amount": [30, 32, 34], "target": [30, 32, 33, 34], "wait_for_mov": [30, 32, 33, 34], "kinesisrotationstag": 30, "kinesissteppermotorsystem": 30, "ax": [30, 32, 33, 34], "whole": [30, 33], "steppermotorsystemaxi": [30, 33], "attach": [30, 32, 33, 34], "instanti": [30, 31, 37, 45], "azimuthelevationsystem": 30, "predefin": [30, 32, 34], "azimuth": 30, "elev": 30, "steppercontrol": 31, "factori": [31, 45, 47], "direct": [31, 34, 45], "lazi": [31, 45], "registr": [31, 45], "regist": [31, 45], "defer": [31, 45], "axis_config": 31, "empti": [31, 36], "exce": 31, "unifi": [32, 34], "compat": [32, 47], "unit": [32, 33], "could": [32, 34], "involv": [32, 34], "verifi": [32, 34], "power": [32, 33, 34], "shut": [32, 33, 34], "avoid": [32, 33], "damag": [32, 33], "memori": [32, 33, 39], "leak": [32, 33], "switch": [32, 34], "trigger": [32, 34], "known": [32, 34], "interpret": 32, "characterist": 32, "g": [32, 45], "angl": 32, "degre": 32, "other": 32, "reach": [32, 33], "motion": [32, 33], "dummysteppermotor": 32, "dummi": [32, 33], "doe": [32, 33, 43, 47], "noth": [32, 33], "rotat": 33, "stage": 33, "passthrough": [33, 34], "underli": [33, 34, 36], "dummysteppersystem": 33, "telemetrixsteppermotor": 34, "telemetrixsteppermotorsystem": 34, "telemetrix": 34, "cncshield": 34, "board": 34, "distance_pin": 34, "direction_pin": 34, "enable_pin": 34, "cm_per_rev": 34, "steps_per_rev": 34, "speed": [34, 38], "flip_direct": 34, "note": 34, "effect": 34, "set_current_posit": 34, "explicitli": 34, "pin": 34, "centimet": 34, "revolut": 34, "cm": 34, "set_target_position_cm": 34, "relative_cm": 34, "set_absolute_target_position_cm": 34, "position_cm": 34, "cm_to_rev": 34, "revs_to_cm": 34, "rev": 34, "stepper_": 34, "motorx": 34, "target_posit": 34, "equat": 34, "_board": 34, "stepper_target_posit": 34, "input": [34, 39], "ll": 34, "auto": 34, "telemetrixsteppermotorx": 34, "telemetrixsteppermotori": 34, "telemetrixsteppermotorz": 34, "telemetrixsteppermotorxrevers": 34, "telemetrixsteppermotoryrevers": 34, "telemetrixsteppermotorzrevers": 34, "dualdrive2axisgantry_x": 34, "dualdrive2axisgantry_y1": 34, "dualdrive2axisgantry_y2": 34, "dualdrive2axisgantri": 34, "singledrive1axisgantry_x": 34, "singledrive1axisgantry_i": 34, "asynchron": 35, "call_async": 35, "fn": 35, "wrap": [35, 36], "call_async_gath": 35, "call_async_valu": 35, "idx": 35, "dequ": 36, "item": 36, "blockingdequ": 36, "condit": 36, "suitabl": 36, "notifi": 36, "manner": 36, "__getitem__": 36, "__len__": [36, 39], "__repr__": 36, "represent": 36, "compon": [37, 42], "hydra_config": 37, "hydracontainerconfig": 37, "fulli": 37, "qualifi": 37, "get_inst": 37, "auto_cr": 37, "first": [37, 39], "300000000": 38, "light": 38, "overwrit": 39, "update_index_kwarg": 39, "random": 39, "entir": 39, "handler": [39, 41], "another_kei": 39, "another_valu": 39, "print": 39, "update_index": 39, "prune_fn": 39, "lambda": 39, "_": 39, "build": 39, "scan": 39, "_index": 39, "filter": [39, 41], "take": 39, "exclud": 39, "load_al": 39, "extract": 39, "videowrit": 39, "fp": [39, 44], "flush_interv": 39, "buffer": 39, "period": 39, "flush": 39, "mp4": 39, "30": 39, "remain": 39, "delet": 39, "asyncio_util": 40, "blocking_dequ": 40, "constant": 40, "misc": 40, "serial_util": 40, "transform": 40, "tqdm": 41, "messag": 41, "consol": 41, "filehandl": 41, "doesn": 41, "tqdmstreamhandl": 41, "streamhandl": 41, "emit": 41, "formatt": 41, "trail": 41, "newlin": 41, "except": 41, "inform": 41, "present": 41, "traceback": [41, 42], "print_except": 41, "encod": 41, "determin": 41, "loggermaxlevelfilt": 41, "max_level": 41, "deem": 41, "appropri": 41, "modifi": [41, 47], "place": 41, "context": 42, "100": 42, "protocol": 42, "essenti": 42, "just": 42, "begin": 42, "__enter__": 42, "__exit__": 42, "exc_typ": 42, "exc_valu": 42, "miscellan": 43, "get_object": 43, "look": 43, "entiti": 43, "dotpath": 43, "lift": 43, "hydra": 43, "set_matplotlib_styl": 44, "use_scienceplot": 44, "transient_gui": 44, "normalize_per_pixel": 44, "gui": 44, "transient": 44, "decor": 45, "class_typ": 45, "class_nam": 45, "module_path": 45, "lazili": 45, "itself": 45, "my_modul": 45, "my_submodul": 45, "full": 45, "final": 45, "valueerror": 45, "recurs": 45, "approach": 45, "ancestor": 45, "find_device_by_label": 46, "label": 46, "find": 46, "volum": 46, "search": 46, "find_port": 46, "cl": 46, "arduino_upload": 46, "upload": 46, "sketch": 46, "overridden": 47, "ui": 47, "dirti": 47, "last": 47, "ideal": 47, "omegaconf": 47, "731": 47, "default_factori": 47, "sensorset": 47, "dataclass": 47, "rangeset": 47, "valid": 47, "min": 47, "max": 47, "optionset": 47, "from_enum": 47, "helper": 47, "metaclass": 48, "pattern": 48, "combin": 48, "singleton_meta": 48, "singletonabcmeta": 48, "mysingleton": 48, "instance1": 48, "instance2": 48, "singletonmeta": 48, "__call__": 48, "abcmeta": 48, "enforc": 48, "while": 48, "3d": 49, "space": 49, "line": 50}, "objects": {"": [[10, 0, 0, "-", "algos"], [16, 0, 0, "-", "drivers"], [40, 0, 0, "-", "utils"]], "algos": [[8, 0, 0, "-", "algorithm"], [9, 0, 0, "-", "aruco"]], "algos.algorithm": [[8, 1, 1, "", "Algorithm"]], "algos.algorithm.Algorithm": [[8, 2, 1, "", "close"], [8, 3, 1, "", "is_okay"], [8, 2, 1, "", "run"]], "algos.aruco": [[9, 1, 1, "", "ArucoLocalizationAlgorithm"]], "algos.aruco.ArucoLocalizationAlgorithm": [[9, 2, 1, "", "close"], [9, 3, 1, "", "is_okay"], [9, 2, 1, "", "run"]], "cc_hardware": [[50, 0, 0, "-", "tools"]], "drivers": [[13, 0, 0, "-", "cameras"], [17, 0, 0, "-", "safe_serial"], [18, 0, 0, "-", "sensor"], [24, 0, 0, "-", "spads"], [29, 0, 0, "-", "stepper_motors"]], "drivers.cameras": [[11, 0, 0, "-", "camera"], [12, 0, 0, "-", "flir"], [14, 0, 0, "-", "pkl"], [15, 0, 0, "-", "realsense"]], "drivers.cameras.camera": [[11, 1, 1, "", "Camera"]], "drivers.cameras.camera.Camera": [[11, 2, 1, "", "accumulate"], [11, 3, 1, "", "distortion_coefficients"], [11, 3, 1, "", "intrinsic_matrix"], [11, 3, 1, "", "resolution"]], "drivers.cameras.flir": [[12, 1, 1, "", "FlirCamera"], [12, 1, 1, "", "GrasshopperFlirCamera"]], "drivers.cameras.flir.FlirCamera": [[12, 2, 1, "", "accumulate"], [12, 2, 1, "", "close"], [12, 3, 1, "", "is_okay"], [12, 3, 1, "", "resolution"]], "drivers.cameras.flir.GrasshopperFlirCamera": [[12, 3, 1, "", "distortion_coefficients"], [12, 3, 1, "", "intrinsic_matrix"]], "drivers.cameras.pkl": [[14, 1, 1, "", "PklCamera"]], "drivers.cameras.pkl.PklCamera": [[14, 2, 1, "", "accumulate"], [14, 2, 1, "", "close"], [14, 3, 1, "", "distortion_coefficients"], [14, 3, 1, "", "intrinsic_matrix"], [14, 3, 1, "", "is_okay"], [14, 3, 1, "", "resolution"]], "drivers.cameras.realsense": [[15, 1, 1, "", "RealsenseCamera"]], "drivers.cameras.realsense.RealsenseCamera": [[15, 2, 1, "", "accumulate"], [15, 2, 1, "", "close"], [15, 3, 1, "", "distortion_coefficients"], [15, 3, 1, "", "intrinsic_matrix"], [15, 3, 1, "", "is_okay"], [15, 3, 1, "", "resolution"]], "drivers.safe_serial": [[17, 1, 1, "", "SafeSerial"]], "drivers.safe_serial.SafeSerial": [[17, 2, 1, "", "__getattr__"], [17, 2, 1, "", "create"], [17, 2, 1, "", "read"], [17, 2, 1, "", "wait_for_start_talk"], [17, 2, 1, "", "wait_for_stop_talk"], [17, 2, 1, "", "write"], [17, 2, 1, "", "write_and_wait_for_start_and_stop_talk"], [17, 2, 1, "", "write_and_wait_for_start_talk"], [17, 2, 1, "", "write_and_wait_for_stop_talk"]], "drivers.sensor": [[18, 1, 1, "", "Sensor"], [18, 1, 1, "", "SensorConfig"], [18, 1, 1, "", "SensorData"], [18, 1, 1, "", "SensorDataThreaded"]], "drivers.sensor.Sensor": [[18, 2, 1, "", "__del__"], [18, 2, 1, "", "calibrate"], [18, 2, 1, "", "close"], [18, 3, 1, "", "config"], [18, 3, 1, "", "is_okay"], [18, 3, 1, "", "settings"], [18, 2, 1, "", "update"]], "drivers.sensor.SensorConfig": [[18, 3, 1, "", "settings"]], "drivers.sensor.SensorData": [[18, 2, 1, "", "get_data"], [18, 2, 1, "", "process"], [18, 2, 1, "", "reset"]], "drivers.sensor.SensorDataThreaded": [[18, 2, 1, "", "get_data"], [18, 2, 1, "", "reset"]], "drivers.spads": [[21, 0, 0, "-", "dashboards"], [25, 0, 0, "-", "pkl"], [26, 0, 0, "-", "spad"], [27, 0, 0, "-", "tmf8828"], [28, 0, 0, "-", "vl53l8ch"]], "drivers.spads.dashboards": [[19, 0, 0, "-", "dash"], [20, 0, 0, "-", "dashboard"], [22, 0, 0, "-", "matplotlib"], [23, 0, 0, "-", "pyqtgraph"]], "drivers.spads.dashboards.dash": [[19, 1, 1, "", "DashDashboard"], [19, 1, 1, "", "DashDashboardConfig"]], "drivers.spads.dashboards.dash.DashDashboard": [[19, 3, 1, "", "config"], [19, 2, 1, "", "run"], [19, 2, 1, "", "setup"], [19, 2, 1, "", "update"]], "drivers.spads.dashboards.dashboard": [[20, 1, 1, "", "SPADDashboard"], [20, 1, 1, "", "SPADDashboardConfig"]], "drivers.spads.dashboards.dashboard.SPADDashboard": [[20, 3, 1, "", "config"], [20, 3, 1, "", "max_bin"], [20, 3, 1, "", "min_bin"], [20, 2, 1, "", "run"], [20, 3, 1, "", "sensor"], [20, 2, 1, "", "setup"], [20, 2, 1, "", "update"]], "drivers.spads.dashboards.matplotlib": [[22, 1, 1, "", "MatplotlibDashboard"], [22, 1, 1, "", "MatplotlibDashboardConfig"]], "drivers.spads.dashboards.matplotlib.MatplotlibDashboard": [[22, 2, 1, "", "adjust_ylim"], [22, 3, 1, "", "config"], [22, 2, 1, "", "run"], [22, 2, 1, "", "save_animation"], [22, 2, 1, "", "setup"], [22, 2, 1, "", "update"]], "drivers.spads.dashboards.pyqtgraph": [[23, 1, 1, "", "DashboardWindow"], [23, 1, 1, "", "PyQtGraphDashboard"], [23, 1, 1, "", "PyQtGraphDashboardConfig"]], "drivers.spads.dashboards.pyqtgraph.DashboardWindow": [[23, 2, 1, "", "init_ui"], [23, 2, 1, "", "keyPressEvent"]], "drivers.spads.dashboards.pyqtgraph.PyQtGraphDashboard": [[23, 3, 1, "", "config"], [23, 2, 1, "", "run"], [23, 2, 1, "", "setup"], [23, 2, 1, "", "update"]], "drivers.spads.pkl": [[25, 1, 1, "", "PklSPADSensor"]], "drivers.spads.pkl.PklSPADSensor": [[25, 2, 1, "", "accumulate"], [25, 2, 1, "", "close"], [25, 3, 1, "", "is_okay"], [25, 3, 1, "", "num_bins"], [25, 3, 1, "", "resolution"]], "drivers.spads.spad": [[26, 1, 1, "", "SPADSensor"], [26, 1, 1, "", "SPADSensorConfig"]], "drivers.spads.spad.SPADSensor": [[26, 2, 1, "", "accumulate"], [26, 3, 1, "", "num_bins"], [26, 3, 1, "", "resolution"]], "drivers.spads.tmf8828": [[27, 1, 1, "", "RangeMode"], [27, 1, 1, "", "SPADID"], [27, 1, 1, "", "TMF8828Histogram"], [27, 1, 1, "", "TMF8828Sensor"]], "drivers.spads.tmf8828.SPADID": [[27, 2, 1, "", "get_active_channels_per_subcapture"], [27, 2, 1, "", "get_num_channels"], [27, 2, 1, "", "get_num_pixels"], [27, 2, 1, "", "get_resolution"]], "drivers.spads.tmf8828.TMF8828Histogram": [[27, 2, 1, "", "get_data"], [27, 3, 1, "", "has_data"], [27, 2, 1, "", "process"], [27, 2, 1, "", "reset"]], "drivers.spads.tmf8828.TMF8828Sensor": [[27, 2, 1, "", "accumulate"], [27, 2, 1, "", "calibrate"], [27, 2, 1, "", "close"], [27, 3, 1, "", "is_okay"], [27, 3, 1, "", "num_bins"], [27, 3, 1, "", "resolution"]], "drivers.spads.vl53l8ch": [[28, 1, 1, "", "RangingMode"], [28, 1, 1, "", "VL53L8CHConfig"], [28, 1, 1, "", "VL53L8CHConfig4x4"], [28, 1, 1, "", "VL53L8CHConfig8x8"], [28, 1, 1, "", "VL53L8CHHistogram"], [28, 1, 1, "", "VL53L8CHSensor"], [28, 1, 1, "", "VL53L8CHSharedConfig"]], "drivers.spads.vl53l8ch.VL53L8CHConfig": [[28, 2, 1, "", "pack"], [28, 3, 1, "", "settings"]], "drivers.spads.vl53l8ch.VL53L8CHHistogram": [[28, 2, 1, "", "get_data"], [28, 3, 1, "", "has_data"], [28, 2, 1, "", "process"], [28, 2, 1, "", "reset"]], "drivers.spads.vl53l8ch.VL53L8CHSensor": [[28, 2, 1, "", "accumulate"], [28, 2, 1, "", "close"], [28, 3, 1, "", "config"], [28, 3, 1, "", "is_okay"], [28, 3, 1, "", "num_bins"], [28, 3, 1, "", "resolution"], [28, 2, 1, "", "update"]], "drivers.stepper_motors": [[30, 0, 0, "-", "kinesis_stepper"], [31, 0, 0, "-", "stepper_controller"], [32, 0, 0, "-", "stepper_motor"], [33, 0, 0, "-", "stepper_system"], [34, 0, 0, "-", "telemetrix_stepper"]], "drivers.stepper_motors.kinesis_stepper": [[30, 1, 1, "", "AzimuthElevationSystem"], [30, 1, 1, "", "KinesisRotationStage"], [30, 1, 1, "", "KinesisStepperMotor"], [30, 1, 1, "", "KinesisStepperMotorSystem"]], "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage": [[30, 2, 1, "", "initialize"]], "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor": [[30, 2, 1, "", "close"], [30, 2, 1, "", "home"], [30, 2, 1, "", "initialize"], [30, 3, 1, "", "is_okay"], [30, 3, 1, "", "lower_limit"], [30, 2, 1, "", "move_by"], [30, 2, 1, "", "move_to"], [30, 3, 1, "", "position"], [30, 3, 1, "", "upper_limit"], [30, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_controller": [[31, 1, 1, "", "SnakeStepperController"], [31, 1, 1, "", "StepperController"]], "drivers.stepper_motors.stepper_controller.SnakeStepperController": [[31, 2, 1, "", "get_position"]], "drivers.stepper_motors.stepper_controller.StepperController": [[31, 2, 1, "", "get_position"]], "drivers.stepper_motors.stepper_motor": [[32, 1, 1, "", "DummyStepperMotor"], [32, 1, 1, "", "StepperMotor"]], "drivers.stepper_motors.stepper_motor.StepperMotor": [[32, 2, 1, "", "close"], [32, 2, 1, "", "home"], [32, 3, 1, "", "is_okay"], [32, 2, 1, "", "move_by"], [32, 2, 1, "", "move_to"], [32, 3, 1, "", "position"], [32, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_system": [[33, 1, 1, "", "DummyStepperSystem"], [33, 1, 1, "", "StepperMotorSystem"], [33, 1, 1, "", "StepperMotorSystemAxis"]], "drivers.stepper_motors.stepper_system.DummyStepperSystem": [[33, 2, 1, "", "close"], [33, 2, 1, "", "move_by"], [33, 2, 1, "", "move_to"], [33, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_system.StepperMotorSystem": [[33, 2, 1, "", "__getattr__"], [33, 2, 1, "", "close"], [33, 2, 1, "", "move_by"], [33, 2, 1, "", "move_to"], [33, 3, 1, "", "position"], [33, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.telemetrix_stepper": [[34, 1, 1, "", "DualDrive2AxisGantry"], [34, 1, 1, "", "DualDrive2AxisGantry_X"], [34, 1, 1, "", "DualDrive2AxisGantry_Y1"], [34, 1, 1, "", "DualDrive2AxisGantry_Y2"], [34, 1, 1, "", "SingleDrive1AxisGantry"], [34, 1, 1, "", "SingleDrive1AxisGantry_X"], [34, 1, 1, "", "SingleDrive1AxisGantry_Y"], [34, 1, 1, "", "TelemetrixStepperMotor"], [34, 1, 1, "", "TelemetrixStepperMotorSystem"], [34, 1, 1, "", "TelemetrixStepperMotorX"], [34, 1, 1, "", "TelemetrixStepperMotorXReversed"], [34, 1, 1, "", "TelemetrixStepperMotorY"], [34, 1, 1, "", "TelemetrixStepperMotorYReversed"], [34, 1, 1, "", "TelemetrixStepperMotorZ"], [34, 1, 1, "", "TelemetrixStepperMotorZReversed"]], "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor": [[34, 2, 1, "", "__getattr__"], [34, 2, 1, "", "close"], [34, 2, 1, "", "cm_to_revs"], [34, 2, 1, "", "home"], [34, 3, 1, "", "id"], [34, 3, 1, "", "is_okay"], [34, 2, 1, "", "move_by"], [34, 2, 1, "", "move_to"], [34, 3, 1, "", "position"], [34, 2, 1, "", "revs_to_cm"], [34, 2, 1, "", "set_absolute_target_position_cm"], [34, 2, 1, "", "set_target_position_cm"], [34, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem": [[34, 2, 1, "", "close"], [34, 2, 1, "", "home"], [34, 3, 1, "", "is_okay"]], "utils": [[35, 0, 0, "-", "asyncio_utils"], [36, 0, 0, "-", "blocking_deque"], [37, 0, 0, "-", "config"], [38, 0, 0, "-", "constants"], [39, 0, 0, "-", "file_handlers"], [41, 0, 0, "-", "logger"], [42, 0, 0, "-", "manager"], [43, 0, 0, "-", "misc"], [44, 0, 0, "-", "plotting"], [45, 0, 0, "-", "registry"], [46, 0, 0, "-", "serial_utils"], [47, 0, 0, "-", "setting"], [48, 0, 0, "-", "singleton"], [49, 0, 0, "-", "transformations"]], "utils.asyncio_utils": [[35, 4, 1, "", "call_async"], [35, 4, 1, "", "call_async_gather"], [35, 4, 1, "", "call_async_value"]], "utils.blocking_deque": [[36, 1, 1, "", "BlockingDeque"]], "utils.blocking_deque.BlockingDeque": [[36, 2, 1, "", "__getattr__"], [36, 2, 1, "", "__getitem__"], [36, 2, 1, "", "__len__"], [36, 2, 1, "", "__repr__"], [36, 2, 1, "", "append"]], "utils.config": [[37, 1, 1, "", "CCHardwareConfig"]], "utils.config.CCHardwareConfig": [[37, 2, 1, "", "create_instance"], [37, 2, 1, "", "get_instance"]], "utils.constants": [[38, 5, 1, "", "C"]], "utils.file_handlers": [[39, 1, 1, "", "PklHandler"], [39, 1, 1, "", "VideoWriter"]], "utils.file_handlers.PklHandler": [[39, 2, 1, "", "__len__"], [39, 2, 1, "", "append"], [39, 2, 1, "", "load"], [39, 2, 1, "", "load_all"], [39, 2, 1, "", "update_index"], [39, 2, 1, "", "write"]], "utils.file_handlers.VideoWriter": [[39, 2, 1, "", "__del__"], [39, 2, 1, "", "append"], [39, 2, 1, "", "close"]], "utils.logger": [[41, 1, 1, "", "FileHandler"], [41, 1, 1, "", "LoggerMaxLevelFilter"], [41, 1, 1, "", "TqdmStreamHandler"]], "utils.logger.LoggerMaxLevelFilter": [[41, 2, 1, "", "filter"]], "utils.logger.TqdmStreamHandler": [[41, 2, 1, "", "emit"]], "utils.manager": [[42, 1, 1, "", "Component"], [42, 1, 1, "", "Manager"]], "utils.manager.Component": [[42, 2, 1, "", "close"], [42, 3, 1, "", "is_okay"]], "utils.manager.Manager": [[42, 2, 1, "", "__enter__"], [42, 2, 1, "", "__exit__"], [42, 2, 1, "", "add"], [42, 2, 1, "", "close"], [42, 3, 1, "", "components"], [42, 3, 1, "", "is_okay"], [42, 2, 1, "", "run"]], "utils.misc": [[43, 4, 1, "", "get_object"]], "utils.plotting": [[44, 4, 1, "", "set_matplotlib_style"], [44, 4, 1, "", "transient_gui"]], "utils.registry": [[45, 1, 1, "", "Registry"], [45, 4, 1, "", "register"]], "utils.registry.Registry": [[45, 2, 1, "", "create_from_registry"], [45, 2, 1, "", "register"], [45, 2, 1, "", "registered"], [45, 2, 1, "", "registry"]], "utils.serial_utils": [[46, 4, 1, "", "arduino_upload"], [46, 4, 1, "", "find_device_by_label"], [46, 4, 1, "", "find_ports"]], "utils.setting": [[47, 1, 1, "", "OptionSetting"], [47, 1, 1, "", "RangeSetting"], [47, 1, 1, "", "Setting"]], "utils.setting.OptionSetting": [[47, 2, 1, "", "from_enum"], [47, 2, 1, "", "update"]], "utils.setting.RangeSetting": [[47, 2, 1, "", "update"]], "utils.setting.Setting": [[47, 2, 1, "", "default_factory"]], "utils.singleton": [[48, 1, 1, "", "SingletonABCMeta"], [48, 1, 1, "", "SingletonMeta"]], "utils.singleton.SingletonMeta": [[48, 2, 1, "", "__call__"], [48, 2, 1, "", "instance"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"contribut": 1, "setup": 1, "clone": 1, "repo": [1, 6], "instal": [1, 12], "deploi": 1, "your": 1, "chang": 1, "guidelin": 1, "file": 1, "structur": [1, 6], "edit": 1, "sourc": 1, "code": 1, "comment": 1, "document": [1, 50], "build": 1, "exampl": 2, "avail": 2, "spad": [3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "dashboard": [3, 19, 20, 21, 22, 23], "stepper": [4, 5], "gantri": 4, "collab": 4, "motor": 5, "control": 5, "camera": [6, 11, 12, 13, 14, 15], "cultur": 6, "hardwar": 6, "get": 6, "start": 6, "packag": [6, 7], "api": 7, "refer": [7, 51], "algo": [8, 9, 10], "algorithm": 8, "modul": [8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48], "content": [8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48], "class": [8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 45, 47, 48], "aruco": 9, "submodul": [10, 13, 16, 21, 24, 29, 40], "driver": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "flir": 12, "pyspin": 12, "pkl": [14, 25], "realsens": 15, "subpackag": 16, "safe_seri": 17, "sensor": 18, "dash": 19, "matplotlib": 22, "pyqtgraph": 23, "tmf8828": 27, "vl53l8ch": 28, "stepper_motor": [29, 30, 31, 32, 33, 34], "kinesis_stepp": 30, "stepper_control": 31, "stepper_system": 33, "telemetrix_stepp": 34, "util": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "asyncio_util": 35, "function": [35, 43, 44, 45, 46], "blocking_dequ": 36, "config": 37, "constant": 38, "file_handl": 39, "logger": 41, "manag": 42, "misc": 43, "plot": 44, "registri": 45, "serial_util": 46, "set": 47, "singleton": 48, "transform": 49, "cli": 50}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributing": [[1, "contributing"]], "Setup": [[1, "setup"]], "Cloning the Repo": [[1, "cloning-the-repo"]], "Installing": [[1, "installing"]], "Deploy your Changes": [[1, "deploy-your-changes"]], "Guidelines": [[1, "guidelines"]], "File Structure": [[1, "file-structure"]], "Editing the Source Code": [[1, "editing-the-source-code"]], "Commenting": [[1, "commenting"]], "Editing the Documentation": [[1, "editing-the-documentation"]], "Building the Documentation": [[1, "building-the-documentation"]], "Examples": [[2, "examples"]], "Available Examples": [[2, "available-examples"]], "SPAD Dashboard": [[3, "spad-dashboard"]], "Stepper Gantry Collab": [[4, "stepper-gantry-collab"]], "Stepper Motor Controller": [[5, "stepper-motor-controller"]], "Camera Culture Hardware Repo": [[6, "camera-culture-hardware-repo"]], "Getting Started": [[6, "getting-started"]], "Repo Structure": [[6, "repo-structure"]], "Package Structure": [[6, "package-structure"]], "API Reference": [[7, "api-reference"]], "Packages": [[7, "packages"]], "algos.algorithm": [[8, "module-algos.algorithm"]], "Module Contents": [[8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"]], "Classes": [[8, "classes"], [9, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [39, "classes"], [41, "classes"], [42, "classes"], [45, "classes"], [47, "classes"], [48, "classes"]], "algos.aruco": [[9, "module-algos.aruco"]], "algos": [[10, "module-algos"]], "Submodules": [[10, "submodules"], [13, "submodules"], [16, "submodules"], [21, "submodules"], [24, "submodules"], [29, "submodules"], [40, "submodules"]], "drivers.cameras.camera": [[11, "module-drivers.cameras.camera"]], "drivers.cameras.flir": [[12, "module-drivers.cameras.flir"]], "PySpin Installation": [[12, "pyspin-installation"]], "drivers.cameras": [[13, "module-drivers.cameras"]], "drivers.cameras.pkl": [[14, "module-drivers.cameras.pkl"]], "drivers.cameras.realsense": [[15, "module-drivers.cameras.realsense"]], "drivers": [[16, "module-drivers"]], "Subpackages": [[16, "subpackages"]], "drivers.safe_serial": [[17, "module-drivers.safe_serial"]], "drivers.sensor": [[18, "module-drivers.sensor"]], "drivers.spads.dashboards.dash": [[19, "module-drivers.spads.dashboards.dash"]], "drivers.spads.dashboards.dashboard": [[20, "module-drivers.spads.dashboards.dashboard"]], "drivers.spads.dashboards": [[21, "module-drivers.spads.dashboards"]], "drivers.spads.dashboards.matplotlib": [[22, "module-drivers.spads.dashboards.matplotlib"]], "drivers.spads.dashboards.pyqtgraph": [[23, "module-drivers.spads.dashboards.pyqtgraph"]], "drivers.spads": [[24, "module-drivers.spads"]], "drivers.spads.pkl": [[25, "module-drivers.spads.pkl"]], "drivers.spads.spad": [[26, "module-drivers.spads.spad"]], "drivers.spads.tmf8828": [[27, "module-drivers.spads.tmf8828"]], "drivers.spads.vl53l8ch": [[28, "module-drivers.spads.vl53l8ch"]], "drivers.stepper_motors": [[29, "module-drivers.stepper_motors"]], "drivers.stepper_motors.kinesis_stepper": [[30, "module-drivers.stepper_motors.kinesis_stepper"]], "drivers.stepper_motors.stepper_controller": [[31, "module-drivers.stepper_motors.stepper_controller"]], "drivers.stepper_motors.stepper_motor": [[32, "module-drivers.stepper_motors.stepper_motor"]], "drivers.stepper_motors.stepper_system": [[33, "module-drivers.stepper_motors.stepper_system"]], "drivers.stepper_motors.telemetrix_stepper": [[34, "module-drivers.stepper_motors.telemetrix_stepper"]], "utils.asyncio_utils": [[35, "module-utils.asyncio_utils"]], "Functions": [[35, "functions"], [43, "functions"], [44, "functions"], [45, "functions"], [46, "functions"]], "utils.blocking_deque": [[36, "module-utils.blocking_deque"]], "utils.config": [[37, "module-utils.config"]], "utils.constants": [[38, "module-utils.constants"]], "utils.file_handlers": [[39, "module-utils.file_handlers"]], "utils": [[40, "module-utils"]], "utils.logger": [[41, "module-utils.logger"]], "utils.manager": [[42, "module-utils.manager"]], "utils.misc": [[43, "module-utils.misc"]], "utils.plotting": [[44, "module-utils.plotting"]], "utils.registry": [[45, "module-utils.registry"]], "utils.serial_utils": [[46, "module-utils.serial_utils"]], "utils.setting": [[47, "module-utils.setting"]], "utils.singleton": [[48, "module-utils.singleton"]], "utils.transformations": [[49, "module-utils.transformations"]], "CLI Documentation": [[50, "module-cc_hardware.tools"]], "Reference": [[51, "reference"]]}, "indexentries": {"algorithm (class in algos.algorithm)": [[8, "algos.algorithm.Algorithm"]], "algos.algorithm": [[8, "module-algos.algorithm"]], "close() (algorithm method)": [[8, "algos.algorithm.Algorithm.close"]], "is_okay (algorithm property)": [[8, "algos.algorithm.Algorithm.is_okay"]], "module": [[8, "module-algos.algorithm"], [9, "module-algos.aruco"], [10, "module-algos"], [11, "module-drivers.cameras.camera"], [12, "module-drivers.cameras.flir"], [13, "module-drivers.cameras"], [14, "module-drivers.cameras.pkl"], [15, "module-drivers.cameras.realsense"], [16, "module-drivers"], [17, "module-drivers.safe_serial"], [18, "module-drivers.sensor"], [19, "module-drivers.spads.dashboards.dash"], [20, "module-drivers.spads.dashboards.dashboard"], [21, "module-drivers.spads.dashboards"], [22, "module-drivers.spads.dashboards.matplotlib"], [23, "module-drivers.spads.dashboards.pyqtgraph"], [24, "module-drivers.spads"], [25, "module-drivers.spads.pkl"], [26, "module-drivers.spads.spad"], [27, "module-drivers.spads.tmf8828"], [28, "module-drivers.spads.vl53l8ch"], [29, "module-drivers.stepper_motors"], [30, "module-drivers.stepper_motors.kinesis_stepper"], [31, "module-drivers.stepper_motors.stepper_controller"], [32, "module-drivers.stepper_motors.stepper_motor"], [33, "module-drivers.stepper_motors.stepper_system"], [34, "module-drivers.stepper_motors.telemetrix_stepper"], [35, "module-utils.asyncio_utils"], [36, "module-utils.blocking_deque"], [37, "module-utils.config"], [38, "module-utils.constants"], [39, "module-utils.file_handlers"], [40, "module-utils"], [41, "module-utils.logger"], [42, "module-utils.manager"], [43, "module-utils.misc"], [44, "module-utils.plotting"], [45, "module-utils.registry"], [46, "module-utils.serial_utils"], [47, "module-utils.setting"], [48, "module-utils.singleton"], [49, "module-utils.transformations"], [50, "module-cc_hardware.tools"]], "run() (algorithm method)": [[8, "algos.algorithm.Algorithm.run"]], "arucolocalizationalgorithm (class in algos.aruco)": [[9, "algos.aruco.ArucoLocalizationAlgorithm"]], "algos.aruco": [[9, "module-algos.aruco"]], "close() (arucolocalizationalgorithm method)": [[9, "algos.aruco.ArucoLocalizationAlgorithm.close"]], "is_okay (arucolocalizationalgorithm property)": [[9, "algos.aruco.ArucoLocalizationAlgorithm.is_okay"]], "run() (arucolocalizationalgorithm method)": [[9, "algos.aruco.ArucoLocalizationAlgorithm.run"]], "algos": [[10, "module-algos"]], "camera (class in drivers.cameras.camera)": [[11, "drivers.cameras.camera.Camera"]], "accumulate() (camera method)": [[11, "drivers.cameras.camera.Camera.accumulate"]], "distortion_coefficients (camera property)": [[11, "drivers.cameras.camera.Camera.distortion_coefficients"]], "drivers.cameras.camera": [[11, "module-drivers.cameras.camera"]], "intrinsic_matrix (camera property)": [[11, "drivers.cameras.camera.Camera.intrinsic_matrix"]], "resolution (camera property)": [[11, "drivers.cameras.camera.Camera.resolution"]], "flircamera (class in drivers.cameras.flir)": [[12, "drivers.cameras.flir.FlirCamera"]], "grasshopperflircamera (class in drivers.cameras.flir)": [[12, "drivers.cameras.flir.GrasshopperFlirCamera"]], "accumulate() (flircamera method)": [[12, "drivers.cameras.flir.FlirCamera.accumulate"]], "close() (flircamera method)": [[12, "drivers.cameras.flir.FlirCamera.close"]], "distortion_coefficients (grasshopperflircamera property)": [[12, "drivers.cameras.flir.GrasshopperFlirCamera.distortion_coefficients"]], "drivers.cameras.flir": [[12, "module-drivers.cameras.flir"]], "intrinsic_matrix (grasshopperflircamera property)": [[12, "drivers.cameras.flir.GrasshopperFlirCamera.intrinsic_matrix"]], "is_okay (flircamera property)": [[12, "drivers.cameras.flir.FlirCamera.is_okay"]], "resolution (flircamera property)": [[12, "drivers.cameras.flir.FlirCamera.resolution"]], "drivers.cameras": [[13, "module-drivers.cameras"]], "pklcamera (class in drivers.cameras.pkl)": [[14, "drivers.cameras.pkl.PklCamera"]], "accumulate() (pklcamera method)": [[14, "drivers.cameras.pkl.PklCamera.accumulate"]], "close() (pklcamera method)": [[14, "drivers.cameras.pkl.PklCamera.close"]], "distortion_coefficients (pklcamera property)": [[14, "drivers.cameras.pkl.PklCamera.distortion_coefficients"]], "drivers.cameras.pkl": [[14, "module-drivers.cameras.pkl"]], "intrinsic_matrix (pklcamera property)": [[14, "drivers.cameras.pkl.PklCamera.intrinsic_matrix"]], "is_okay (pklcamera property)": [[14, "drivers.cameras.pkl.PklCamera.is_okay"]], "resolution (pklcamera property)": [[14, "drivers.cameras.pkl.PklCamera.resolution"]], "realsensecamera (class in drivers.cameras.realsense)": [[15, "drivers.cameras.realsense.RealsenseCamera"]], "accumulate() (realsensecamera method)": [[15, "drivers.cameras.realsense.RealsenseCamera.accumulate"]], "close() (realsensecamera method)": [[15, "drivers.cameras.realsense.RealsenseCamera.close"]], "distortion_coefficients (realsensecamera property)": [[15, "drivers.cameras.realsense.RealsenseCamera.distortion_coefficients"]], "drivers.cameras.realsense": [[15, "module-drivers.cameras.realsense"]], "intrinsic_matrix (realsensecamera property)": [[15, "drivers.cameras.realsense.RealsenseCamera.intrinsic_matrix"]], "is_okay (realsensecamera property)": [[15, "drivers.cameras.realsense.RealsenseCamera.is_okay"]], "resolution (realsensecamera property)": [[15, "drivers.cameras.realsense.RealsenseCamera.resolution"]], "drivers": [[16, "module-drivers"]], "safeserial (class in drivers.safe_serial)": [[17, "drivers.safe_serial.SafeSerial"]], "__getattr__() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.__getattr__"]], "create() (safeserial class method)": [[17, "drivers.safe_serial.SafeSerial.create"]], "drivers.safe_serial": [[17, "module-drivers.safe_serial"]], "read() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.read"]], "wait_for_start_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.wait_for_start_talk"]], "wait_for_stop_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.wait_for_stop_talk"]], "write() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.write"]], "write_and_wait_for_start_and_stop_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.write_and_wait_for_start_and_stop_talk"]], "write_and_wait_for_start_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.write_and_wait_for_start_talk"]], "write_and_wait_for_stop_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.write_and_wait_for_stop_talk"]], "sensor (class in drivers.sensor)": [[18, "drivers.sensor.Sensor"]], "sensorconfig (class in drivers.sensor)": [[18, "drivers.sensor.SensorConfig"]], "sensordata (class in drivers.sensor)": [[18, "drivers.sensor.SensorData"]], "sensordatathreaded (class in drivers.sensor)": [[18, "drivers.sensor.SensorDataThreaded"]], "__del__() (sensor method)": [[18, "drivers.sensor.Sensor.__del__"]], "calibrate() (sensor method)": [[18, "drivers.sensor.Sensor.calibrate"]], "close() (sensor method)": [[18, "drivers.sensor.Sensor.close"]], "config (sensor property)": [[18, "drivers.sensor.Sensor.config"]], "drivers.sensor": [[18, "module-drivers.sensor"]], "get_data() (sensordata method)": [[18, "drivers.sensor.SensorData.get_data"]], "get_data() (sensordatathreaded method)": [[18, "drivers.sensor.SensorDataThreaded.get_data"]], "is_okay (sensor property)": [[18, "drivers.sensor.Sensor.is_okay"]], "process() (sensordata method)": [[18, "drivers.sensor.SensorData.process"]], "reset() (sensordata method)": [[18, "drivers.sensor.SensorData.reset"]], "reset() (sensordatathreaded method)": [[18, "drivers.sensor.SensorDataThreaded.reset"]], "settings (sensor property)": [[18, "drivers.sensor.Sensor.settings"]], "settings (sensorconfig property)": [[18, "drivers.sensor.SensorConfig.settings"]], "update() (sensor method)": [[18, "drivers.sensor.Sensor.update"]], "dashdashboard (class in drivers.spads.dashboards.dash)": [[19, "drivers.spads.dashboards.dash.DashDashboard"]], "dashdashboardconfig (class in drivers.spads.dashboards.dash)": [[19, "drivers.spads.dashboards.dash.DashDashboardConfig"]], "config (dashdashboard property)": [[19, "drivers.spads.dashboards.dash.DashDashboard.config"]], "drivers.spads.dashboards.dash": [[19, "module-drivers.spads.dashboards.dash"]], "run() (dashdashboard method)": [[19, "drivers.spads.dashboards.dash.DashDashboard.run"]], "setup() (dashdashboard method)": [[19, "drivers.spads.dashboards.dash.DashDashboard.setup"]], "update() (dashdashboard method)": [[19, "drivers.spads.dashboards.dash.DashDashboard.update"]], "spaddashboard (class in drivers.spads.dashboards.dashboard)": [[20, "drivers.spads.dashboards.dashboard.SPADDashboard"]], "spaddashboardconfig (class in drivers.spads.dashboards.dashboard)": [[20, "drivers.spads.dashboards.dashboard.SPADDashboardConfig"]], "config (spaddashboard property)": [[20, "drivers.spads.dashboards.dashboard.SPADDashboard.config"]], "drivers.spads.dashboards.dashboard": [[20, "module-drivers.spads.dashboards.dashboard"]], "max_bin (spaddashboard property)": [[20, "drivers.spads.dashboards.dashboard.SPADDashboard.max_bin"]], "min_bin (spaddashboard property)": [[20, "drivers.spads.dashboards.dashboard.SPADDashboard.min_bin"]], "run() (spaddashboard method)": [[20, "drivers.spads.dashboards.dashboard.SPADDashboard.run"]], "sensor (spaddashboard property)": [[20, "drivers.spads.dashboards.dashboard.SPADDashboard.sensor"]], "setup() (spaddashboard method)": [[20, "drivers.spads.dashboards.dashboard.SPADDashboard.setup"]], "update() (spaddashboard method)": [[20, "drivers.spads.dashboards.dashboard.SPADDashboard.update"]], "drivers.spads.dashboards": [[21, "module-drivers.spads.dashboards"]], "matplotlibdashboard (class in drivers.spads.dashboards.matplotlib)": [[22, "drivers.spads.dashboards.matplotlib.MatplotlibDashboard"]], "matplotlibdashboardconfig (class in drivers.spads.dashboards.matplotlib)": [[22, "drivers.spads.dashboards.matplotlib.MatplotlibDashboardConfig"]], "adjust_ylim() (matplotlibdashboard method)": [[22, "drivers.spads.dashboards.matplotlib.MatplotlibDashboard.adjust_ylim"]], "config (matplotlibdashboard property)": [[22, "drivers.spads.dashboards.matplotlib.MatplotlibDashboard.config"]], "drivers.spads.dashboards.matplotlib": [[22, "module-drivers.spads.dashboards.matplotlib"]], "run() (matplotlibdashboard method)": [[22, "drivers.spads.dashboards.matplotlib.MatplotlibDashboard.run"]], "save_animation() (matplotlibdashboard method)": [[22, "drivers.spads.dashboards.matplotlib.MatplotlibDashboard.save_animation"]], "setup() (matplotlibdashboard method)": [[22, "drivers.spads.dashboards.matplotlib.MatplotlibDashboard.setup"]], "update() (matplotlibdashboard method)": [[22, "drivers.spads.dashboards.matplotlib.MatplotlibDashboard.update"]], "dashboardwindow (class in drivers.spads.dashboards.pyqtgraph)": [[23, "drivers.spads.dashboards.pyqtgraph.DashboardWindow"]], "pyqtgraphdashboard (class in drivers.spads.dashboards.pyqtgraph)": [[23, "drivers.spads.dashboards.pyqtgraph.PyQtGraphDashboard"]], "pyqtgraphdashboardconfig (class in drivers.spads.dashboards.pyqtgraph)": [[23, "drivers.spads.dashboards.pyqtgraph.PyQtGraphDashboardConfig"]], "config (pyqtgraphdashboard property)": [[23, "drivers.spads.dashboards.pyqtgraph.PyQtGraphDashboard.config"]], "drivers.spads.dashboards.pyqtgraph": [[23, "module-drivers.spads.dashboards.pyqtgraph"]], "init_ui() (dashboardwindow method)": [[23, "drivers.spads.dashboards.pyqtgraph.DashboardWindow.init_ui"]], "keypressevent() (dashboardwindow method)": [[23, "drivers.spads.dashboards.pyqtgraph.DashboardWindow.keyPressEvent"]], "run() (pyqtgraphdashboard method)": [[23, "drivers.spads.dashboards.pyqtgraph.PyQtGraphDashboard.run"]], "setup() (pyqtgraphdashboard method)": [[23, "drivers.spads.dashboards.pyqtgraph.PyQtGraphDashboard.setup"]], "update() (pyqtgraphdashboard method)": [[23, "drivers.spads.dashboards.pyqtgraph.PyQtGraphDashboard.update"]], "drivers.spads": [[24, "module-drivers.spads"]], "pklspadsensor (class in drivers.spads.pkl)": [[25, "drivers.spads.pkl.PklSPADSensor"]], "accumulate() (pklspadsensor method)": [[25, "drivers.spads.pkl.PklSPADSensor.accumulate"]], "close() (pklspadsensor method)": [[25, "drivers.spads.pkl.PklSPADSensor.close"]], "drivers.spads.pkl": [[25, "module-drivers.spads.pkl"]], "is_okay (pklspadsensor property)": [[25, "drivers.spads.pkl.PklSPADSensor.is_okay"]], "num_bins (pklspadsensor property)": [[25, "drivers.spads.pkl.PklSPADSensor.num_bins"]], "resolution (pklspadsensor property)": [[25, "drivers.spads.pkl.PklSPADSensor.resolution"]], "spadsensor (class in drivers.spads.spad)": [[26, "drivers.spads.spad.SPADSensor"]], "spadsensorconfig (class in drivers.spads.spad)": [[26, "drivers.spads.spad.SPADSensorConfig"]], "accumulate() (spadsensor method)": [[26, "drivers.spads.spad.SPADSensor.accumulate"]], "drivers.spads.spad": [[26, "module-drivers.spads.spad"]], "num_bins (spadsensor property)": [[26, "drivers.spads.spad.SPADSensor.num_bins"]], "resolution (spadsensor property)": [[26, "drivers.spads.spad.SPADSensor.resolution"]], "rangemode (class in drivers.spads.tmf8828)": [[27, "drivers.spads.tmf8828.RangeMode"]], "spadid (class in drivers.spads.tmf8828)": [[27, "drivers.spads.tmf8828.SPADID"]], "tmf8828histogram (class in drivers.spads.tmf8828)": [[27, "drivers.spads.tmf8828.TMF8828Histogram"]], "tmf8828sensor (class in drivers.spads.tmf8828)": [[27, "drivers.spads.tmf8828.TMF8828Sensor"]], "accumulate() (tmf8828sensor method)": [[27, "drivers.spads.tmf8828.TMF8828Sensor.accumulate"]], "calibrate() (tmf8828sensor method)": [[27, "drivers.spads.tmf8828.TMF8828Sensor.calibrate"]], "close() (tmf8828sensor method)": [[27, "drivers.spads.tmf8828.TMF8828Sensor.close"]], "drivers.spads.tmf8828": [[27, "module-drivers.spads.tmf8828"]], "get_active_channels_per_subcapture() (spadid method)": [[27, "drivers.spads.tmf8828.SPADID.get_active_channels_per_subcapture"]], "get_data() (tmf8828histogram method)": [[27, "drivers.spads.tmf8828.TMF8828Histogram.get_data"]], "get_num_channels() (spadid method)": [[27, "drivers.spads.tmf8828.SPADID.get_num_channels"]], "get_num_pixels() (spadid method)": [[27, "drivers.spads.tmf8828.SPADID.get_num_pixels"]], "get_resolution() (spadid method)": [[27, "drivers.spads.tmf8828.SPADID.get_resolution"]], "has_data (tmf8828histogram property)": [[27, "drivers.spads.tmf8828.TMF8828Histogram.has_data"]], "is_okay (tmf8828sensor property)": [[27, "drivers.spads.tmf8828.TMF8828Sensor.is_okay"]], "num_bins (tmf8828sensor property)": [[27, "drivers.spads.tmf8828.TMF8828Sensor.num_bins"]], "process() (tmf8828histogram method)": [[27, "drivers.spads.tmf8828.TMF8828Histogram.process"]], "reset() (tmf8828histogram method)": [[27, "drivers.spads.tmf8828.TMF8828Histogram.reset"]], "resolution (tmf8828sensor property)": [[27, "drivers.spads.tmf8828.TMF8828Sensor.resolution"]], "rangingmode (class in drivers.spads.vl53l8ch)": [[28, "drivers.spads.vl53l8ch.RangingMode"]], "vl53l8chconfig (class in drivers.spads.vl53l8ch)": [[28, "drivers.spads.vl53l8ch.VL53L8CHConfig"]], "vl53l8chconfig4x4 (class in drivers.spads.vl53l8ch)": [[28, "drivers.spads.vl53l8ch.VL53L8CHConfig4x4"]], "vl53l8chconfig8x8 (class in drivers.spads.vl53l8ch)": [[28, "drivers.spads.vl53l8ch.VL53L8CHConfig8x8"]], "vl53l8chhistogram (class in drivers.spads.vl53l8ch)": [[28, "drivers.spads.vl53l8ch.VL53L8CHHistogram"]], "vl53l8chsensor (class in drivers.spads.vl53l8ch)": [[28, "drivers.spads.vl53l8ch.VL53L8CHSensor"]], "vl53l8chsharedconfig (class in drivers.spads.vl53l8ch)": [[28, "drivers.spads.vl53l8ch.VL53L8CHSharedConfig"]], "accumulate() (vl53l8chsensor method)": [[28, "drivers.spads.vl53l8ch.VL53L8CHSensor.accumulate"]], "close() (vl53l8chsensor method)": [[28, "drivers.spads.vl53l8ch.VL53L8CHSensor.close"]], "config (vl53l8chsensor property)": [[28, "drivers.spads.vl53l8ch.VL53L8CHSensor.config"]], "drivers.spads.vl53l8ch": [[28, "module-drivers.spads.vl53l8ch"]], "get_data() (vl53l8chhistogram method)": [[28, "drivers.spads.vl53l8ch.VL53L8CHHistogram.get_data"]], "has_data (vl53l8chhistogram property)": [[28, "drivers.spads.vl53l8ch.VL53L8CHHistogram.has_data"]], "is_okay (vl53l8chsensor property)": [[28, "drivers.spads.vl53l8ch.VL53L8CHSensor.is_okay"]], "num_bins (vl53l8chsensor property)": [[28, "drivers.spads.vl53l8ch.VL53L8CHSensor.num_bins"]], "pack() (vl53l8chconfig method)": [[28, "drivers.spads.vl53l8ch.VL53L8CHConfig.pack"]], "process() (vl53l8chhistogram method)": [[28, "drivers.spads.vl53l8ch.VL53L8CHHistogram.process"]], "reset() (vl53l8chhistogram method)": [[28, "drivers.spads.vl53l8ch.VL53L8CHHistogram.reset"]], "resolution (vl53l8chsensor property)": [[28, "drivers.spads.vl53l8ch.VL53L8CHSensor.resolution"]], "settings (vl53l8chconfig property)": [[28, "drivers.spads.vl53l8ch.VL53L8CHConfig.settings"]], "update() (vl53l8chsensor method)": [[28, "drivers.spads.vl53l8ch.VL53L8CHSensor.update"]], "drivers.stepper_motors": [[29, "module-drivers.stepper_motors"]], "azimuthelevationsystem (class in drivers.stepper_motors.kinesis_stepper)": [[30, "drivers.stepper_motors.kinesis_stepper.AzimuthElevationSystem"]], "kinesisrotationstage (class in drivers.stepper_motors.kinesis_stepper)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage"]], "kinesissteppermotor (class in drivers.stepper_motors.kinesis_stepper)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor"]], "kinesissteppermotorsystem (class in drivers.stepper_motors.kinesis_stepper)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotorSystem"]], "close() (kinesissteppermotor method)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.close"]], "drivers.stepper_motors.kinesis_stepper": [[30, "module-drivers.stepper_motors.kinesis_stepper"]], "home() (kinesissteppermotor method)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.home"]], "initialize() (kinesisrotationstage method)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage.initialize"]], "initialize() (kinesissteppermotor method)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.initialize"]], "is_okay (kinesissteppermotor property)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.is_okay"]], "lower_limit (kinesissteppermotor property)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.lower_limit"]], "move_by() (kinesissteppermotor method)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.move_by"]], "move_to() (kinesissteppermotor method)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.move_to"]], "position (kinesissteppermotor property)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.position"]], "upper_limit (kinesissteppermotor property)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.upper_limit"]], "wait_for_move() (kinesissteppermotor method)": [[30, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.wait_for_move"]], "snakesteppercontroller (class in drivers.stepper_motors.stepper_controller)": [[31, "drivers.stepper_motors.stepper_controller.SnakeStepperController"]], "steppercontroller (class in drivers.stepper_motors.stepper_controller)": [[31, "drivers.stepper_motors.stepper_controller.StepperController"]], "drivers.stepper_motors.stepper_controller": [[31, "module-drivers.stepper_motors.stepper_controller"]], "get_position() (snakesteppercontroller method)": [[31, "drivers.stepper_motors.stepper_controller.SnakeStepperController.get_position"]], "get_position() (steppercontroller method)": [[31, "drivers.stepper_motors.stepper_controller.StepperController.get_position"]], "dummysteppermotor (class in drivers.stepper_motors.stepper_motor)": [[32, "drivers.stepper_motors.stepper_motor.DummyStepperMotor"]], "steppermotor (class in drivers.stepper_motors.stepper_motor)": [[32, "drivers.stepper_motors.stepper_motor.StepperMotor"]], "close() (steppermotor method)": [[32, "drivers.stepper_motors.stepper_motor.StepperMotor.close"]], "drivers.stepper_motors.stepper_motor": [[32, "module-drivers.stepper_motors.stepper_motor"]], "home() (steppermotor method)": [[32, "drivers.stepper_motors.stepper_motor.StepperMotor.home"]], "is_okay (steppermotor property)": [[32, "drivers.stepper_motors.stepper_motor.StepperMotor.is_okay"]], "move_by() (steppermotor method)": [[32, "drivers.stepper_motors.stepper_motor.StepperMotor.move_by"]], "move_to() (steppermotor method)": [[32, "drivers.stepper_motors.stepper_motor.StepperMotor.move_to"]], "position (steppermotor property)": [[32, "drivers.stepper_motors.stepper_motor.StepperMotor.position"]], "wait_for_move() (steppermotor method)": [[32, "drivers.stepper_motors.stepper_motor.StepperMotor.wait_for_move"]], "dummysteppersystem (class in drivers.stepper_motors.stepper_system)": [[33, "drivers.stepper_motors.stepper_system.DummyStepperSystem"]], "steppermotorsystem (class in drivers.stepper_motors.stepper_system)": [[33, "drivers.stepper_motors.stepper_system.StepperMotorSystem"]], "steppermotorsystemaxis (class in drivers.stepper_motors.stepper_system)": [[33, "drivers.stepper_motors.stepper_system.StepperMotorSystemAxis"]], "__getattr__() (steppermotorsystem method)": [[33, "drivers.stepper_motors.stepper_system.StepperMotorSystem.__getattr__"]], "close() (dummysteppersystem method)": [[33, "drivers.stepper_motors.stepper_system.DummyStepperSystem.close"]], "close() (steppermotorsystem method)": [[33, "drivers.stepper_motors.stepper_system.StepperMotorSystem.close"]], "drivers.stepper_motors.stepper_system": [[33, "module-drivers.stepper_motors.stepper_system"]], "move_by() (dummysteppersystem method)": [[33, "drivers.stepper_motors.stepper_system.DummyStepperSystem.move_by"]], "move_by() (steppermotorsystem method)": [[33, "drivers.stepper_motors.stepper_system.StepperMotorSystem.move_by"]], "move_to() (dummysteppersystem method)": [[33, "drivers.stepper_motors.stepper_system.DummyStepperSystem.move_to"]], "move_to() (steppermotorsystem method)": [[33, "drivers.stepper_motors.stepper_system.StepperMotorSystem.move_to"]], "position (steppermotorsystem property)": [[33, "drivers.stepper_motors.stepper_system.StepperMotorSystem.position"]], "wait_for_move() (dummysteppersystem method)": [[33, "drivers.stepper_motors.stepper_system.DummyStepperSystem.wait_for_move"]], "wait_for_move() (steppermotorsystem method)": [[33, "drivers.stepper_motors.stepper_system.StepperMotorSystem.wait_for_move"]], "dualdrive2axisgantry (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry"]], "dualdrive2axisgantry_x (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_X"]], "dualdrive2axisgantry_y1 (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_Y1"]], "dualdrive2axisgantry_y2 (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_Y2"]], "singledrive1axisgantry (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry"]], "singledrive1axisgantry_x (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry_X"]], "singledrive1axisgantry_y (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry_Y"]], "telemetrixsteppermotor (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor"]], "telemetrixsteppermotorsystem (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem"]], "telemetrixsteppermotorx (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorX"]], "telemetrixsteppermotorxreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorXReversed"]], "telemetrixsteppermotory (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorY"]], "telemetrixsteppermotoryreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorYReversed"]], "telemetrixsteppermotorz (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorZ"]], "telemetrixsteppermotorzreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorZReversed"]], "__getattr__() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.__getattr__"]], "close() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.close"]], "close() (telemetrixsteppermotorsystem method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem.close"]], "cm_to_revs() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.cm_to_revs"]], "drivers.stepper_motors.telemetrix_stepper": [[34, "module-drivers.stepper_motors.telemetrix_stepper"]], "home() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.home"]], "home() (telemetrixsteppermotorsystem method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem.home"]], "id (telemetrixsteppermotor property)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.id"]], "is_okay (telemetrixsteppermotor property)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.is_okay"]], "is_okay (telemetrixsteppermotorsystem property)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem.is_okay"]], "move_by() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.move_by"]], "move_to() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.move_to"]], "position (telemetrixsteppermotor property)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.position"]], "revs_to_cm() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.revs_to_cm"]], "set_absolute_target_position_cm() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.set_absolute_target_position_cm"]], "set_target_position_cm() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.set_target_position_cm"]], "wait_for_move() (telemetrixsteppermotor method)": [[34, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.wait_for_move"]], "call_async() (in module utils.asyncio_utils)": [[35, "utils.asyncio_utils.call_async"]], "call_async_gather() (in module utils.asyncio_utils)": [[35, "utils.asyncio_utils.call_async_gather"]], "call_async_value() (in module utils.asyncio_utils)": [[35, "utils.asyncio_utils.call_async_value"]], "utils.asyncio_utils": [[35, "module-utils.asyncio_utils"]], "blockingdeque (class in utils.blocking_deque)": [[36, "utils.blocking_deque.BlockingDeque"]], "__getattr__() (blockingdeque method)": [[36, "utils.blocking_deque.BlockingDeque.__getattr__"]], "__getitem__() (blockingdeque method)": [[36, "utils.blocking_deque.BlockingDeque.__getitem__"]], "__len__() (blockingdeque method)": [[36, "utils.blocking_deque.BlockingDeque.__len__"]], "__repr__() (blockingdeque method)": [[36, "utils.blocking_deque.BlockingDeque.__repr__"]], "append() (blockingdeque method)": [[36, "utils.blocking_deque.BlockingDeque.append"]], "utils.blocking_deque": [[36, "module-utils.blocking_deque"]], "cchardwareconfig (class in utils.config)": [[37, "utils.config.CCHardwareConfig"]], "create_instance() (cchardwareconfig method)": [[37, "utils.config.CCHardwareConfig.create_instance"]], "get_instance() (cchardwareconfig method)": [[37, "utils.config.CCHardwareConfig.get_instance"]], "utils.config": [[37, "module-utils.config"]], "c (in module utils.constants)": [[38, "utils.constants.C"]], "utils.constants": [[38, "module-utils.constants"]], "pklhandler (class in utils.file_handlers)": [[39, "utils.file_handlers.PklHandler"]], "videowriter (class in utils.file_handlers)": [[39, "utils.file_handlers.VideoWriter"]], "__del__() (videowriter method)": [[39, "utils.file_handlers.VideoWriter.__del__"]], "__len__() (pklhandler method)": [[39, "utils.file_handlers.PklHandler.__len__"]], "append() (pklhandler method)": [[39, "utils.file_handlers.PklHandler.append"]], "append() (videowriter method)": [[39, "utils.file_handlers.VideoWriter.append"]], "close() (videowriter method)": [[39, "utils.file_handlers.VideoWriter.close"]], "load() (pklhandler method)": [[39, "utils.file_handlers.PklHandler.load"]], "load_all() (pklhandler static method)": [[39, "utils.file_handlers.PklHandler.load_all"]], "update_index() (pklhandler method)": [[39, "utils.file_handlers.PklHandler.update_index"]], "utils.file_handlers": [[39, "module-utils.file_handlers"]], "write() (pklhandler method)": [[39, "utils.file_handlers.PklHandler.write"]], "utils": [[40, "module-utils"]], "filehandler (class in utils.logger)": [[41, "utils.logger.FileHandler"]], "loggermaxlevelfilter (class in utils.logger)": [[41, "utils.logger.LoggerMaxLevelFilter"]], "tqdmstreamhandler (class in utils.logger)": [[41, "utils.logger.TqdmStreamHandler"]], "emit() (tqdmstreamhandler method)": [[41, "utils.logger.TqdmStreamHandler.emit"]], "filter() (loggermaxlevelfilter method)": [[41, "utils.logger.LoggerMaxLevelFilter.filter"]], "utils.logger": [[41, "module-utils.logger"]], "component (class in utils.manager)": [[42, "utils.manager.Component"]], "manager (class in utils.manager)": [[42, "utils.manager.Manager"]], "__enter__() (manager method)": [[42, "utils.manager.Manager.__enter__"]], "__exit__() (manager method)": [[42, "utils.manager.Manager.__exit__"]], "add() (manager method)": [[42, "utils.manager.Manager.add"]], "close() (component method)": [[42, "utils.manager.Component.close"]], "close() (manager method)": [[42, "utils.manager.Manager.close"]], "components (manager property)": [[42, "utils.manager.Manager.components"]], "is_okay (component property)": [[42, "utils.manager.Component.is_okay"]], "is_okay (manager property)": [[42, "utils.manager.Manager.is_okay"]], "run() (manager method)": [[42, "utils.manager.Manager.run"]], "utils.manager": [[42, "module-utils.manager"]], "get_object() (in module utils.misc)": [[43, "utils.misc.get_object"]], "utils.misc": [[43, "module-utils.misc"]], "set_matplotlib_style() (in module utils.plotting)": [[44, "utils.plotting.set_matplotlib_style"]], "transient_gui() (in module utils.plotting)": [[44, "utils.plotting.transient_gui"]], "utils.plotting": [[44, "module-utils.plotting"]], "registry (class in utils.registry)": [[45, "utils.registry.Registry"]], "create_from_registry() (registry class method)": [[45, "utils.registry.Registry.create_from_registry"]], "register() (registry class method)": [[45, "utils.registry.Registry.register"]], "register() (in module utils.registry)": [[45, "utils.registry.register"]], "registered() (registry method)": [[45, "utils.registry.Registry.registered"]], "registry() (registry method)": [[45, "utils.registry.Registry.registry"]], "utils.registry": [[45, "module-utils.registry"]], "arduino_upload() (in module utils.serial_utils)": [[46, "utils.serial_utils.arduino_upload"]], "find_device_by_label() (in module utils.serial_utils)": [[46, "utils.serial_utils.find_device_by_label"]], "find_ports() (in module utils.serial_utils)": [[46, "utils.serial_utils.find_ports"]], "utils.serial_utils": [[46, "module-utils.serial_utils"]], "optionsetting (class in utils.setting)": [[47, "utils.setting.OptionSetting"]], "rangesetting (class in utils.setting)": [[47, "utils.setting.RangeSetting"]], "setting (class in utils.setting)": [[47, "utils.setting.Setting"]], "default_factory() (setting class method)": [[47, "utils.setting.Setting.default_factory"]], "from_enum() (optionsetting class method)": [[47, "utils.setting.OptionSetting.from_enum"]], "update() (optionsetting method)": [[47, "utils.setting.OptionSetting.update"]], "update() (rangesetting method)": [[47, "utils.setting.RangeSetting.update"]], "utils.setting": [[47, "module-utils.setting"]], "singletonabcmeta (class in utils.singleton)": [[48, "utils.singleton.SingletonABCMeta"]], "singletonmeta (class in utils.singleton)": [[48, "utils.singleton.SingletonMeta"]], "__call__() (singletonmeta method)": [[48, "utils.singleton.SingletonMeta.__call__"]], "instance() (singletonmeta class method)": [[48, "utils.singleton.SingletonMeta.instance"]], "utils.singleton": [[48, "module-utils.singleton"]], "utils.transformations": [[49, "module-utils.transformations"]], "cc_hardware.tools": [[50, "module-cc_hardware.tools"]]}})