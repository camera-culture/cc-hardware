Search.setIndex({"docnames": ["_templates/python/module", "contributing", "examples/index", "examples/spad_dashboard", "examples/spad_gantry_capture", "examples/stepper_motor_controller", "index", "usage/api", "usage/api/algos/algorithm/index", "usage/api/algos/aruco/index", "usage/api/algos/index", "usage/api/drivers/cameras/camera/index", "usage/api/drivers/cameras/flir/index", "usage/api/drivers/cameras/index", "usage/api/drivers/cameras/pkl/index", "usage/api/drivers/cameras/realsense/index", "usage/api/drivers/index", "usage/api/drivers/safe_serial/index", "usage/api/drivers/sensor/index", "usage/api/drivers/spads/dashboard/index", "usage/api/drivers/spads/index", "usage/api/drivers/spads/pkl/index", "usage/api/drivers/spads/spad/index", "usage/api/drivers/spads/tmf8828/index", "usage/api/drivers/spads/vl53l8ch/index", "usage/api/drivers/stepper_motors/index", "usage/api/drivers/stepper_motors/kinesis_stepper/index", "usage/api/drivers/stepper_motors/stepper_controller/index", "usage/api/drivers/stepper_motors/stepper_motor/index", "usage/api/drivers/stepper_motors/stepper_system/index", "usage/api/drivers/stepper_motors/telemetrix_stepper/index", "usage/api/utils/asyncio_utils/index", "usage/api/utils/blocking_deque/index", "usage/api/utils/constants/index", "usage/api/utils/file_handlers/index", "usage/api/utils/index", "usage/api/utils/logger/index", "usage/api/utils/manager/index", "usage/api/utils/misc/index", "usage/api/utils/plotting/index", "usage/api/utils/registry/index", "usage/api/utils/serial_utils/index", "usage/api/utils/singleton/index", "usage/api/utils/transformations/index", "usage/cli", "usage/index"], "filenames": ["_templates/python/module.rst", "contributing.md", "examples/index.md", "examples/spad_dashboard.md", "examples/spad_gantry_capture.md", "examples/stepper_motor_controller.md", "index.md", "usage/api.md", "usage/api/algos/algorithm/index.rst", "usage/api/algos/aruco/index.rst", "usage/api/algos/index.rst", "usage/api/drivers/cameras/camera/index.rst", "usage/api/drivers/cameras/flir/index.rst", "usage/api/drivers/cameras/index.rst", "usage/api/drivers/cameras/pkl/index.rst", "usage/api/drivers/cameras/realsense/index.rst", "usage/api/drivers/index.rst", "usage/api/drivers/safe_serial/index.rst", "usage/api/drivers/sensor/index.rst", "usage/api/drivers/spads/dashboard/index.rst", "usage/api/drivers/spads/index.rst", "usage/api/drivers/spads/pkl/index.rst", "usage/api/drivers/spads/spad/index.rst", "usage/api/drivers/spads/tmf8828/index.rst", "usage/api/drivers/spads/vl53l8ch/index.rst", "usage/api/drivers/stepper_motors/index.rst", "usage/api/drivers/stepper_motors/kinesis_stepper/index.rst", "usage/api/drivers/stepper_motors/stepper_controller/index.rst", "usage/api/drivers/stepper_motors/stepper_motor/index.rst", "usage/api/drivers/stepper_motors/stepper_system/index.rst", "usage/api/drivers/stepper_motors/telemetrix_stepper/index.rst", "usage/api/utils/asyncio_utils/index.rst", "usage/api/utils/blocking_deque/index.rst", "usage/api/utils/constants/index.rst", "usage/api/utils/file_handlers/index.rst", "usage/api/utils/index.rst", "usage/api/utils/logger/index.rst", "usage/api/utils/manager/index.rst", "usage/api/utils/misc/index.rst", "usage/api/utils/plotting/index.rst", "usage/api/utils/registry/index.rst", "usage/api/utils/serial_utils/index.rst", "usage/api/utils/singleton/index.rst", "usage/api/utils/transformations/index.rst", "usage/cli.md", "usage/index.md"], "titles": ["&lt;no title&gt;", "Contributing", "Examples", "SPAD Dashboard", "Stepper Gantry Collab", "Stepper Motor Controller", "Camera Culture Hardware Repo", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos.aruco</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">algos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.camera</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.flir</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.pkl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.cameras.realsense</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.safe_serial</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.sensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.dashboard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.pkl</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.spad</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.tmf8828</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.spads.vl53l8ch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.kinesis_stepper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_controller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_motor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.stepper_system</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">drivers.stepper_motors.telemetrix_stepper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.asyncio_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.blocking_deque</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.file_handlers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.manager</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.misc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.plotting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.registry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.serial_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.singleton</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.transformations</span></code>", "CLI Documentation", "Reference"], "terms": {"obj": 0, "displai": [0, 9, 19, 39], "orphan": 0, "endif": 0, "name": [0, 1, 4, 5, 17, 23, 27, 29, 30, 32, 40, 41], "length": 0, "loc_fil": 0, "jinja_env": 0, "test": [0, 21, 28], "set": [0, 1, 3, 4, 5, 12, 15, 19, 24, 26, 30, 36, 39], "readm": [0, 1, 6], "url_root": 0, "pathnam": 0, "md": [0, 1, 6], "i": [0, 1, 3, 4, 5, 6, 8, 9, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 32, 34, 36, 37, 40, 42, 44], "docstr": 0, "autoapi": 0, "nest": 0, "pars": 0, "indent": 0, "3": [0, 12, 23, 29], "block": [0, 19, 28, 29, 32], "subpackag": 0, "visible_subpackag": 0, "selectattr": 0, "list": [0, 4, 5, 9, 15, 17, 18, 19, 21, 23, 24, 26, 27, 29, 30, 31, 34, 41], "toctre": 0, "titlesonli": 0, "maxdepth": 0, "short_nam": 0, "index": [0, 1, 27, 31, 32, 34], "rst": 0, "endfor": 0, "endblock": 0, "submodul": 0, "visible_submodul": 0, "1": [0, 1, 3, 9, 12, 17, 19, 22, 23, 24, 26, 29, 34, 44], "content": [0, 1], "all": [0, 1, 6, 8, 17, 19, 22, 23, 28, 31, 34, 37, 41], "none": [0, 3, 4, 5, 9, 12, 14, 15, 17, 19, 23, 24, 26, 30, 34, 37, 39, 41, 44], "visible_children": 0, "children": 0, "elif": 0, "type": [0, 8, 17, 26, 42], "equalto": 0, "packag": [0, 1, 12, 13, 20, 25, 36, 44], "els": 0, "rejectattr": 0, "import": [0, 3, 4, 5, 6, 19, 36, 37, 42], "titl": [0, 1], "visible_class": 0, "class": [0, 1, 6, 38, 41, 43], "visible_funct": 0, "function": [0, 1, 6, 9, 19, 24, 34, 37, 38, 42], "visible_attribut": 0, "data": [0, 1, 4, 5, 6, 12, 14, 17, 18, 19, 21, 22, 23, 24, 34, 39, 44], "show": [0, 9, 39, 44], "modul": [0, 43], "summari": 0, "autoapi_opt": 0, "scope": 0, "klass": 0, "id": [0, 23, 30], "attribut": [0, 17, 23, 29, 32, 36, 44], "obj_item": 0, "render": 0, "0": [0, 1, 4, 5, 12, 15, 26, 33, 44], "repositori": [1, 6], "fairli": 1, "easi": 1, "so": [1, 12], "pleas": [1, 3], "see": [1, 23, 29], "below": 1, "instruct": [1, 12], "how": [1, 23, 29, 36], "actual": [1, 21], "make": [1, 6, 31, 32], "thi": [1, 6, 8, 9, 12, 14, 15, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 34, 36, 37, 42, 43, 44], "project": 1, "There": [1, 19], "ar": [1, 6, 9, 19, 26, 28, 29, 30, 34, 37, 41], "two": 1, "form": 1, "simpl": [1, 12, 15, 26], "ad": [1, 23, 29], "within": [1, 6, 24], "doc": 1, "folder": 1, "written": [1, 17, 34, 36], "markdown": 1, "convert": [1, 30], "html": 1, "through": [1, 30], "myst_pars": 1, "sphinx": 1, "To": [1, 6, 12], "well": [1, 15], "you": [1, 6, 12, 19, 28, 30], "want": 1, "symlink": [1, 6], "A": [1, 8, 9, 11, 12, 14, 17, 21, 22, 23, 24, 26, 27, 29, 30, 32, 34, 36, 40, 41, 42], "conda": 1, "virtualenv": 1, "add": [1, 4, 5, 8, 37], "isol": 1, "python": [1, 12], "environ": [1, 32], "reduc": 1, "conflict": 1, "amongst": 1, "It": [1, 12, 15, 17, 19, 23, 24, 26, 28, 34, 36, 37, 42], "highli": 1, "recommend": 1, "us": [1, 3, 4, 5, 6, 9, 12, 17, 19, 21, 23, 26, 28, 29, 30, 32, 36, 37, 40, 41, 42, 44], "one": [1, 12, 15, 42, 44], "normal": [1, 44], "git": [1, 6], "http": 1, "github": [1, 6], "com": [1, 6], "camera": [1, 9, 16, 37], "cultur": 1, "cc": [1, 13, 20, 24, 25], "hardwar": [1, 13, 20, 21, 24, 25, 28, 30], "cd": [1, 6], "sinc": 1, "organ": [1, 23], "monorepo": [1, 6], "need": [1, 6, 12, 42], "poetri": [1, 6], "The": [1, 3, 6, 9, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 40, 41, 42, 44], "develop": [1, 6, 23], "mode": [1, 4, 5, 6, 19, 23, 24, 39, 44], "e": [1, 6, 22, 28, 29, 44], "symbol": 1, "link": 1, "immedi": [1, 44], "reflect": [1, 6], "pip": [1, 6, 12], "action": 1, "automat": [1, 6], "site": [1, 12], "page": 1, "host": 1, "static": [1, 34], "updat": [1, 3, 4, 19, 23, 24], "have": [1, 6, 23, 28, 29], "push": 1, "main": [1, 3, 4, 5, 19, 24], "branch": 1, "onc": 1, "rebuild": 1, "ensur": [1, 12, 15, 18, 28, 29, 32, 34, 37, 42], "error": [1, 8, 28, 30], "befor": [1, 17, 26, 37, 44], "do": [1, 12, 36], "mai": [1, 8, 12, 22, 28, 36], "get": [1, 11, 12, 14, 15, 24, 26, 27, 32, 34, 40], "an": [1, 3, 8, 9, 11, 17, 19, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 36, 40, 42, 44], "email": 1, "from": [1, 3, 4, 5, 9, 11, 12, 14, 15, 17, 19, 21, 22, 23, 24, 28, 30, 32, 34, 36, 37, 39, 40, 42, 44], "someth": [1, 17], "bad": 1, "happen": [1, 17], "tag": 1, "exampl": [1, 12, 19, 23, 29, 34, 36, 37, 42], "v3": 1, "follow": [1, 6, 12], "pkg": [1, 6], "algo": [1, 6, 7], "contain": [1, 6, 8, 9, 11, 12, 14, 21, 23, 30, 37], "algorithm": [1, 6, 9, 10], "process": [1, 6, 9, 18, 19, 23, 24], "driver": [1, 3, 4, 5, 6, 7], "interfac": [1, 6, 8, 12, 15, 17, 23, 24, 26, 28, 30, 39, 44], "util": [1, 3, 4, 5, 6, 7, 8, 17, 18, 19, 27, 28], "tool": [1, 6, 44], "work": [1, 6, 43], "calibr": [1, 6, 18, 23], "visual": [1, 6, 19, 39], "script": [1, 6, 23, 24, 44], "addit": [1, 8, 17, 26, 30, 37, 41, 42], "licens": 1, "pyproject": [1, 6], "toml": [1, 6], "descript": [1, 3, 4], "If": [1, 17, 19, 24, 30, 34, 36, 40, 41], "plan": 1, "visit": 1, "correspond": [1, 23], "under": 1, "each": [1, 6, 8, 17, 19, 21, 23, 34, 37, 44], "should": [1, 6, 8, 19, 27, 28, 29, 30, 34, 36], "cc_hardwar": [1, 3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 36, 37], "__init__": [1, 6, 42], "py": [1, 6], "googl": 1, "": [1, 4, 5, 6, 8, 11, 21, 22, 23, 24, 28, 29, 30, 33], "style": [1, 19, 39], "These": [1, 30], "also": [1, 6, 17, 28, 30, 34, 36, 42], "gener": 1, "tutori": 1, "fix": 1, "exist": [1, 4, 5, 18, 34, 36, 42], "_static": 1, "persist": 1, "css": 1, "custom": [1, 23, 36, 44], "differ": [1, 17, 19, 23, 26], "default": [1, 3, 8, 9, 12, 15, 17, 19, 21, 22, 23, 24, 26, 34, 37, 39, 44], "furo": 1, "theme": 1, "imag": [1, 9, 12, 14, 15, 44], "favicon": 1, "etc": 1, "usag": [1, 44], "refer": [1, 22, 26, 28, 30], "guid": 1, "eyesofcambrian": 1, "conf": 1, "relat": [1, 22], "extens": 1, "home": [1, 26, 28, 30], "try": [1, 3], "maintain": 1, "describ": [1, 6], "abov": 1, "tab": 1, "onli": [1, 12, 15, 26, 41, 42], "singl": [1, 17, 22, 23, 29, 34, 42], "background": [1, 12, 15, 23, 24], "ha": [1, 8, 12, 23, 26, 28, 29, 30, 36], "multipl": [1, 6, 17, 23, 24, 26, 29, 30, 31, 34], "creat": [1, 6, 12, 15, 17, 23, 29, 36, 39, 40, 42], "same": [1, 28, 29, 42], "insert": 1, "without": [1, 6, 21, 34], "tabl": 1, "insid": 1, "restructuredtext": 1, "which": [1, 26, 28, 29, 30, 36, 37], "both": [1, 9, 15, 42], "advantag": 1, "disadvantag": 1, "allow": [1, 6, 23, 37], "u": 1, "understand": 1, "languag": 1, "compil": 1, "down": [1, 28, 29, 30], "featur": [1, 19, 26], "librari": [1, 12, 15, 26, 30], "websit": 1, "wai": [1, 6], "easiest": 1, "makefil": [1, 24], "bat": 1, "provid": [1, 8, 12, 15, 17, 19, 24, 26, 27, 28, 30, 31, 32, 34, 36, 40, 42, 43, 44], "directli": [1, 30], "necessari": [1, 24, 42], "depend": [1, 6, 22, 28], "run": [1, 3, 4, 5, 6, 8, 9, 12, 19, 23, 37], "command": [1, 6, 12, 28, 29, 44], "dev": [1, 44], "clean": 1, "view": [1, 44], "go": [1, 12], "browser": 1, "open": [1, 9, 14], "locat": [1, 28, 29, 44], "autobuild": 1, "extrem": 1, "when": [1, 6, 28, 32, 34, 37], "made": [1, 23], "pypi": 1, "tl": 1, "dr": 1, "spad": [2, 4, 16, 39], "dashboard": [2, 4, 16, 20], "stepper": [2, 25, 26, 27, 28, 29, 30], "gantri": [2, 29], "collab": 2, "motor": [2, 25, 26, 27, 28, 29, 30], "control": [2, 4, 26, 27, 28, 29, 30], "thread": [3, 12, 15, 17, 18, 19, 32], "time": [3, 4, 5, 17, 19, 23, 24], "spadsensor": [3, 4, 19, 21, 22, 23, 24, 39], "spaddashboard": [3, 4, 19], "logger": [3, 4, 5, 35], "get_logg": [3, 4, 5, 36], "share": [3, 24, 32, 42], "variabl": [3, 19, 21, 23, 24], "lock": [3, 17], "num_bins_to_set": 3, "def": [3, 4, 5, 12, 37, 42], "handle_user_input": 3, "sleep": [3, 4, 5], "global": 3, "while": [3, 42], "true": [3, 4, 5, 8, 9, 12, 14, 15, 17, 19, 21, 23, 24, 26, 28, 30, 34, 36, 39, 44], "user_input": 3, "int": [3, 4, 5, 11, 12, 14, 15, 17, 19, 21, 22, 23, 24, 26, 27, 30, 32, 34], "input": [3, 30, 34], "enter": 3, "number": [3, 11, 12, 14, 15, 17, 19, 21, 22, 23, 24, 27, 30, 32, 34], "bin": [3, 19, 21, 22, 23, 24], "print": [3, 34], "f": [3, 4, 5], "queu": 3, "num_bin": [3, 21, 22, 23, 24], "except": [3, 36], "valueerror": [3, 40], "invalid": [3, 17], "integ": [3, 44], "my_callback": [3, 19], "sensor": [3, 4, 9, 11, 14, 16, 19, 20, 21, 22, 23, 24, 28, 30, 39, 44], "sensor_nam": 3, "str": [3, 4, 5, 9, 17, 19, 23, 24, 26, 30, 32, 34, 37], "dashboard_nam": [3, 4], "applic": [3, 19, 42], "setup": [3, 4, 5, 19, 23, 26, 37], "create_from_registri": [3, 4, 5, 19, 40], "is_okai": [3, 4, 8, 9, 12, 14, 15, 18, 21, 23, 24, 26, 28, 30, 37], "fatal": [3, 4], "fail": [3, 4, 12], "initi": [3, 4, 5, 8, 12, 15, 18, 26, 30], "return": [3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 41, 42], "user_callback": [3, 19], "start": [3, 4, 5, 17, 24, 28, 30, 34, 37], "user": [3, 19], "input_thread": 3, "target": [3, 26, 28, 29, 30], "daemon": 3, "fullscreen": [3, 19, 39, 44], "fals": [3, 4, 5, 8, 9, 12, 14, 15, 17, 19, 21, 23, 24, 26, 28, 30, 34, 36, 37, 39, 44], "__name__": [3, 4, 5], "__main__": [3, 4, 5], "argpars": [3, 4], "parser": [3, 4], "argumentpars": [3, 4], "add_argu": [3, 4], "log": [3, 4, 5, 17, 36], "level": [3, 4, 5, 36], "help": [3, 4], "vl53l8chsensor": [3, 4, 24, 44], "pyqtgraphdashboard": [3, 4, 19], "arg": [3, 4, 17, 23, 26, 28, 29, 30, 32, 36, 40, 42, 44], "parse_arg": [3, 4], "log_level": 3, "datetim": [4, 5], "pathlib": [4, 5], "path": [4, 5, 6, 9, 19, 21, 23, 24, 34, 44], "stepper_motor": [4, 5, 16], "steppermotorsystem": [4, 5, 26, 29, 30], "stepper_control": [4, 5, 16, 25], "snakesteppercontrol": [4, 5, 27], "file_handl": [4, 5, 35], "pklhandler": [4, 5, 34], "manag": [4, 5, 22, 24, 35], "uncom": [4, 5], "debug": [4, 5], "now": [4, 5], "logdir": [4, 5], "strftime": [4, 5], "y": [4, 5, 19, 24], "m": [4, 5, 33], "d": [4, 5], "h": [4, 5], "spad_nam": 4, "spad_port": 4, "stepper_system_nam": [4, 5], "singledrive1axisgantri": [4, 5, 30, 44], "stepper_port": 4, "controller_config": [4, 5], "dict": [4, 5, 9, 21, 26, 27, 29, 30, 37], "x": [4, 5, 24], "rang": [4, 5, 22, 24, 44], "16": [4, 5], "sampl": [4, 5, 11, 12, 14, 15, 21, 22, 23, 24], "10": [4, 5, 12, 17, 34, 39, 42, 44], "output_pkl": [4, 5], "pkl": [4, 5, 13, 16, 20, 34], "mkdir": [4, 5], "parent": [4, 5, 17], "exist_ok": [4, 5], "port": [4, 17, 23, 24, 26, 30, 41, 44], "stepper_system": [4, 5, 16, 25, 26], "assert": [4, 5, 42], "output": [4, 5, 19, 23, 34, 36, 44], "file": [4, 5, 14, 19, 21, 34, 36, 39, 44], "alreadi": [4, 5], "writer": [4, 5, 9, 34], "loop": [4, 5, 19, 37], "iter": [4, 5, 14, 21, 23, 27, 29], "kwarg": [4, 5, 17, 24, 26, 28, 30, 32, 36, 40, 41, 42], "bool": [4, 5, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 23, 24, 26, 28, 30, 34, 37], "info": [4, 5, 36], "histogram": [4, 19, 21, 22, 23, 24], "accumul": [4, 11, 12, 14, 15, 17, 19, 21, 22, 23, 24], "po": [4, 5], "get_posit": [4, 5, 27], "move_to": [4, 5, 26, 28, 29, 30], "append": [4, 5, 32, 34, 36], "25": [4, 5, 44], "demo": 4, "requir": [4, 30, 32, 44], "gantry_port": 4, "instal": [6, 44], "can": [6, 8, 12, 17, 19, 22, 23, 28, 29, 30, 37], "clone": 6, "chang": 6, "code": 6, "them": [6, 12, 15, 23, 26, 27, 28, 29, 30, 40], "reinstal": 6, "don": [6, 28], "t": [6, 28, 36], "behavior": [6, 21, 28, 32], "subdirectori": 6, "directori": [6, 36], "separ": 6, "done": 6, "current": [6, 19, 26, 27, 28, 29, 30, 44], "support": [6, 12, 18, 19, 23, 26, 34, 42], "package_nam": 6, "In": 6, "module_nam": 6, "implement": [8, 12, 15, 17, 19, 23, 28, 29, 42], "sourc": [8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42], "base": [8, 9, 11, 12, 14, 15, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 34, 36, 37, 39, 40, 42], "registri": [8, 18, 19, 27, 28, 35], "abc": [8, 18, 19, 27, 28, 42], "abstract": [8, 11, 14, 15, 18, 19, 22, 27, 28, 30, 42], "properti": [8, 9, 11, 12, 14, 15, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 37], "okai": [8, 9, 37], "otherwis": [8, 9, 12, 14, 15, 17, 23, 24, 26, 28, 30, 36], "either": [8, 17, 24], "been": [8, 23], "properli": [8, 9, 12, 15, 18, 28, 29, 34, 37], "encount": 8, "result": [8, 9, 31], "subclass": [8, 27, 28, 40], "paramet": [8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 37, 39, 40, 41, 42], "method": [8, 11, 12, 14, 15, 17, 19, 21, 22, 23, 27, 28, 29, 30, 31, 34, 40, 44], "specifi": [8, 9, 11, 12, 14, 17, 19, 21, 22, 26, 28, 29, 30, 32, 34, 36, 40], "close": [8, 9, 12, 14, 15, 18, 19, 21, 23, 24, 26, 28, 29, 30, 34, 37], "releas": [8, 9, 18, 28, 29, 37], "ani": [8, 9, 14, 17, 18, 19, 26, 28, 29, 32, 34, 37], "resourc": [8, 9, 14, 18, 28, 29, 37], "here": [8, 30], "overrid": [8, 12], "own": [8, 12, 23, 29], "local": 9, "marker": [9, 44], "arucolocalizationalgorithm": 9, "aruco_dict": [9, 44], "marker_s": 9, "origin_id": 9, "num_sampl": [9, 11, 12, 14, 15, 21, 22, 23, 24], "marker_id": 9, "detect": [9, 28, 30], "comput": [9, 28], "pose": 9, "rel": [9, 26, 28, 30], "origin": 9, "check": [9, 12, 14, 15, 17, 18, 21, 23, 24, 26, 28, 30, 37, 41], "save": [9, 19, 39, 44], "filenam": [9, 19, 36, 39, 44], "return_imag": 9, "option": [9, 12, 19, 24, 26, 34, 37, 44], "whether": [9, 11, 12, 15, 17, 19, 21, 23, 26, 39, 44], "video": [9, 34], "dictionari": [9, 26, 27, 29, 30, 37], "associ": 9, "aruco": 10, "extend": 11, "defin": [11, 19, 21, 22, 23, 26, 28, 29], "specif": [11, 12, 17, 23, 28, 30, 31, 34], "distortion_coeffici": [11, 12, 14, 15], "numpi": [11, 12, 14, 15], "ndarrai": [11, 12, 14, 15, 18, 19, 21, 23, 24, 34], "distort": [11, 12, 14, 15], "coeffici": [11, 12, 14, 15], "np": [11, 12, 14, 15, 18, 19, 21, 23, 24, 34], "arrai": [11, 12, 14, 23], "repres": [11, 12, 14, 22, 23, 24, 28, 29], "intrinsic_matrix": [11, 12, 14, 15], "intrins": [11, 12, 14, 15], "matrix": [11, 12, 14, 15], "3x3": [11, 12, 14, 23], "resolut": [11, 12, 14, 15, 21, 22, 23, 24, 44], "tupl": [11, 12, 14, 15, 17, 21, 22, 23, 24], "width": [11, 12, 14, 15, 21, 22, 23, 44], "height": [11, 12, 14, 15, 21, 22, 23, 44], "averag": [11, 12, 21, 22, 23, 24], "keyword": [11, 12, 15, 17, 19, 24, 26, 29, 30, 34, 37, 40, 41, 42, 44], "argument": [11, 12, 15, 17, 19, 24, 26, 29, 30, 34, 37, 40, 41, 42, 44], "flircamera": 12, "wrapper": [12, 15, 17, 26, 29, 30, 31, 32], "around": [12, 15, 17, 26, 29, 30, 32], "captur": [12, 15, 23], "singleton": [12, 15, 35], "instanc": [12, 15, 17, 19, 39, 40, 42], "new": [12, 18], "grasshopperflircamera": 12, "special": 12, "grasshopp": 12, "model": 12, "inherit": [12, 14, 21, 22, 23, 24], "036": 12, "145": 12, "001": 12, "155": 12, "1815": 12, "5": 12, "1817": 12, "753": 12, "721": 12, "299": 12, "531": 12, "352": 12, "self": [12, 19, 34, 42], "spinnak": 12, "usual": [12, 30], "As": 12, "write": [12, 17, 34, 36], "2024": 12, "09": 12, "21": 12, "newer": 12, "version": 12, "step": [12, 19, 28, 30], "after": [12, 37], "re": [12, 44], "tar": 12, "xvzf": 12, "spinnaker_python": 12, "cp": 12, "o": 12, "arch": 12, "gz": 12, "whl": 12, "But": 12, "replac": 12, "your": 12, "For": 12, "11": 12, "m2": 12, "mac": 12, "would": 12, "turn": 12, "4": 12, "172": 12, "cp310": 12, "macosx_13_0_arm64": 12, "mv": 12, "cp311": 12, "And": 12, "_pyspin": 12, "cpython": 12, "310": 12, "darwin": 12, "311": 12, "offici": 12, "caus": 12, "issu": [12, 28, 30], "risk": 12, "camera_index": [12, 15], "store": [12, 15, 24, 34], "queue": [12, 15], "stream": [12, 15, 36], "avail": [12, 14, 17, 19, 24, 41], "stop": [12, 15, 17, 23, 24, 37], "deiniti": [12, 15], "flir": [13, 16], "realsens": [13, 16], "load": [14, 21, 34], "pre": [14, 21], "record": [14, 21, 34, 36], "pklcamera": 14, "pkl_path": [14, 21, 44], "read": [14, 17, 34], "pickl": [14, 34], "exhaust": [14, 21], "still": [14, 21], "activ": [14, 21, 23], "placehold": 14, "potenti": 14, "cleanup": [14, 37], "logic": 14, "intel": 15, "devic": [15, 17, 26, 41, 44], "realsensecamera": 15, "pyrealsens": 15, "d435i": 15, "color": [15, 23, 29], "depth": [15, 23, 44], "return_depth": 15, "start_pipeline_onc": 15, "force_autoexposur": 15, "exposur": 15, "rgb": [15, 44], "readi": [15, 18], "rais": [15, 40], "notimplementederror": 15, "yet": 15, "return_rgb": 15, "tmf8828": [16, 20], "vl53l8ch": [16, 20], "kinesis_stepp": [16, 25], "telemetrix_stepp": [16, 25], "safe_seri": 16, "safeseri": 17, "safe": [17, 28, 29, 30, 32], "serial": [17, 24, 41], "commun": [17, 23, 24], "few": 17, "conveni": 17, "lock_typ": 17, "multiprocess": 17, "synchron": [17, 31, 32], "oper": [17, 18, 23, 24, 26, 28, 29, 30, 37], "handl": [17, 18, 24, 37], "format": [17, 36], "classmethod": [17, 40, 42], "wait": [17, 18, 26, 28, 29, 30, 32], "reset": [17, 18, 23, 24], "establish": [17, 28, 30], "connect": [17, 21, 23, 24, 26, 28, 29, 30], "second": [17, 39], "2": [17, 23, 29, 31], "pass": [17, 30, 40, 41], "constructor": [17, 40, 42], "warn": 17, "size": [17, 19, 24], "byte": [17, 24], "wait_for_start_talk": 17, "timeout": [17, 23], "until": [17, 18, 19, 28, 29, 30, 37], "talk": 17, "success": [17, 24], "float": [17, 19, 23, 26, 27, 28, 29, 30], "maximum": [17, 19, 26, 36], "give": 17, "up": [17, 19], "receiv": [17, 23, 24, 28, 30], "wait_for_stop_talk": 17, "write_and_wait_for_start_talk": 17, "tri": 17, "resend": 17, "attempt": [17, 30, 32], "perform": [17, 23, 44], "write_and_wait_for_stop_talk": 17, "return_data": 17, "upon": 17, "statu": [17, 28], "write_and_wait_for_start_and_stop_talk": 17, "event": [17, 18], "__getattr__": [17, 29, 30, 32], "forward": 17, "access": [17, 23, 26, 29, 30, 32, 34], "appli": 17, "prevent": 17, "concurr": 17, "valu": [17, 19, 22, 23, 24, 27, 28, 29, 30, 31, 32, 34, 42], "__del__": [18, 34], "destructor": 18, "sensordata": [18, 23, 24], "its": [18, 26, 27, 28, 29, 30, 40, 41], "state": [18, 23, 26, 28, 30], "row": [18, 23, 24], "get_data": [18, 23, 24], "retriev": [18, 24, 32, 42], "sensordatathread": 18, "clear": [18, 23], "real": 19, "three": 19, "matplotlibdashboard": 19, "matplotlib": [19, 39], "pyqtgraph": 19, "dashdashboard": 19, "dash": 19, "plotli": 19, "web": 19, "callback": [19, 31], "execut": [19, 28, 29], "num_fram": 19, "1000000": [19, 44], "min_bin": [19, 39], "max_bin": [19, 39], "autoscal": [19, 44], "ylim": 19, "channel_mask": 19, "frame": [19, 34, 39], "000": 19, "minimum": 19, "axi": [19, 26, 27, 29, 30], "limit": [19, 26, 28, 30], "channel": [19, 23, 26], "callabl": [19, 34, 37], "accept": [19, 37], "configur": [19, 23, 24, 28], "setup_sensor": 19, "mask": 19, "headless": 19, "independ": 19, "capabl": 19, "being": [19, 42], "non": 19, "plot": [19, 35], "layout": 19, "adjust_ylim": 19, "adjust": 19, "save_anim": 19, "anim": [19, 39], "funcanim": 19, "object": [19, 29, 30, 32, 34, 44], "figur": 19, "unus": 19, "n_interv": 19, "existing_fig": 19, "pklspadsensor": 21, "fake": 21, "simul": 21, "common": [21, 23, 24, 28], "_pkl_path": 21, "_data": 21, "entri": 21, "_data_iter": 21, "over": [21, 23, 29], "_resolut": 21, "spatial": [21, 22], "request": [21, 23, 32], "op": 21, "photon": 22, "avalanch": 22, "diod": 22, "design": 22, "measur": [22, 23], "collect": [22, 23, 29], "analyz": 22, "system": [22, 26, 29, 44], "indic": [22, 23], "discret": 22, "total": [22, 27], "distanc": 22, "equal": 22, "multipli": 22, "where": [22, 32, 34], "pixel": [22, 23, 24, 44], "point": [22, 28, 30], "respect": 22, "dimens": 22, "sum": 22, "vari": 22, "8x8": [23, 24], "multi": [23, 26, 29, 32], "zone": 23, "flight": [23, 24], "am": 23, "wide": 23, "vcsel": 23, "map": 23, "4x4": [23, 24], "3x6": 23, "multizon": 23, "tmf8828sensor": [23, 44], "wa": 23, "tmf882x": [23, 44], "arduino": 23, "shield": 23, "spadid": 23, "kwd": [23, 29], "enum": [23, 29], "pair": [23, 29], "enumer": [23, 29, 40], "red": [23, 29], "blue": [23, 29], "green": [23, 29], "lookup": [23, 29], "know": [23, 29], "mani": [23, 29], "member": [23, 29], "thei": [23, 29], "len": [23, 29], "document": [23, 29, 45], "detail": [23, 29], "get_num_pixel": 23, "get_num_channel": 23, "get_active_channels_per_subcaptur": 23, "per": [23, 30, 39, 44], "subcaptur": 23, "get_resolut": 23, "rangemod": 23, "tmf8828histogram": 23, "spad_id": 23, "has_data": [23, 24], "complet": [23, 26, 28, 29, 30, 44], "temporari": 23, "intern": 23, "string": [23, 24, 32], "copi": [23, 24, 44], "id15": 23, "range_mod": 23, "long": 23, "across": [23, 42], "enabl": [23, 30], "high": 23, "baudrat": [23, 24], "baud": [23, 24], "rate": [23, 24], "includ": [24, 28, 42], "framework": 24, "sensorconfig": 24, "uint16_t": 24, "ranging_mod": 24, "ranging_frequency_hz": 24, "frequenc": 24, "hz": 24, "integration_time_m": 24, "integr": 24, "millisecond": 24, "cnh_start_bin": 24, "cnh": 24, "cnh_num_bin": 24, "cnh_subsampl": 24, "subsampl": 24, "agg_start_x": 24, "aggreg": 24, "coordin": 24, "agg_start_i": 24, "agg_merge_x": 24, "merg": 24, "agg_merge_i": 24, "agg_col": 24, "column": 24, "agg_row": 24, "pack": 24, "structur": 24, "sensorconfigshar": 24, "sensorconfig4x4": 24, "grid": 24, "sensorconfig8x8": 24, "vl53l8chhistogram": 24, "num_pixel": 24, "expect": [24, 28], "config": 24, "acquisit": 24, "kei": [24, 27, 30, 34], "must": [24, 28, 37], "match": 24, "field": 24, "individu": 24, "steppermotor": [26, 28, 29, 30], "kinesi": 26, "kinesissteppermotor": 26, "thorlab": 26, "c": [26, 33], "api": [26, 45], "via": 26, "pylablib": 26, "throlab": 26, "kinesismotor": 26, "window": 26, "linux": 26, "is_rack_system": 26, "scale": 26, "movement": 26, "posit": [26, 27, 28, 29, 30, 34, 40, 42], "part": 26, "rack": 26, "factor": 26, "absolut": [26, 28, 30], "healthi": [26, 28, 30], "lower_limit": 26, "lower": 26, "upper_limit": 26, "upper": 26, "max_veloc": 26, "acceler": 26, "clip_at_limit": 26, "initial_posit": 26, "reference_posit": 26, "check_hom": 26, "veloc": 26, "clip": 26, "move": [26, 27, 28, 29, 30], "dure": 26, "opposit": [26, 30], "successfulli": 26, "zero": [26, 28, 30], "move_bi": [26, 28, 29, 30], "relative_posit": [26, 28, 30], "amount": [26, 28, 30], "wait_for_mov": [26, 28, 29, 30], "kinesisrotationstag": 26, "kinesissteppermotorsystem": [26, 44], "ax": [26, 28, 29, 30], "whole": [26, 29], "steppermotorsystemaxi": [26, 29], "attach": [26, 28, 29, 30], "instanti": [26, 27, 40], "azimuthelevationsystem": [26, 44], "predefin": [26, 28, 30], "azimuth": [26, 44], "elev": 26, "steppercontrol": 27, "factori": [27, 40], "given": [27, 40, 44], "axis_config": 27, "empti": [27, 32], "exce": 27, "unifi": [28, 30], "compat": 28, "unit": [28, 29], "could": [28, 30], "involv": [28, 30], "verifi": [28, 30], "power": [28, 29, 30], "shut": [28, 29, 30], "avoid": [28, 29], "damag": [28, 29], "memori": [28, 29, 34], "leak": [28, 29], "switch": [28, 30], "trigger": [28, 30], "known": [28, 30], "interpret": 28, "characterist": 28, "g": [28, 44], "angl": 28, "degre": 28, "other": 28, "reach": [28, 29], "motion": [28, 29], "dummysteppermotor": 28, "dummi": [28, 29], "doe": [28, 29], "noth": [28, 29], "rotat": 29, "stage": 29, "passthrough": [29, 30], "underli": [29, 30, 32], "dummysteppersystem": [29, 44], "telemetrixsteppermotor": 30, "telemetrixsteppermotorsystem": 30, "telemetrix": 30, "cncshield": 30, "board": 30, "distance_pin": 30, "direction_pin": 30, "enable_pin": 30, "cm_per_rev": 30, "steps_per_rev": 30, "speed": [30, 33], "flip_direct": 30, "note": 30, "effect": 30, "call": [30, 37, 42], "set_current_posit": 30, "explicitli": 30, "pin": 30, "centimet": 30, "revolut": 30, "cm": 30, "direct": 30, "set_target_position_cm": 30, "relative_cm": 30, "set_absolute_target_position_cm": 30, "position_cm": 30, "cm_to_rev": 30, "revs_to_cm": 30, "rev": 30, "stepper_": 30, "motorx": 30, "target_posit": 30, "equat": 30, "_board": 30, "stepper_target_posit": 30, "we": 30, "ll": 30, "auto": 30, "telemetrixsteppermotorx": 30, "telemetrixsteppermotori": 30, "telemetrixsteppermotorz": 30, "telemetrixsteppermotorxrevers": 30, "telemetrixsteppermotoryrevers": 30, "telemetrixsteppermotorzrevers": 30, "dualdrive2axisgantry_x": 30, "dualdrive2axisgantry_y1": 30, "dualdrive2axisgantry_y2": 30, "dualdrive2axisgantri": [30, 44], "singledrive1axisgantry_x": 30, "singledrive1axisgantry_i": 30, "asynchron": 31, "call_async": 31, "fn": 31, "wrap": [31, 32], "call_async_gath": 31, "call_async_valu": 31, "idx": 31, "dequ": 32, "item": 32, "blockingdequ": 32, "condit": 32, "suitabl": 32, "notifi": 32, "manner": 32, "__getitem__": 32, "__len__": [32, 34], "__repr__": 32, "represent": 32, "300000000": 33, "light": 33, "overwrit": 34, "update_index_kwarg": 34, "random": 34, "entir": 34, "handler": [34, 36], "another_kei": 34, "another_valu": 34, "update_index": 34, "prune_fn": 34, "lambda": 34, "_": 34, "build": [34, 44], "scan": 34, "_index": 34, "filter": [34, 36], "take": 34, "exclud": 34, "first": 34, "load_al": 34, "extract": 34, "videowrit": 34, "fp": [34, 39], "flush_interv": 34, "buffer": 34, "period": 34, "flush": 34, "interv": 34, "mp4": 34, "30": 34, "remain": 34, "delet": 34, "asyncio_util": 35, "blocking_dequ": 35, "constant": 35, "misc": 35, "transform": 35, "tqdm": 36, "messag": [36, 44], "consol": 36, "filehandl": 36, "doesn": 36, "tqdmstreamhandl": 36, "streamhandl": 36, "emit": 36, "formatt": 36, "trail": 36, "newlin": 36, "inform": 36, "present": 36, "traceback": [36, 37], "print_except": 36, "encod": 36, "determin": 36, "loggermaxlevelfilt": 36, "max_level": 36, "deem": 36, "appropri": 36, "modifi": 36, "place": 36, "compon": 37, "context": 37, "100": 37, "protocol": 37, "essenti": 37, "just": 37, "begin": 37, "__enter__": 37, "__exit__": 37, "exc_typ": 37, "exc_valu": 37, "miscellan": 38, "set_matplotlib_styl": 39, "use_scienceplot": 39, "transient_gui": 39, "normalize_per_pixel": 39, "gui": 39, "transient": 39, "decor": 40, "regist": 40, "class_typ": 40, "found": 40, "registrybas": 40, "find_device_by_label": 41, "label": 41, "find": 41, "volum": 41, "search": 41, "find_port": 41, "cl": 41, "metaclass": 42, "pattern": 42, "combin": 42, "singleton_meta": 42, "singletonabcmeta": 42, "mysingleton": 42, "instance1": 42, "instance2": 42, "singletonmeta": 42, "__call__": 42, "abcmeta": 42, "enforc": 42, "3d": 43, "space": 43, "line": 44, "160": 44, "completioninstal": 44, "shell": 44, "completionshow": 44, "helpshow": 44, "exit": 44, "four": 44, "legaci": 44, "twice": 44, "text": 44, "filenametext": 44, "elevationsystem": 44, "systemsystem": 44, "kinesisstep": 44, "permotorsystem": 44, "singledrive1axisg": 44, "antri": 44, "porttext": 44, "sketch": 44, "scriptpath": 44, "storag": 44, "tty": 44, "media": 44, "usernam": 44, "device_nam": 44, "verbos": 44, "feed": 44, "dashboard_typ": 44, "spad_typ": 44, "dashboard_typetext": 44, "num": 44, "framesinteg": 44, "ylimfloat": 44, "min": 44, "bininteg": 44, "max": 44, "127": 44, "idinteg": 44, "6": 44, "short": 44, "fpsinteg": 44, "binsinteg": 44, "32": 44, "pkl_pathpath": 44, "lt": 44, "gt": 44, "p": 44, "exposureinteg": 44, "aruco_dicttext": 44, "sizefloat": 44, "8": 44, "samplesinteg": 44, "cli": 45}, "objects": {"": [[10, 0, 0, "-", "algos"], [16, 0, 0, "-", "drivers"], [35, 0, 0, "-", "utils"]], "algos": [[8, 0, 0, "-", "algorithm"], [9, 0, 0, "-", "aruco"]], "algos.algorithm": [[8, 1, 1, "", "Algorithm"]], "algos.algorithm.Algorithm": [[8, 2, 1, "", "close"], [8, 3, 1, "", "is_okay"], [8, 2, 1, "", "run"]], "algos.aruco": [[9, 1, 1, "", "ArucoLocalizationAlgorithm"]], "algos.aruco.ArucoLocalizationAlgorithm": [[9, 2, 1, "", "close"], [9, 3, 1, "", "is_okay"], [9, 2, 1, "", "run"]], "cc_hardware": [[44, 0, 0, "-", "tools"]], "drivers": [[13, 0, 0, "-", "cameras"], [17, 0, 0, "-", "safe_serial"], [18, 0, 0, "-", "sensor"], [20, 0, 0, "-", "spads"], [25, 0, 0, "-", "stepper_motors"]], "drivers.cameras": [[11, 0, 0, "-", "camera"], [12, 0, 0, "-", "flir"], [14, 0, 0, "-", "pkl"], [15, 0, 0, "-", "realsense"]], "drivers.cameras.camera": [[11, 1, 1, "", "Camera"]], "drivers.cameras.camera.Camera": [[11, 2, 1, "", "accumulate"], [11, 3, 1, "", "distortion_coefficients"], [11, 3, 1, "", "intrinsic_matrix"], [11, 3, 1, "", "resolution"]], "drivers.cameras.flir": [[12, 1, 1, "", "FlirCamera"], [12, 1, 1, "", "GrasshopperFlirCamera"]], "drivers.cameras.flir.FlirCamera": [[12, 2, 1, "", "accumulate"], [12, 2, 1, "", "close"], [12, 3, 1, "", "is_okay"], [12, 3, 1, "", "resolution"]], "drivers.cameras.flir.GrasshopperFlirCamera": [[12, 3, 1, "", "distortion_coefficients"], [12, 3, 1, "", "intrinsic_matrix"]], "drivers.cameras.pkl": [[14, 1, 1, "", "PklCamera"]], "drivers.cameras.pkl.PklCamera": [[14, 2, 1, "", "accumulate"], [14, 2, 1, "", "close"], [14, 3, 1, "", "distortion_coefficients"], [14, 3, 1, "", "intrinsic_matrix"], [14, 3, 1, "", "is_okay"], [14, 3, 1, "", "resolution"]], "drivers.cameras.realsense": [[15, 1, 1, "", "RealsenseCamera"]], "drivers.cameras.realsense.RealsenseCamera": [[15, 2, 1, "", "accumulate"], [15, 2, 1, "", "close"], [15, 3, 1, "", "distortion_coefficients"], [15, 3, 1, "", "intrinsic_matrix"], [15, 3, 1, "", "is_okay"], [15, 3, 1, "", "resolution"]], "drivers.safe_serial": [[17, 1, 1, "", "SafeSerial"]], "drivers.safe_serial.SafeSerial": [[17, 2, 1, "", "__getattr__"], [17, 2, 1, "", "create"], [17, 2, 1, "", "read"], [17, 2, 1, "", "wait_for_start_talk"], [17, 2, 1, "", "wait_for_stop_talk"], [17, 2, 1, "", "write"], [17, 2, 1, "", "write_and_wait_for_start_and_stop_talk"], [17, 2, 1, "", "write_and_wait_for_start_talk"], [17, 2, 1, "", "write_and_wait_for_stop_talk"]], "drivers.sensor": [[18, 1, 1, "", "Sensor"], [18, 1, 1, "", "SensorData"], [18, 1, 1, "", "SensorDataThreaded"]], "drivers.sensor.Sensor": [[18, 2, 1, "", "__del__"], [18, 2, 1, "", "calibrate"], [18, 2, 1, "", "close"], [18, 3, 1, "", "is_okay"]], "drivers.sensor.SensorData": [[18, 2, 1, "", "get_data"], [18, 2, 1, "", "process"], [18, 2, 1, "", "reset"]], "drivers.sensor.SensorDataThreaded": [[18, 2, 1, "", "get_data"], [18, 2, 1, "", "reset"]], "drivers.spads": [[19, 0, 0, "-", "dashboard"], [21, 0, 0, "-", "pkl"], [22, 0, 0, "-", "spad"], [23, 0, 0, "-", "tmf8828"], [24, 0, 0, "-", "vl53l8ch"]], "drivers.spads.dashboard": [[19, 1, 1, "", "DashDashboard"], [19, 1, 1, "", "MatplotlibDashboard"], [19, 1, 1, "", "PyQtGraphDashboard"], [19, 1, 1, "", "SPADDashboard"]], "drivers.spads.dashboard.DashDashboard": [[19, 2, 1, "", "run"], [19, 2, 1, "", "setup"], [19, 2, 1, "", "update"]], "drivers.spads.dashboard.MatplotlibDashboard": [[19, 2, 1, "", "adjust_ylim"], [19, 2, 1, "", "run"], [19, 2, 1, "", "save_animation"], [19, 2, 1, "", "setup"], [19, 2, 1, "", "update"]], "drivers.spads.dashboard.PyQtGraphDashboard": [[19, 2, 1, "", "run"], [19, 2, 1, "", "setup"], [19, 2, 1, "", "update"]], "drivers.spads.dashboard.SPADDashboard": [[19, 3, 1, "", "max_bin"], [19, 3, 1, "", "min_bin"], [19, 2, 1, "", "run"], [19, 2, 1, "", "setup"], [19, 2, 1, "", "setup_sensor"], [19, 2, 1, "", "update"]], "drivers.spads.pkl": [[21, 1, 1, "", "PklSPADSensor"]], "drivers.spads.pkl.PklSPADSensor": [[21, 2, 1, "", "accumulate"], [21, 2, 1, "", "close"], [21, 3, 1, "", "is_okay"], [21, 3, 1, "", "num_bins"], [21, 3, 1, "", "resolution"]], "drivers.spads.spad": [[22, 1, 1, "", "SPADSensor"]], "drivers.spads.spad.SPADSensor": [[22, 2, 1, "", "accumulate"], [22, 3, 1, "", "num_bins"], [22, 3, 1, "", "resolution"]], "drivers.spads.tmf8828": [[23, 1, 1, "", "RangeMode"], [23, 1, 1, "", "SPADID"], [23, 1, 1, "", "TMF8828Histogram"], [23, 1, 1, "", "TMF8828Sensor"]], "drivers.spads.tmf8828.SPADID": [[23, 2, 1, "", "get_active_channels_per_subcapture"], [23, 2, 1, "", "get_num_channels"], [23, 2, 1, "", "get_num_pixels"], [23, 2, 1, "", "get_resolution"]], "drivers.spads.tmf8828.TMF8828Histogram": [[23, 2, 1, "", "get_data"], [23, 3, 1, "", "has_data"], [23, 2, 1, "", "process"], [23, 2, 1, "", "reset"]], "drivers.spads.tmf8828.TMF8828Sensor": [[23, 2, 1, "", "accumulate"], [23, 2, 1, "", "calibrate"], [23, 2, 1, "", "close"], [23, 3, 1, "", "is_okay"], [23, 3, 1, "", "num_bins"], [23, 3, 1, "", "resolution"]], "drivers.spads.vl53l8ch": [[24, 1, 1, "", "SensorConfig"], [24, 1, 1, "", "SensorConfig4x4"], [24, 1, 1, "", "SensorConfig8x8"], [24, 1, 1, "", "SensorConfigShared"], [24, 1, 1, "", "VL53L8CHHistogram"], [24, 1, 1, "", "VL53L8CHSensor"]], "drivers.spads.vl53l8ch.SensorConfig": [[24, 2, 1, "", "pack"]], "drivers.spads.vl53l8ch.VL53L8CHHistogram": [[24, 2, 1, "", "get_data"], [24, 3, 1, "", "has_data"], [24, 2, 1, "", "process"], [24, 2, 1, "", "reset"]], "drivers.spads.vl53l8ch.VL53L8CHSensor": [[24, 2, 1, "", "accumulate"], [24, 2, 1, "", "close"], [24, 3, 1, "", "is_okay"], [24, 3, 1, "", "num_bins"], [24, 3, 1, "", "resolution"], [24, 2, 1, "", "update"]], "drivers.stepper_motors": [[26, 0, 0, "-", "kinesis_stepper"], [27, 0, 0, "-", "stepper_controller"], [28, 0, 0, "-", "stepper_motor"], [29, 0, 0, "-", "stepper_system"], [30, 0, 0, "-", "telemetrix_stepper"]], "drivers.stepper_motors.kinesis_stepper": [[26, 1, 1, "", "AzimuthElevationSystem"], [26, 1, 1, "", "KinesisRotationStage"], [26, 1, 1, "", "KinesisStepperMotor"], [26, 1, 1, "", "KinesisStepperMotorSystem"]], "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage": [[26, 2, 1, "", "initialize"]], "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor": [[26, 2, 1, "", "close"], [26, 2, 1, "", "home"], [26, 2, 1, "", "initialize"], [26, 3, 1, "", "is_okay"], [26, 3, 1, "", "lower_limit"], [26, 2, 1, "", "move_by"], [26, 2, 1, "", "move_to"], [26, 3, 1, "", "position"], [26, 3, 1, "", "upper_limit"], [26, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_controller": [[27, 1, 1, "", "SnakeStepperController"], [27, 1, 1, "", "StepperController"]], "drivers.stepper_motors.stepper_controller.SnakeStepperController": [[27, 2, 1, "", "get_position"]], "drivers.stepper_motors.stepper_controller.StepperController": [[27, 2, 1, "", "get_position"]], "drivers.stepper_motors.stepper_motor": [[28, 1, 1, "", "DummyStepperMotor"], [28, 1, 1, "", "StepperMotor"]], "drivers.stepper_motors.stepper_motor.StepperMotor": [[28, 2, 1, "", "close"], [28, 2, 1, "", "home"], [28, 3, 1, "", "is_okay"], [28, 2, 1, "", "move_by"], [28, 2, 1, "", "move_to"], [28, 3, 1, "", "position"], [28, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_system": [[29, 1, 1, "", "DummyStepperSystem"], [29, 1, 1, "", "StepperMotorSystem"], [29, 1, 1, "", "StepperMotorSystemAxis"]], "drivers.stepper_motors.stepper_system.DummyStepperSystem": [[29, 2, 1, "", "close"], [29, 2, 1, "", "move_by"], [29, 2, 1, "", "move_to"], [29, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.stepper_system.StepperMotorSystem": [[29, 2, 1, "", "__getattr__"], [29, 2, 1, "", "close"], [29, 2, 1, "", "move_by"], [29, 2, 1, "", "move_to"], [29, 3, 1, "", "position"], [29, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.telemetrix_stepper": [[30, 1, 1, "", "DualDrive2AxisGantry"], [30, 1, 1, "", "DualDrive2AxisGantry_X"], [30, 1, 1, "", "DualDrive2AxisGantry_Y1"], [30, 1, 1, "", "DualDrive2AxisGantry_Y2"], [30, 1, 1, "", "SingleDrive1AxisGantry"], [30, 1, 1, "", "SingleDrive1AxisGantry_X"], [30, 1, 1, "", "SingleDrive1AxisGantry_Y"], [30, 1, 1, "", "TelemetrixStepperMotor"], [30, 1, 1, "", "TelemetrixStepperMotorSystem"], [30, 1, 1, "", "TelemetrixStepperMotorX"], [30, 1, 1, "", "TelemetrixStepperMotorXReversed"], [30, 1, 1, "", "TelemetrixStepperMotorY"], [30, 1, 1, "", "TelemetrixStepperMotorYReversed"], [30, 1, 1, "", "TelemetrixStepperMotorZ"], [30, 1, 1, "", "TelemetrixStepperMotorZReversed"]], "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor": [[30, 2, 1, "", "__getattr__"], [30, 2, 1, "", "close"], [30, 2, 1, "", "cm_to_revs"], [30, 2, 1, "", "home"], [30, 3, 1, "", "id"], [30, 3, 1, "", "is_okay"], [30, 2, 1, "", "move_by"], [30, 2, 1, "", "move_to"], [30, 3, 1, "", "position"], [30, 2, 1, "", "revs_to_cm"], [30, 2, 1, "", "set_absolute_target_position_cm"], [30, 2, 1, "", "set_target_position_cm"], [30, 2, 1, "", "wait_for_move"]], "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem": [[30, 2, 1, "", "close"], [30, 2, 1, "", "home"], [30, 3, 1, "", "is_okay"]], "utils": [[31, 0, 0, "-", "asyncio_utils"], [32, 0, 0, "-", "blocking_deque"], [33, 0, 0, "-", "constants"], [34, 0, 0, "-", "file_handlers"], [36, 0, 0, "-", "logger"], [37, 0, 0, "-", "manager"], [38, 0, 0, "-", "misc"], [39, 0, 0, "-", "plotting"], [40, 0, 0, "-", "registry"], [41, 0, 0, "-", "serial_utils"], [42, 0, 0, "-", "singleton"], [43, 0, 0, "-", "transformations"]], "utils.asyncio_utils": [[31, 4, 1, "", "call_async"], [31, 4, 1, "", "call_async_gather"], [31, 4, 1, "", "call_async_value"]], "utils.blocking_deque": [[32, 1, 1, "", "BlockingDeque"]], "utils.blocking_deque.BlockingDeque": [[32, 2, 1, "", "__getattr__"], [32, 2, 1, "", "__getitem__"], [32, 2, 1, "", "__len__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "append"]], "utils.constants": [[33, 5, 1, "", "C"]], "utils.file_handlers": [[34, 1, 1, "", "PklHandler"], [34, 1, 1, "", "VideoWriter"]], "utils.file_handlers.PklHandler": [[34, 2, 1, "", "__len__"], [34, 2, 1, "", "append"], [34, 2, 1, "", "load"], [34, 2, 1, "", "load_all"], [34, 2, 1, "", "update_index"], [34, 2, 1, "", "write"]], "utils.file_handlers.VideoWriter": [[34, 2, 1, "", "__del__"], [34, 2, 1, "", "append"], [34, 2, 1, "", "close"]], "utils.logger": [[36, 1, 1, "", "FileHandler"], [36, 1, 1, "", "LoggerMaxLevelFilter"], [36, 1, 1, "", "TqdmStreamHandler"]], "utils.logger.LoggerMaxLevelFilter": [[36, 2, 1, "", "filter"]], "utils.logger.TqdmStreamHandler": [[36, 2, 1, "", "emit"]], "utils.manager": [[37, 1, 1, "", "Component"], [37, 1, 1, "", "Manager"]], "utils.manager.Component": [[37, 2, 1, "", "close"], [37, 3, 1, "", "is_okay"]], "utils.manager.Manager": [[37, 2, 1, "", "__enter__"], [37, 2, 1, "", "__exit__"], [37, 2, 1, "", "add"], [37, 2, 1, "", "close"], [37, 3, 1, "", "components"], [37, 3, 1, "", "is_okay"], [37, 2, 1, "", "run"]], "utils.plotting": [[39, 4, 1, "", "set_matplotlib_style"], [39, 4, 1, "", "transient_gui"]], "utils.registry": [[40, 1, 1, "", "Registry"], [40, 4, 1, "", "register"]], "utils.registry.Registry": [[40, 2, 1, "", "create_from_registry"], [40, 2, 1, "", "register"], [40, 2, 1, "", "registered"], [40, 2, 1, "", "registry"]], "utils.serial_utils": [[41, 4, 1, "", "find_device_by_label"], [41, 4, 1, "", "find_ports"]], "utils.singleton": [[42, 1, 1, "", "SingletonABCMeta"], [42, 1, 1, "", "SingletonMeta"]], "utils.singleton.SingletonMeta": [[42, 2, 1, "", "__call__"], [42, 2, 1, "", "instance"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"contribut": 1, "setup": 1, "clone": 1, "repo": [1, 6], "instal": [1, 12], "deploi": 1, "your": 1, "chang": 1, "guidelin": 1, "file": 1, "structur": [1, 6], "edit": 1, "sourc": 1, "code": 1, "comment": 1, "document": [1, 44], "build": 1, "exampl": 2, "spad": [3, 19, 20, 21, 22, 23, 24, 44], "dashboard": [3, 19, 44], "stepper": [4, 5], "gantri": 4, "collab": 4, "motor": 5, "control": 5, "camera": [6, 11, 12, 13, 14, 15, 44], "cultur": 6, "hardwar": 6, "get": 6, "start": 6, "packag": [6, 7], "api": 7, "refer": [7, 45], "algo": [8, 9, 10], "algorithm": 8, "modul": [8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42], "content": [8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42], "class": [8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 40, 42], "aruco": [9, 44], "submodul": [10, 13, 16, 20, 25, 35], "driver": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "flir": [12, 44], "pyspin": 12, "pkl": [14, 21, 44], "realsens": [15, 44], "subpackag": 16, "safe_seri": 17, "sensor": 18, "tmf8828": [23, 44], "vl53l8ch": [24, 44], "stepper_motor": [25, 26, 27, 28, 29, 30], "kinesis_stepp": 26, "stepper_control": 27, "stepper_system": 29, "telemetrix_stepp": 30, "util": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "asyncio_util": 31, "function": [31, 39, 40, 41], "blocking_dequ": 32, "constant": 33, "file_handl": 34, "logger": 36, "manag": 37, "misc": 38, "plot": 39, "registri": 40, "serial_util": 41, "singleton": 42, "transform": 43, "cli": 44, "cc_hardwar": 44, "calib": 44, "calibr": 44, "jogger": 44, "run": 44, "serial": 44, "arduino": 44, "upload": 44, "vi": 44, "transient": 44, "viewer": 44, "local": 44, "estim": 44, "posit": 44}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributing": [[1, "contributing"]], "Setup": [[1, "setup"]], "Cloning the Repo": [[1, "cloning-the-repo"]], "Installing": [[1, "installing"]], "Deploy your Changes": [[1, "deploy-your-changes"]], "Guidelines": [[1, "guidelines"]], "File Structure": [[1, "file-structure"]], "Editing the Source Code": [[1, "editing-the-source-code"]], "Commenting": [[1, "commenting"]], "Editing the Documentation": [[1, "editing-the-documentation"]], "Building the Documentation": [[1, "building-the-documentation"]], "Examples": [[2, "examples"]], "SPAD Dashboard": [[3, "spad-dashboard"]], "Stepper Gantry Collab": [[4, "stepper-gantry-collab"]], "Stepper Motor Controller": [[5, "stepper-motor-controller"]], "Camera Culture Hardware Repo": [[6, "camera-culture-hardware-repo"]], "Getting Started": [[6, "getting-started"]], "Repo Structure": [[6, "repo-structure"]], "Package Structure": [[6, "package-structure"]], "API Reference": [[7, "api-reference"]], "Packages": [[7, "packages"]], "algos.algorithm": [[8, "module-algos.algorithm"]], "Module Contents": [[8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [36, "module-contents"], [37, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"]], "Classes": [[8, "classes"], [9, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [32, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [40, "classes"], [42, "classes"]], "algos.aruco": [[9, "module-algos.aruco"]], "algos": [[10, "module-algos"]], "Submodules": [[10, "submodules"], [13, "submodules"], [16, "submodules"], [20, "submodules"], [25, "submodules"], [35, "submodules"]], "drivers.cameras.camera": [[11, "module-drivers.cameras.camera"]], "drivers.cameras.flir": [[12, "module-drivers.cameras.flir"]], "PySpin Installation": [[12, "pyspin-installation"]], "drivers.cameras": [[13, "module-drivers.cameras"]], "drivers.cameras.pkl": [[14, "module-drivers.cameras.pkl"]], "drivers.cameras.realsense": [[15, "module-drivers.cameras.realsense"]], "drivers": [[16, "module-drivers"]], "Subpackages": [[16, "subpackages"]], "drivers.safe_serial": [[17, "module-drivers.safe_serial"]], "drivers.sensor": [[18, "module-drivers.sensor"]], "drivers.spads.dashboard": [[19, "module-drivers.spads.dashboard"]], "drivers.spads": [[20, "module-drivers.spads"]], "drivers.spads.pkl": [[21, "module-drivers.spads.pkl"]], "drivers.spads.spad": [[22, "module-drivers.spads.spad"]], "drivers.spads.tmf8828": [[23, "module-drivers.spads.tmf8828"]], "drivers.spads.vl53l8ch": [[24, "module-drivers.spads.vl53l8ch"]], "drivers.stepper_motors": [[25, "module-drivers.stepper_motors"]], "drivers.stepper_motors.kinesis_stepper": [[26, "module-drivers.stepper_motors.kinesis_stepper"]], "drivers.stepper_motors.stepper_controller": [[27, "module-drivers.stepper_motors.stepper_controller"]], "drivers.stepper_motors.stepper_motor": [[28, "module-drivers.stepper_motors.stepper_motor"]], "drivers.stepper_motors.stepper_system": [[29, "module-drivers.stepper_motors.stepper_system"]], "drivers.stepper_motors.telemetrix_stepper": [[30, "module-drivers.stepper_motors.telemetrix_stepper"]], "utils.asyncio_utils": [[31, "module-utils.asyncio_utils"]], "Functions": [[31, "functions"], [39, "functions"], [40, "functions"], [41, "functions"]], "utils.blocking_deque": [[32, "module-utils.blocking_deque"]], "utils.constants": [[33, "module-utils.constants"]], "utils.file_handlers": [[34, "module-utils.file_handlers"]], "utils": [[35, "module-utils"]], "utils.logger": [[36, "module-utils.logger"]], "utils.manager": [[37, "module-utils.manager"]], "utils.misc": [[38, "module-utils.misc"]], "utils.plotting": [[39, "module-utils.plotting"]], "utils.registry": [[40, "module-utils.registry"]], "utils.serial_utils": [[41, "module-utils.serial_utils"]], "utils.singleton": [[42, "module-utils.singleton"]], "utils.transformations": [[43, "module-utils.transformations"]], "CLI Documentation": [[44, "module-cc_hardware.tools"]], "cc_hardware": [[44, "cc-hardware"]], "calib": [[44, "cc-hardware-calib"]], "tmf8828-calibrate": [[44, "cc-hardware-calib-tmf8828-calibrate"]], "jogger": [[44, "cc-hardware-jogger"]], "run": [[44, "cc-hardware-jogger-run"]], "serial": [[44, "cc-hardware-serial"]], "arduino-upload": [[44, "cc-hardware-serial-arduino-upload"]], "tmf8828-upload": [[44, "cc-hardware-serial-tmf8828-upload"]], "vl53l8ch-upload": [[44, "cc-hardware-serial-vl53l8ch-upload"]], "vis": [[44, "cc-hardware-vis"]], "spad-dashboard": [[44, "cc-hardware-vis-spad-dashboard"]], "tmf8828-transient-viewer": [[44, "cc-hardware-vis-tmf8828-transient-viewer"]], "vl53l8ch-transient-viewer": [[44, "cc-hardware-vis-vl53l8ch-transient-viewer"]], "pkl-transient-viewer": [[44, "cc-hardware-vis-pkl-transient-viewer"]], "flir-camera-viewer": [[44, "cc-hardware-vis-flir-camera-viewer"]], "pkl-camera-viewer": [[44, "cc-hardware-vis-pkl-camera-viewer"]], "realsense-camera-viewer": [[44, "cc-hardware-vis-realsense-camera-viewer"]], "flir-aruco-localization": [[44, "cc-hardware-vis-flir-aruco-localization"]], "pkl-aruco-localization": [[44, "cc-hardware-vis-pkl-aruco-localization"]], "pkl-estimated-position": [[44, "cc-hardware-vis-pkl-estimated-position"]], "Reference": [[45, "reference"]]}, "indexentries": {"algorithm (class in algos.algorithm)": [[8, "algos.algorithm.Algorithm"]], "algos.algorithm": [[8, "module-algos.algorithm"]], "close() (algorithm method)": [[8, "algos.algorithm.Algorithm.close"]], "is_okay (algorithm property)": [[8, "algos.algorithm.Algorithm.is_okay"]], "module": [[8, "module-algos.algorithm"], [9, "module-algos.aruco"], [10, "module-algos"], [11, "module-drivers.cameras.camera"], [12, "module-drivers.cameras.flir"], [13, "module-drivers.cameras"], [14, "module-drivers.cameras.pkl"], [15, "module-drivers.cameras.realsense"], [16, "module-drivers"], [17, "module-drivers.safe_serial"], [18, "module-drivers.sensor"], [19, "module-drivers.spads.dashboard"], [20, "module-drivers.spads"], [21, "module-drivers.spads.pkl"], [22, "module-drivers.spads.spad"], [23, "module-drivers.spads.tmf8828"], [24, "module-drivers.spads.vl53l8ch"], [25, "module-drivers.stepper_motors"], [26, "module-drivers.stepper_motors.kinesis_stepper"], [27, "module-drivers.stepper_motors.stepper_controller"], [28, "module-drivers.stepper_motors.stepper_motor"], [29, "module-drivers.stepper_motors.stepper_system"], [30, "module-drivers.stepper_motors.telemetrix_stepper"], [31, "module-utils.asyncio_utils"], [32, "module-utils.blocking_deque"], [33, "module-utils.constants"], [34, "module-utils.file_handlers"], [35, "module-utils"], [36, "module-utils.logger"], [37, "module-utils.manager"], [38, "module-utils.misc"], [39, "module-utils.plotting"], [40, "module-utils.registry"], [41, "module-utils.serial_utils"], [42, "module-utils.singleton"], [43, "module-utils.transformations"], [44, "module-cc_hardware.tools"]], "run() (algorithm method)": [[8, "algos.algorithm.Algorithm.run"]], "arucolocalizationalgorithm (class in algos.aruco)": [[9, "algos.aruco.ArucoLocalizationAlgorithm"]], "algos.aruco": [[9, "module-algos.aruco"]], "close() (arucolocalizationalgorithm method)": [[9, "algos.aruco.ArucoLocalizationAlgorithm.close"]], "is_okay (arucolocalizationalgorithm property)": [[9, "algos.aruco.ArucoLocalizationAlgorithm.is_okay"]], "run() (arucolocalizationalgorithm method)": [[9, "algos.aruco.ArucoLocalizationAlgorithm.run"]], "algos": [[10, "module-algos"]], "camera (class in drivers.cameras.camera)": [[11, "drivers.cameras.camera.Camera"]], "accumulate() (camera method)": [[11, "drivers.cameras.camera.Camera.accumulate"]], "distortion_coefficients (camera property)": [[11, "drivers.cameras.camera.Camera.distortion_coefficients"]], "drivers.cameras.camera": [[11, "module-drivers.cameras.camera"]], "intrinsic_matrix (camera property)": [[11, "drivers.cameras.camera.Camera.intrinsic_matrix"]], "resolution (camera property)": [[11, "drivers.cameras.camera.Camera.resolution"]], "flircamera (class in drivers.cameras.flir)": [[12, "drivers.cameras.flir.FlirCamera"]], "grasshopperflircamera (class in drivers.cameras.flir)": [[12, "drivers.cameras.flir.GrasshopperFlirCamera"]], "accumulate() (flircamera method)": [[12, "drivers.cameras.flir.FlirCamera.accumulate"]], "close() (flircamera method)": [[12, "drivers.cameras.flir.FlirCamera.close"]], "distortion_coefficients (grasshopperflircamera property)": [[12, "drivers.cameras.flir.GrasshopperFlirCamera.distortion_coefficients"]], "drivers.cameras.flir": [[12, "module-drivers.cameras.flir"]], "intrinsic_matrix (grasshopperflircamera property)": [[12, "drivers.cameras.flir.GrasshopperFlirCamera.intrinsic_matrix"]], "is_okay (flircamera property)": [[12, "drivers.cameras.flir.FlirCamera.is_okay"]], "resolution (flircamera property)": [[12, "drivers.cameras.flir.FlirCamera.resolution"]], "drivers.cameras": [[13, "module-drivers.cameras"]], "pklcamera (class in drivers.cameras.pkl)": [[14, "drivers.cameras.pkl.PklCamera"]], "accumulate() (pklcamera method)": [[14, "drivers.cameras.pkl.PklCamera.accumulate"]], "close() (pklcamera method)": [[14, "drivers.cameras.pkl.PklCamera.close"]], "distortion_coefficients (pklcamera property)": [[14, "drivers.cameras.pkl.PklCamera.distortion_coefficients"]], "drivers.cameras.pkl": [[14, "module-drivers.cameras.pkl"]], "intrinsic_matrix (pklcamera property)": [[14, "drivers.cameras.pkl.PklCamera.intrinsic_matrix"]], "is_okay (pklcamera property)": [[14, "drivers.cameras.pkl.PklCamera.is_okay"]], "resolution (pklcamera property)": [[14, "drivers.cameras.pkl.PklCamera.resolution"]], "realsensecamera (class in drivers.cameras.realsense)": [[15, "drivers.cameras.realsense.RealsenseCamera"]], "accumulate() (realsensecamera method)": [[15, "drivers.cameras.realsense.RealsenseCamera.accumulate"]], "close() (realsensecamera method)": [[15, "drivers.cameras.realsense.RealsenseCamera.close"]], "distortion_coefficients (realsensecamera property)": [[15, "drivers.cameras.realsense.RealsenseCamera.distortion_coefficients"]], "drivers.cameras.realsense": [[15, "module-drivers.cameras.realsense"]], "intrinsic_matrix (realsensecamera property)": [[15, "drivers.cameras.realsense.RealsenseCamera.intrinsic_matrix"]], "is_okay (realsensecamera property)": [[15, "drivers.cameras.realsense.RealsenseCamera.is_okay"]], "resolution (realsensecamera property)": [[15, "drivers.cameras.realsense.RealsenseCamera.resolution"]], "drivers": [[16, "module-drivers"]], "safeserial (class in drivers.safe_serial)": [[17, "drivers.safe_serial.SafeSerial"]], "__getattr__() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.__getattr__"]], "create() (safeserial class method)": [[17, "drivers.safe_serial.SafeSerial.create"]], "drivers.safe_serial": [[17, "module-drivers.safe_serial"]], "read() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.read"]], "wait_for_start_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.wait_for_start_talk"]], "wait_for_stop_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.wait_for_stop_talk"]], "write() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.write"]], "write_and_wait_for_start_and_stop_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.write_and_wait_for_start_and_stop_talk"]], "write_and_wait_for_start_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.write_and_wait_for_start_talk"]], "write_and_wait_for_stop_talk() (safeserial method)": [[17, "drivers.safe_serial.SafeSerial.write_and_wait_for_stop_talk"]], "sensor (class in drivers.sensor)": [[18, "drivers.sensor.Sensor"]], "sensordata (class in drivers.sensor)": [[18, "drivers.sensor.SensorData"]], "sensordatathreaded (class in drivers.sensor)": [[18, "drivers.sensor.SensorDataThreaded"]], "__del__() (sensor method)": [[18, "drivers.sensor.Sensor.__del__"]], "calibrate() (sensor method)": [[18, "drivers.sensor.Sensor.calibrate"]], "close() (sensor method)": [[18, "drivers.sensor.Sensor.close"]], "drivers.sensor": [[18, "module-drivers.sensor"]], "get_data() (sensordata method)": [[18, "drivers.sensor.SensorData.get_data"]], "get_data() (sensordatathreaded method)": [[18, "drivers.sensor.SensorDataThreaded.get_data"]], "is_okay (sensor property)": [[18, "drivers.sensor.Sensor.is_okay"]], "process() (sensordata method)": [[18, "drivers.sensor.SensorData.process"]], "reset() (sensordata method)": [[18, "drivers.sensor.SensorData.reset"]], "reset() (sensordatathreaded method)": [[18, "drivers.sensor.SensorDataThreaded.reset"]], "dashdashboard (class in drivers.spads.dashboard)": [[19, "drivers.spads.dashboard.DashDashboard"]], "matplotlibdashboard (class in drivers.spads.dashboard)": [[19, "drivers.spads.dashboard.MatplotlibDashboard"]], "pyqtgraphdashboard (class in drivers.spads.dashboard)": [[19, "drivers.spads.dashboard.PyQtGraphDashboard"]], "spaddashboard (class in drivers.spads.dashboard)": [[19, "drivers.spads.dashboard.SPADDashboard"]], "adjust_ylim() (matplotlibdashboard method)": [[19, "drivers.spads.dashboard.MatplotlibDashboard.adjust_ylim"]], "drivers.spads.dashboard": [[19, "module-drivers.spads.dashboard"]], "max_bin (spaddashboard property)": [[19, "drivers.spads.dashboard.SPADDashboard.max_bin"]], "min_bin (spaddashboard property)": [[19, "drivers.spads.dashboard.SPADDashboard.min_bin"]], "run() (dashdashboard method)": [[19, "drivers.spads.dashboard.DashDashboard.run"]], "run() (matplotlibdashboard method)": [[19, "drivers.spads.dashboard.MatplotlibDashboard.run"]], "run() (pyqtgraphdashboard method)": [[19, "drivers.spads.dashboard.PyQtGraphDashboard.run"]], "run() (spaddashboard method)": [[19, "drivers.spads.dashboard.SPADDashboard.run"]], "save_animation() (matplotlibdashboard method)": [[19, "drivers.spads.dashboard.MatplotlibDashboard.save_animation"]], "setup() (dashdashboard method)": [[19, "drivers.spads.dashboard.DashDashboard.setup"]], "setup() (matplotlibdashboard method)": [[19, "drivers.spads.dashboard.MatplotlibDashboard.setup"]], "setup() (pyqtgraphdashboard method)": [[19, "drivers.spads.dashboard.PyQtGraphDashboard.setup"]], "setup() (spaddashboard method)": [[19, "drivers.spads.dashboard.SPADDashboard.setup"]], "setup_sensor() (spaddashboard method)": [[19, "drivers.spads.dashboard.SPADDashboard.setup_sensor"]], "update() (dashdashboard method)": [[19, "drivers.spads.dashboard.DashDashboard.update"]], "update() (matplotlibdashboard method)": [[19, "drivers.spads.dashboard.MatplotlibDashboard.update"]], "update() (pyqtgraphdashboard method)": [[19, "drivers.spads.dashboard.PyQtGraphDashboard.update"]], "update() (spaddashboard method)": [[19, "drivers.spads.dashboard.SPADDashboard.update"]], "drivers.spads": [[20, "module-drivers.spads"]], "pklspadsensor (class in drivers.spads.pkl)": [[21, "drivers.spads.pkl.PklSPADSensor"]], "accumulate() (pklspadsensor method)": [[21, "drivers.spads.pkl.PklSPADSensor.accumulate"]], "close() (pklspadsensor method)": [[21, "drivers.spads.pkl.PklSPADSensor.close"]], "drivers.spads.pkl": [[21, "module-drivers.spads.pkl"]], "is_okay (pklspadsensor property)": [[21, "drivers.spads.pkl.PklSPADSensor.is_okay"]], "num_bins (pklspadsensor property)": [[21, "drivers.spads.pkl.PklSPADSensor.num_bins"]], "resolution (pklspadsensor property)": [[21, "drivers.spads.pkl.PklSPADSensor.resolution"]], "spadsensor (class in drivers.spads.spad)": [[22, "drivers.spads.spad.SPADSensor"]], "accumulate() (spadsensor method)": [[22, "drivers.spads.spad.SPADSensor.accumulate"]], "drivers.spads.spad": [[22, "module-drivers.spads.spad"]], "num_bins (spadsensor property)": [[22, "drivers.spads.spad.SPADSensor.num_bins"]], "resolution (spadsensor property)": [[22, "drivers.spads.spad.SPADSensor.resolution"]], "rangemode (class in drivers.spads.tmf8828)": [[23, "drivers.spads.tmf8828.RangeMode"]], "spadid (class in drivers.spads.tmf8828)": [[23, "drivers.spads.tmf8828.SPADID"]], "tmf8828histogram (class in drivers.spads.tmf8828)": [[23, "drivers.spads.tmf8828.TMF8828Histogram"]], "tmf8828sensor (class in drivers.spads.tmf8828)": [[23, "drivers.spads.tmf8828.TMF8828Sensor"]], "accumulate() (tmf8828sensor method)": [[23, "drivers.spads.tmf8828.TMF8828Sensor.accumulate"]], "calibrate() (tmf8828sensor method)": [[23, "drivers.spads.tmf8828.TMF8828Sensor.calibrate"]], "close() (tmf8828sensor method)": [[23, "drivers.spads.tmf8828.TMF8828Sensor.close"]], "drivers.spads.tmf8828": [[23, "module-drivers.spads.tmf8828"]], "get_active_channels_per_subcapture() (spadid method)": [[23, "drivers.spads.tmf8828.SPADID.get_active_channels_per_subcapture"]], "get_data() (tmf8828histogram method)": [[23, "drivers.spads.tmf8828.TMF8828Histogram.get_data"]], "get_num_channels() (spadid method)": [[23, "drivers.spads.tmf8828.SPADID.get_num_channels"]], "get_num_pixels() (spadid method)": [[23, "drivers.spads.tmf8828.SPADID.get_num_pixels"]], "get_resolution() (spadid method)": [[23, "drivers.spads.tmf8828.SPADID.get_resolution"]], "has_data (tmf8828histogram property)": [[23, "drivers.spads.tmf8828.TMF8828Histogram.has_data"]], "is_okay (tmf8828sensor property)": [[23, "drivers.spads.tmf8828.TMF8828Sensor.is_okay"]], "num_bins (tmf8828sensor property)": [[23, "drivers.spads.tmf8828.TMF8828Sensor.num_bins"]], "process() (tmf8828histogram method)": [[23, "drivers.spads.tmf8828.TMF8828Histogram.process"]], "reset() (tmf8828histogram method)": [[23, "drivers.spads.tmf8828.TMF8828Histogram.reset"]], "resolution (tmf8828sensor property)": [[23, "drivers.spads.tmf8828.TMF8828Sensor.resolution"]], "sensorconfig (class in drivers.spads.vl53l8ch)": [[24, "drivers.spads.vl53l8ch.SensorConfig"]], "sensorconfig4x4 (class in drivers.spads.vl53l8ch)": [[24, "drivers.spads.vl53l8ch.SensorConfig4x4"]], "sensorconfig8x8 (class in drivers.spads.vl53l8ch)": [[24, "drivers.spads.vl53l8ch.SensorConfig8x8"]], "sensorconfigshared (class in drivers.spads.vl53l8ch)": [[24, "drivers.spads.vl53l8ch.SensorConfigShared"]], "vl53l8chhistogram (class in drivers.spads.vl53l8ch)": [[24, "drivers.spads.vl53l8ch.VL53L8CHHistogram"]], "vl53l8chsensor (class in drivers.spads.vl53l8ch)": [[24, "drivers.spads.vl53l8ch.VL53L8CHSensor"]], "accumulate() (vl53l8chsensor method)": [[24, "drivers.spads.vl53l8ch.VL53L8CHSensor.accumulate"]], "close() (vl53l8chsensor method)": [[24, "drivers.spads.vl53l8ch.VL53L8CHSensor.close"]], "drivers.spads.vl53l8ch": [[24, "module-drivers.spads.vl53l8ch"]], "get_data() (vl53l8chhistogram method)": [[24, "drivers.spads.vl53l8ch.VL53L8CHHistogram.get_data"]], "has_data (vl53l8chhistogram property)": [[24, "drivers.spads.vl53l8ch.VL53L8CHHistogram.has_data"]], "is_okay (vl53l8chsensor property)": [[24, "drivers.spads.vl53l8ch.VL53L8CHSensor.is_okay"]], "num_bins (vl53l8chsensor property)": [[24, "drivers.spads.vl53l8ch.VL53L8CHSensor.num_bins"]], "pack() (sensorconfig method)": [[24, "drivers.spads.vl53l8ch.SensorConfig.pack"]], "process() (vl53l8chhistogram method)": [[24, "drivers.spads.vl53l8ch.VL53L8CHHistogram.process"]], "reset() (vl53l8chhistogram method)": [[24, "drivers.spads.vl53l8ch.VL53L8CHHistogram.reset"]], "resolution (vl53l8chsensor property)": [[24, "drivers.spads.vl53l8ch.VL53L8CHSensor.resolution"]], "update() (vl53l8chsensor method)": [[24, "drivers.spads.vl53l8ch.VL53L8CHSensor.update"]], "drivers.stepper_motors": [[25, "module-drivers.stepper_motors"]], "azimuthelevationsystem (class in drivers.stepper_motors.kinesis_stepper)": [[26, "drivers.stepper_motors.kinesis_stepper.AzimuthElevationSystem"]], "kinesisrotationstage (class in drivers.stepper_motors.kinesis_stepper)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage"]], "kinesissteppermotor (class in drivers.stepper_motors.kinesis_stepper)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor"]], "kinesissteppermotorsystem (class in drivers.stepper_motors.kinesis_stepper)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotorSystem"]], "close() (kinesissteppermotor method)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.close"]], "drivers.stepper_motors.kinesis_stepper": [[26, "module-drivers.stepper_motors.kinesis_stepper"]], "home() (kinesissteppermotor method)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.home"]], "initialize() (kinesisrotationstage method)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisRotationStage.initialize"]], "initialize() (kinesissteppermotor method)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.initialize"]], "is_okay (kinesissteppermotor property)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.is_okay"]], "lower_limit (kinesissteppermotor property)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.lower_limit"]], "move_by() (kinesissteppermotor method)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.move_by"]], "move_to() (kinesissteppermotor method)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.move_to"]], "position (kinesissteppermotor property)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.position"]], "upper_limit (kinesissteppermotor property)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.upper_limit"]], "wait_for_move() (kinesissteppermotor method)": [[26, "drivers.stepper_motors.kinesis_stepper.KinesisStepperMotor.wait_for_move"]], "snakesteppercontroller (class in drivers.stepper_motors.stepper_controller)": [[27, "drivers.stepper_motors.stepper_controller.SnakeStepperController"]], "steppercontroller (class in drivers.stepper_motors.stepper_controller)": [[27, "drivers.stepper_motors.stepper_controller.StepperController"]], "drivers.stepper_motors.stepper_controller": [[27, "module-drivers.stepper_motors.stepper_controller"]], "get_position() (snakesteppercontroller method)": [[27, "drivers.stepper_motors.stepper_controller.SnakeStepperController.get_position"]], "get_position() (steppercontroller method)": [[27, "drivers.stepper_motors.stepper_controller.StepperController.get_position"]], "dummysteppermotor (class in drivers.stepper_motors.stepper_motor)": [[28, "drivers.stepper_motors.stepper_motor.DummyStepperMotor"]], "steppermotor (class in drivers.stepper_motors.stepper_motor)": [[28, "drivers.stepper_motors.stepper_motor.StepperMotor"]], "close() (steppermotor method)": [[28, "drivers.stepper_motors.stepper_motor.StepperMotor.close"]], "drivers.stepper_motors.stepper_motor": [[28, "module-drivers.stepper_motors.stepper_motor"]], "home() (steppermotor method)": [[28, "drivers.stepper_motors.stepper_motor.StepperMotor.home"]], "is_okay (steppermotor property)": [[28, "drivers.stepper_motors.stepper_motor.StepperMotor.is_okay"]], "move_by() (steppermotor method)": [[28, "drivers.stepper_motors.stepper_motor.StepperMotor.move_by"]], "move_to() (steppermotor method)": [[28, "drivers.stepper_motors.stepper_motor.StepperMotor.move_to"]], "position (steppermotor property)": [[28, "drivers.stepper_motors.stepper_motor.StepperMotor.position"]], "wait_for_move() (steppermotor method)": [[28, "drivers.stepper_motors.stepper_motor.StepperMotor.wait_for_move"]], "dummysteppersystem (class in drivers.stepper_motors.stepper_system)": [[29, "drivers.stepper_motors.stepper_system.DummyStepperSystem"]], "steppermotorsystem (class in drivers.stepper_motors.stepper_system)": [[29, "drivers.stepper_motors.stepper_system.StepperMotorSystem"]], "steppermotorsystemaxis (class in drivers.stepper_motors.stepper_system)": [[29, "drivers.stepper_motors.stepper_system.StepperMotorSystemAxis"]], "__getattr__() (steppermotorsystem method)": [[29, "drivers.stepper_motors.stepper_system.StepperMotorSystem.__getattr__"]], "close() (dummysteppersystem method)": [[29, "drivers.stepper_motors.stepper_system.DummyStepperSystem.close"]], "close() (steppermotorsystem method)": [[29, "drivers.stepper_motors.stepper_system.StepperMotorSystem.close"]], "drivers.stepper_motors.stepper_system": [[29, "module-drivers.stepper_motors.stepper_system"]], "move_by() (dummysteppersystem method)": [[29, "drivers.stepper_motors.stepper_system.DummyStepperSystem.move_by"]], "move_by() (steppermotorsystem method)": [[29, "drivers.stepper_motors.stepper_system.StepperMotorSystem.move_by"]], "move_to() (dummysteppersystem method)": [[29, "drivers.stepper_motors.stepper_system.DummyStepperSystem.move_to"]], "move_to() (steppermotorsystem method)": [[29, "drivers.stepper_motors.stepper_system.StepperMotorSystem.move_to"]], "position (steppermotorsystem property)": [[29, "drivers.stepper_motors.stepper_system.StepperMotorSystem.position"]], "wait_for_move() (dummysteppersystem method)": [[29, "drivers.stepper_motors.stepper_system.DummyStepperSystem.wait_for_move"]], "wait_for_move() (steppermotorsystem method)": [[29, "drivers.stepper_motors.stepper_system.StepperMotorSystem.wait_for_move"]], "dualdrive2axisgantry (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry"]], "dualdrive2axisgantry_x (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_X"]], "dualdrive2axisgantry_y1 (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_Y1"]], "dualdrive2axisgantry_y2 (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.DualDrive2AxisGantry_Y2"]], "singledrive1axisgantry (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry"]], "singledrive1axisgantry_x (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry_X"]], "singledrive1axisgantry_y (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.SingleDrive1AxisGantry_Y"]], "telemetrixsteppermotor (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor"]], "telemetrixsteppermotorsystem (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem"]], "telemetrixsteppermotorx (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorX"]], "telemetrixsteppermotorxreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorXReversed"]], "telemetrixsteppermotory (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorY"]], "telemetrixsteppermotoryreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorYReversed"]], "telemetrixsteppermotorz (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorZ"]], "telemetrixsteppermotorzreversed (class in drivers.stepper_motors.telemetrix_stepper)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorZReversed"]], "__getattr__() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.__getattr__"]], "close() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.close"]], "close() (telemetrixsteppermotorsystem method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem.close"]], "cm_to_revs() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.cm_to_revs"]], "drivers.stepper_motors.telemetrix_stepper": [[30, "module-drivers.stepper_motors.telemetrix_stepper"]], "home() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.home"]], "home() (telemetrixsteppermotorsystem method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem.home"]], "id (telemetrixsteppermotor property)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.id"]], "is_okay (telemetrixsteppermotor property)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.is_okay"]], "is_okay (telemetrixsteppermotorsystem property)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotorSystem.is_okay"]], "move_by() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.move_by"]], "move_to() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.move_to"]], "position (telemetrixsteppermotor property)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.position"]], "revs_to_cm() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.revs_to_cm"]], "set_absolute_target_position_cm() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.set_absolute_target_position_cm"]], "set_target_position_cm() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.set_target_position_cm"]], "wait_for_move() (telemetrixsteppermotor method)": [[30, "drivers.stepper_motors.telemetrix_stepper.TelemetrixStepperMotor.wait_for_move"]], "call_async() (in module utils.asyncio_utils)": [[31, "utils.asyncio_utils.call_async"]], "call_async_gather() (in module utils.asyncio_utils)": [[31, "utils.asyncio_utils.call_async_gather"]], "call_async_value() (in module utils.asyncio_utils)": [[31, "utils.asyncio_utils.call_async_value"]], "utils.asyncio_utils": [[31, "module-utils.asyncio_utils"]], "blockingdeque (class in utils.blocking_deque)": [[32, "utils.blocking_deque.BlockingDeque"]], "__getattr__() (blockingdeque method)": [[32, "utils.blocking_deque.BlockingDeque.__getattr__"]], "__getitem__() (blockingdeque method)": [[32, "utils.blocking_deque.BlockingDeque.__getitem__"]], "__len__() (blockingdeque method)": [[32, "utils.blocking_deque.BlockingDeque.__len__"]], "__repr__() (blockingdeque method)": [[32, "utils.blocking_deque.BlockingDeque.__repr__"]], "append() (blockingdeque method)": [[32, "utils.blocking_deque.BlockingDeque.append"]], "utils.blocking_deque": [[32, "module-utils.blocking_deque"]], "c (in module utils.constants)": [[33, "utils.constants.C"]], "utils.constants": [[33, "module-utils.constants"]], "pklhandler (class in utils.file_handlers)": [[34, "utils.file_handlers.PklHandler"]], "videowriter (class in utils.file_handlers)": [[34, "utils.file_handlers.VideoWriter"]], "__del__() (videowriter method)": [[34, "utils.file_handlers.VideoWriter.__del__"]], "__len__() (pklhandler method)": [[34, "utils.file_handlers.PklHandler.__len__"]], "append() (pklhandler method)": [[34, "utils.file_handlers.PklHandler.append"]], "append() (videowriter method)": [[34, "utils.file_handlers.VideoWriter.append"]], "close() (videowriter method)": [[34, "utils.file_handlers.VideoWriter.close"]], "load() (pklhandler method)": [[34, "utils.file_handlers.PklHandler.load"]], "load_all() (pklhandler static method)": [[34, "utils.file_handlers.PklHandler.load_all"]], "update_index() (pklhandler method)": [[34, "utils.file_handlers.PklHandler.update_index"]], "utils.file_handlers": [[34, "module-utils.file_handlers"]], "write() (pklhandler method)": [[34, "utils.file_handlers.PklHandler.write"]], "utils": [[35, "module-utils"]], "filehandler (class in utils.logger)": [[36, "utils.logger.FileHandler"]], "loggermaxlevelfilter (class in utils.logger)": [[36, "utils.logger.LoggerMaxLevelFilter"]], "tqdmstreamhandler (class in utils.logger)": [[36, "utils.logger.TqdmStreamHandler"]], "emit() (tqdmstreamhandler method)": [[36, "utils.logger.TqdmStreamHandler.emit"]], "filter() (loggermaxlevelfilter method)": [[36, "utils.logger.LoggerMaxLevelFilter.filter"]], "utils.logger": [[36, "module-utils.logger"]], "component (class in utils.manager)": [[37, "utils.manager.Component"]], "manager (class in utils.manager)": [[37, "utils.manager.Manager"]], "__enter__() (manager method)": [[37, "utils.manager.Manager.__enter__"]], "__exit__() (manager method)": [[37, "utils.manager.Manager.__exit__"]], "add() (manager method)": [[37, "utils.manager.Manager.add"]], "close() (component method)": [[37, "utils.manager.Component.close"]], "close() (manager method)": [[37, "utils.manager.Manager.close"]], "components (manager property)": [[37, "utils.manager.Manager.components"]], "is_okay (component property)": [[37, "utils.manager.Component.is_okay"]], "is_okay (manager property)": [[37, "utils.manager.Manager.is_okay"]], "run() (manager method)": [[37, "utils.manager.Manager.run"]], "utils.manager": [[37, "module-utils.manager"]], "utils.misc": [[38, "module-utils.misc"]], "set_matplotlib_style() (in module utils.plotting)": [[39, "utils.plotting.set_matplotlib_style"]], "transient_gui() (in module utils.plotting)": [[39, "utils.plotting.transient_gui"]], "utils.plotting": [[39, "module-utils.plotting"]], "registry (class in utils.registry)": [[40, "utils.registry.Registry"]], "create_from_registry() (registry class method)": [[40, "utils.registry.Registry.create_from_registry"]], "register() (registry class method)": [[40, "utils.registry.Registry.register"]], "register() (in module utils.registry)": [[40, "utils.registry.register"]], "registered() (registry method)": [[40, "utils.registry.Registry.registered"]], "registry() (registry method)": [[40, "utils.registry.Registry.registry"]], "utils.registry": [[40, "module-utils.registry"]], "find_device_by_label() (in module utils.serial_utils)": [[41, "utils.serial_utils.find_device_by_label"]], "find_ports() (in module utils.serial_utils)": [[41, "utils.serial_utils.find_ports"]], "utils.serial_utils": [[41, "module-utils.serial_utils"]], "singletonabcmeta (class in utils.singleton)": [[42, "utils.singleton.SingletonABCMeta"]], "singletonmeta (class in utils.singleton)": [[42, "utils.singleton.SingletonMeta"]], "__call__() (singletonmeta method)": [[42, "utils.singleton.SingletonMeta.__call__"]], "instance() (singletonmeta class method)": [[42, "utils.singleton.SingletonMeta.instance"]], "utils.singleton": [[42, "module-utils.singleton"]], "utils.transformations": [[43, "module-utils.transformations"]], "cc_hardware.tools": [[44, "module-cc_hardware.tools"]]}})